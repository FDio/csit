{
  "comments": [
    {
      "key": {
        "uuid": "275ca892_452c3538",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 720,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-01-07T16:10:17Z",
      "side": 1,
      "message": "I just realized [0] says the persistent hugepages are distributed accross all NUMA nodes (skipping those without enough continuous free memory).\n\nSo reading from /sys/devices/system/node/node{numa}/hugepages/hugepages-{size}kB/ may be better. Although I am not sure about the info there (whether free_hugepages is equal to free_hugepages from /mm/, or to free_hugepages - resv_hugepages).",
      "range": {
        "startLine": 720,
        "startChar": 24,
        "endLine": 720,
        "endChar": 49
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18503056_7091d6d3",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 720,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-01-08T08:09:29Z",
      "side": 1,
      "message": "I would for now stick with global Hugepages counter. As we are using both numas and writing to /mm will increase both of them to that number.",
      "parentUuid": "275ca892_452c3538",
      "range": {
        "startLine": 720,
        "startChar": 24,
        "endLine": 720,
        "endChar": 49
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe942c05_906d2848",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 720,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-01-08T13:47:26Z",
      "side": 1,
      "message": "Alright, but add some debug outputs so we can verify the number of free hugepages decreases on the correct numa.",
      "parentUuid": "18503056_7091d6d3",
      "range": {
        "startLine": 720,
        "startChar": 24,
        "endLine": 720,
        "endChar": 49
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bd3a326_c32d3fe1",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 720,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-01-08T15:17:11Z",
      "side": 1,
      "message": "No, every SSH is taking 0.1 to 0.3s (0.5 running locally) I am strictly watching now how many commands we are sending to machines as CSIT is waay too slow and removing all not essential for functionality",
      "parentUuid": "fe942c05_906d2848",
      "range": {
        "startLine": 720,
        "startChar": 24,
        "endLine": 720,
        "endChar": 49
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0804bdf_de2bb6c4",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 720,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-01-08T15:38:29Z",
      "side": 1,
      "message": "Ok. What about a child change (to be abandoned after review)?",
      "parentUuid": "0bd3a326_c32d3fe1",
      "range": {
        "startLine": 720,
        "startChar": 24,
        "endLine": 720,
        "endChar": 49
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56b4b60c_33c3c694",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 720,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-01-08T16:29:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f0804bdf_de2bb6c4",
      "range": {
        "startLine": 720,
        "startChar": 24,
        "endLine": 720,
        "endChar": 49
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91e6375f_4765b791",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 762,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-01-07T16:10:17Z",
      "side": 1,
      "message": "] - hugepages[u\"resv_hugepages\"]\n\nAfter that edit I still think we should add the results of lines 758 and 762, but it is ok to use only a single value if we want to be conservative.",
      "range": {
        "startLine": 762,
        "startChar": 56,
        "endLine": 762,
        "endChar": 57
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c5aa826_fac7ea09",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 762,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-01-08T08:09:29Z",
      "side": 1,
      "message": "When there is not overcommit configured there is no results of 756 (they are zeroed)",
      "parentUuid": "91e6375f_4765b791",
      "range": {
        "startLine": 762,
        "startChar": 56,
        "endLine": 762,
        "endChar": 57
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e33f78dc_f61e609e",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 762,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-01-08T13:47:26Z",
      "side": 1,
      "message": "\u003e (they are zeroed)\n\nSo no reason not to include in the computation?\nThe current \"if\" (758) looks like a workaround for some misbehavior, but I do not think the misbehavior is really there.",
      "parentUuid": "8c5aa826_fac7ea09",
      "range": {
        "startLine": 762,
        "startChar": 56,
        "endLine": 762,
        "endChar": 57
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b907405f_0adf0cf2",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 762,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-01-08T15:17:11Z",
      "side": 1,
      "message": "I wanted backward stability this was tested to be working which is proofed to be working.",
      "parentUuid": "e33f78dc_f61e609e",
      "range": {
        "startLine": 762,
        "startChar": 56,
        "endLine": 762,
        "endChar": 57
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a67f9da9_d27b0b96",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 762,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-01-08T15:38:29Z",
      "side": 1,
      "message": "Ok, if you add a comment saying this applies an ad-hoc workaround that worked when tested.",
      "parentUuid": "b907405f_0adf0cf2",
      "range": {
        "startLine": 762,
        "startChar": 56,
        "endLine": 762,
        "endChar": 57
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b858c3ec_99bfad18",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 762,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-01-08T16:29:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a67f9da9_d27b0b96",
      "range": {
        "startLine": 762,
        "startChar": 56,
        "endLine": 762,
        "endChar": 57
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4d009f0_dfd238a8",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 764,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-01-07T16:10:17Z",
      "side": 1,
      "message": "/\n\n// rounds down, e.g. 1000//1024 \u003d\u003d 0\nand Python has no problem comparing a float to an int.",
      "range": {
        "startLine": 764,
        "startChar": 30,
        "endLine": 764,
        "endChar": 32
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bafa1f4_c277e616",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 764,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-01-08T08:09:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e4d009f0_dfd238a8",
      "range": {
        "startLine": 764,
        "startChar": 30,
        "endLine": 764,
        "endChar": 32
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47f66d0f_0d34c082",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 769,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-01-07T16:10:17Z",
      "side": 1,
      "message": "What does this magic do? I would understand * 2 as (I believe) our machines have 2 numas.",
      "range": {
        "startLine": 769,
        "startChar": 48,
        "endLine": 769,
        "endChar": 52
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed317e82_d6785c92",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 769,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-01-08T08:09:29Z",
      "side": 1,
      "message": "Not related to numas. \"must be greater than or equal to (2 * vm.nr_hugepages).\" - doc. So rule of thumbs from previous experiments and 4 is higher than 2*nr_huge",
      "parentUuid": "47f66d0f_0d34c082",
      "range": {
        "startLine": 769,
        "startChar": 48,
        "endLine": 769,
        "endChar": 52
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cf0bd0a_1ee2b81e",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 769,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-01-08T13:47:26Z",
      "side": 1,
      "message": "\u003e \"must be greater than or equal to\"\n\nNot found in [0]. Which doc (or phrase) should I look at?\n\n\u003e to (2 * vm.nr_hugepages)\n\nThen why not just:\n  max_map_count \u003d math.ceil(huge_needed + 2 * hugepages[u\"nr_hugepages\"])\n\nOnce again, lines 768-769 look like a workaround, but I do not know around what.",
      "parentUuid": "ed317e82_d6785c92",
      "range": {
        "startLine": 769,
        "startChar": 48,
        "endLine": 769,
        "endChar": 52
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "307a77c8_2c6ba6af",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 6
      },
      "lineNbr": 769,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-01-08T15:17:11Z",
      "side": 1,
      "message": "No workaround. It is real. Default system value is not working. Sorry no time to dig the google now. I think it was numactl tuning app.",
      "parentUuid": "0cf0bd0a_1ee2b81e",
      "range": {
        "startLine": 769,
        "startChar": 48,
        "endLine": 769,
        "endChar": 52
      },
      "revId": "91d83effb0a4aa88138f711229ff09a4378f510f",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}