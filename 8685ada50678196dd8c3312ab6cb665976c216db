{
  "comments": [
    {
      "key": {
        "uuid": "4c15aa93_98a14cc8",
        "filename": "resources/libraries/python/Constants.py",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-07-10T10:30:48Z",
      "side": 1,
      "message": "To me. Does not make sense. File says Constants not dynamic variables. If (and i guess Vratko) point is to have it in Yaml then dynamical is not really in place",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 30,
        "endChar": 46
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17adba89_553e46d7",
        "filename": "resources/libraries/python/Constants.py",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-07-10T10:30:48Z",
      "side": 1,
      "message": "same as above. I would keep it simple static.",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 79,
        "endChar": 52
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26c9b39b_5d3d59c2",
        "filename": "resources/libraries/python/Constants.py",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-07-10T12:26:41Z",
      "side": 1,
      "message": "Well, I could be convinced that \"constant\" means \"immutable after initialization\", and that \"initialization\" does not need to be static, and side effects such as reading from file can have benefits (e.g. when accessing already established source of truth).\n\nBut in this specific case, files such as VPP_DEVICE_IMAGE_UBUNTU should have contents immutable at runtime. Otherwise it is just a question of time until somebody contributes an accidental edit.",
      "parentUuid": "17adba89_553e46d7",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 79,
        "endChar": 52
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "706230b7_a2b4ebe2",
        "filename": "resources/libraries/python/Constants.py",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-07-10T20:16:20Z",
      "side": 1,
      "message": "I am more thinking of this file to be yaml/txt based without option to have code in it.\nAlso please note it is not very clever to have this variable to be linked with VPP_DEVICE_IMAGE as there still could be a reason why people will for NF density images use different one. I made this as a single image in past from purely convenient way as se still do not have proper ci/cd. So it was fast enough to use existing pre-cached image.\n\nThose global files are consumed by BASH mainly for bootstraping underlay infra. While constant.py is more pybot inside infra.",
      "parentUuid": "26c9b39b_5d3d59c2",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 79,
        "endChar": 52
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b8700f1_63342aa8",
        "filename": "resources/libraries/python/Constants.py",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 576
      },
      "writtenOn": "2019-07-11T07:36:21Z",
      "side": 1,
      "message": "I get it now, the image used for NF/memif tests doesn\u0027t necessarily have to (and probably shouldn\u0027t) be the same as the image used for VPP Device testbed.\n\nFor that reason, just having a string here is the way to go. There\u0027s another question looming - how do we support multiple architectures? Should we have a separate variable for each in case the image names are different?",
      "parentUuid": "706230b7_a2b4ebe2",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 79,
        "endChar": 52
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bf7e071_4443ddc2",
        "filename": "resources/libraries/python/Constants.py",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-07-11T08:06:16Z",
      "side": 1,
      "message": "It is similar why for VM test we are not using VIRL image (although we could). But could be that in future we might diverge",
      "parentUuid": "4b8700f1_63342aa8",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 79,
        "endChar": 52
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f47f4e8b_df091041",
        "filename": "resources/libraries/python/ContainerUtils.py",
        "patchSetId": 4
      },
      "lineNbr": 787,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-07-10T12:26:41Z",
      "side": 1,
      "message": "In this case, I recommend to access IMAGE_VER_FILE set by select_os in common.sh (needs exporting as environment variable there, and reading it here), so put your arch detection there if possible.",
      "range": {
        "startLine": 787,
        "startChar": 45,
        "endLine": 787,
        "endChar": 78
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c2c913c_bdcb4895",
        "filename": "resources/libraries/python/ContainerUtils.py",
        "patchSetId": 4
      },
      "lineNbr": 787,
      "author": {
        "id": 576
      },
      "writtenOn": "2019-07-10T14:34:04Z",
      "side": 1,
      "message": "Do you mean using constants.REPO_ROOT with getenv(\u0027IMAGE_VER_FILE\u0027)? I like that.\n\nWhat should be the default if IMAGE_VER_FILE is not set?",
      "parentUuid": "f47f4e8b_df091041",
      "range": {
        "startLine": 787,
        "startChar": 45,
        "endLine": 787,
        "endChar": 78
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b18ddef_e9a41463",
        "filename": "resources/libraries/python/ContainerUtils.py",
        "patchSetId": 4
      },
      "lineNbr": 787,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-07-10T15:17:03Z",
      "side": 1,
      "message": "\u003e Do you mean using constants.REPO_ROOT\n\nNo, I mean not even introducing REPO_ROOT, as there is no need (yet) to read files there.\n\n\u003e getenv(\u0027IMAGE_VER_FILE\u0027)\n\nYes. Perhaps exported as CSIT_IMAGE_VER_FILE (but that practice has not made it into bash_code_style.rst yet, currently I would prefer FDIO_CSIT_ prefix).\nStill with ubuntu amd64 value as default when the env variable is not set, to simplify life for people running pybot directly (without bootstrap scripts).",
      "parentUuid": "7c2c913c_bdcb4895",
      "range": {
        "startLine": 787,
        "startChar": 45,
        "endLine": 787,
        "endChar": 78
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d62990e_b3c90755",
        "filename": "resources/libraries/python/ContainerUtils.py",
        "patchSetId": 4
      },
      "lineNbr": 787,
      "author": {
        "id": 576
      },
      "writtenOn": "2019-07-10T15:25:27Z",
      "side": 1,
      "message": "This is what I see in common.sh:\nIMAGE_VER_FILE\u003d\"VPP_DEVICE_IMAGE_UBUNTU\"\n\nI would still need to read that file to get the actual image name. I how would I know where the file is without REPO_ROOT? Or should I get that from the node using REMOTE_FW_DIR? That seems convoluted.",
      "parentUuid": "2b18ddef_e9a41463",
      "range": {
        "startLine": 787,
        "startChar": 45,
        "endLine": 787,
        "endChar": 78
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d9253f0_282a56a5",
        "filename": "resources/libraries/python/ContainerUtils.py",
        "patchSetId": 4
      },
      "lineNbr": 787,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-07-10T15:47:33Z",
      "side": 1,
      "message": "Right, sorry. Now I see the actual use is in activate_docker_topology to fill device_image variable. We want to export (already in select_os) that value, instead of filename it was read from.",
      "parentUuid": "5d62990e_b3c90755",
      "range": {
        "startLine": 787,
        "startChar": 45,
        "endLine": 787,
        "endChar": 78
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f26945fe_f5bbe877",
        "filename": "resources/libraries/python/ContainerUtils.py",
        "patchSetId": 4
      },
      "lineNbr": 787,
      "author": {
        "id": 576
      },
      "writtenOn": "2019-07-10T15:55:16Z",
      "side": 1,
      "message": "Ok, that makes sense. Is this the right patch to make this change (IMAGE_VER_FILE -\u003e FDIO_CSIT_IMAGE (possibly FDIO_CSIT_DOCKER_IMAGE?), the same for VPP version) or should we create a separate patch?",
      "parentUuid": "3d9253f0_282a56a5",
      "range": {
        "startLine": 787,
        "startChar": 45,
        "endLine": 787,
        "endChar": 78
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4c56977_a94f9e2e",
        "filename": "resources/libraries/python/ContainerUtils.py",
        "patchSetId": 4
      },
      "lineNbr": 787,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-07-10T16:02:47Z",
      "side": 1,
      "message": "For me it is easier to review the two edits in a single change, especially since the name of the exported variable is not chosen yet.",
      "parentUuid": "f26945fe_f5bbe877",
      "range": {
        "startLine": 787,
        "startChar": 45,
        "endLine": 787,
        "endChar": 78
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a2fc7b9_2b0c23ae",
        "filename": "resources/libraries/python/ContainerUtils.py",
        "patchSetId": 4
      },
      "lineNbr": 787,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-07-10T20:16:20Z",
      "side": 1,
      "message": "See my comment aside. I still think to not mix up outside infra file with inner NF density image which could be different in fact. So i would keep the Constants.NF_IMAGE \u003d snergster/smthing:tag",
      "parentUuid": "c4c56977_a94f9e2e",
      "range": {
        "startLine": 787,
        "startChar": 45,
        "endLine": 787,
        "endChar": 78
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d94bf17c_6b9fcd9f",
        "filename": "resources/libraries/python/ContainerUtils.py",
        "patchSetId": 4
      },
      "lineNbr": 787,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-07-11T10:10:01Z",
      "side": 1,
      "message": "\u003e inner NF density image which could be different in fact\n\nDifferent and hardcoded, or different and configurable? I prefer the latter.\nThen select_os can export a different variable (possible with INNER in its name), value chosen to be appropriate for given architecture and operating system.",
      "parentUuid": "3a2fc7b9_2b0c23ae",
      "range": {
        "startLine": 787,
        "startChar": 45,
        "endLine": 787,
        "endChar": 78
      },
      "revId": "8685ada50678196dd8c3312ab6cb665976c216db",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}