{
  "comments": [
    {
      "key": {
        "uuid": "875f094e_4a47746e",
        "filename": "resources/libraries/bash/entry/bootstrap-verify-perf.sh",
        "patchSetId": 95
      },
      "lineNbr": 36,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-08-28T19:25:35Z",
      "side": 1,
      "message": "typo, i will let others to comment on this one. Much cleaner is to just rely on default so it will have clean readable look and still be safe",
      "range": {
        "startLine": 36,
        "startChar": 39,
        "endLine": 36,
        "endChar": 46
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3d88766_969d5c3a",
        "filename": "resources/libraries/bash/entry/bootstrap-verify-perf.sh",
        "patchSetId": 95
      },
      "lineNbr": 36,
      "author": {
        "id": 207
      },
      "writtenOn": "2018-08-30T10:26:24Z",
      "side": 1,
      "message": "I agree with Peter - rely on the default.",
      "parentUuid": "875f094e_4a47746e",
      "range": {
        "startLine": 36,
        "startChar": 39,
        "endLine": 36,
        "endChar": 46
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c1a20d5_4d8f7978",
        "filename": "resources/libraries/bash/entry/bootstrap-verify-perf.sh",
        "patchSetId": 95
      },
      "lineNbr": 36,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-08-30T11:13:05Z",
      "side": 1,
      "message": "Will use default.",
      "parentUuid": "b3d88766_969d5c3a",
      "range": {
        "startLine": 36,
        "startChar": 39,
        "endLine": 36,
        "endChar": 46
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "851e9900_1fe53a90",
        "filename": "resources/libraries/bash/entry/per_patch.sh",
        "patchSetId": 95
      },
      "lineNbr": 0,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-08-28T19:31:16Z",
      "side": 1,
      "message": "File naming: per-patch what? Func, vpp-device, perf? Need clever naming to follow scheme here, or we will be lost. As per patch is also func",
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7c3b498_0c8f9e3f",
        "filename": "resources/libraries/bash/entry/per_patch.sh",
        "patchSetId": 95
      },
      "lineNbr": 0,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-08-30T11:13:05Z",
      "side": 1,
      "message": "Per patch anything what also needs parent results, but only perf would need that. Will rename.",
      "parentUuid": "851e9900_1fe53a90",
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b738c161_b5bf8ad2",
        "filename": "resources/libraries/bash/function/bootstrap.sh",
        "patchSetId": 95
      },
      "lineNbr": 0,
      "author": {
        "id": 207
      },
      "writtenOn": "2018-08-30T10:26:24Z",
      "side": 1,
      "message": "bootstrap.sh si used for driving functional tests at the moment. Based on the content of this file here it is intended for driving performance tests only so we should use name bootstrap_perf.sh to avoid any discrepancies while functional tests will be driven by original bootstrap.sh in the csit root directory.\n\nWhen bootstrap for functional tests will be re-worked for this new desing, I would prefer following:\n- basic resources/libraries/bash/entry/bootstrap.sh where based on jenkins job type we will call needed bootstrap under \nresources/libraries/bash/function directory\n\n- resources/libraries/bash/function/bootstrap-verify-perf.sh\n- resources/libraries/bash/function/bootstrap-verify-func.sh\n...",
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19c40a83_1e8118bf",
        "filename": "resources/libraries/bash/function/bootstrap.sh",
        "patchSetId": 95
      },
      "lineNbr": 0,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-08-30T11:30:16Z",
      "side": 1,
      "message": "I agree \"bootstrap.sh\" is not a good filename. But I disagree with functions here being only useful for perf tests. The functions mostly download and prepare the code to test, functional tests should use the same functions.\n\nWill rename to \"gather.sh\".",
      "parentUuid": "b738c161_b5bf8ad2",
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c0b337e_a3435eca",
        "filename": "resources/libraries/bash/function/bootstrap.sh",
        "patchSetId": 95
      },
      "lineNbr": 182,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-08-30T08:21:19Z",
      "side": 1,
      "message": "Change directory",
      "range": {
        "startLine": 182,
        "startChar": 29,
        "endLine": 182,
        "endChar": 31
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b4b9bcd_25ee29c5",
        "filename": "resources/libraries/bash/function/bootstrap.sh",
        "patchSetId": 95
      },
      "lineNbr": 187,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-08-30T08:21:19Z",
      "side": 1,
      "message": "Change directory",
      "range": {
        "startLine": 187,
        "startChar": 27,
        "endLine": 187,
        "endChar": 29
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dacc5270_34d3d517",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 95
      },
      "lineNbr": 116,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-08-28T19:25:35Z",
      "side": 1,
      "message": "How about \"git rev-parse --git-dir\" ?",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 116,
        "endChar": 67
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "406217f4_d9980d0a",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 95
      },
      "lineNbr": 116,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-08-30T11:43:51Z",
      "side": 1,
      "message": "Less readable, but I guess the immunity to this file moving into a different level is worth it. Will do.",
      "parentUuid": "dacc5270_34d3d517",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 116,
        "endChar": 67
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4ed18b4_a9c83938",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 95
      },
      "lineNbr": 116,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-08-30T12:08:30Z",
      "side": 1,
      "message": "My bad, should be: git rev-parse --show-toplevel",
      "parentUuid": "406217f4_d9980d0a",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 116,
        "endChar": 67
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b016382_20ef01ff",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 95
      },
      "lineNbr": 544,
      "author": {
        "id": 207
      },
      "writtenOn": "2018-08-30T10:26:24Z",
      "side": 1,
      "message": "remove - typo",
      "range": {
        "startLine": 544,
        "startChar": 46,
        "endLine": 544,
        "endChar": 50
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "670ac344_9bd422e7",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 95
      },
      "lineNbr": 549,
      "author": {
        "id": 207
      },
      "writtenOn": "2018-08-30T10:26:24Z",
      "side": 1,
      "message": "No, every standard test job needs to cleanup testbed at the end of testing.\nBut we can use some \"debug_switch\" variable to decide to skip cleaning and unreservation when it is needed to get post-test data for debugging.",
      "range": {
        "startLine": 549,
        "startChar": 8,
        "endLine": 549,
        "endChar": 76
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f54521a1_62299cbd",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 95
      },
      "lineNbr": 549,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-08-30T10:32:47Z",
      "side": 1,
      "message": "Agree, clean before and clean after. Call it best practice",
      "parentUuid": "670ac344_9bd422e7",
      "range": {
        "startLine": 549,
        "startChar": 8,
        "endLine": 549,
        "endChar": 76
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad8a6175_96b0621b",
        "filename": "resources/libraries/bash/function/per_patch.sh",
        "patchSetId": 95
      },
      "lineNbr": 56,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-08-28T18:20:52Z",
      "side": 1,
      "message": "I will leave this open and we need to find some solution sooner better (I am now talking purely from past project experience). The test here is simply run it on some dpdk bump patch, if it does work then leave it with this comment.",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 56,
        "endChar": 74
      },
      "revId": "cae789c6ad081d6025b12087d0b15bc2f0a83b94",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}