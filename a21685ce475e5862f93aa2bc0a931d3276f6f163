{
  "comments": [
    {
      "key": {
        "uuid": "95d94101_371a0d83",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 39
      },
      "lineNbr": 223,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-03-27T11:23:29Z",
      "side": 1,
      "message": "u\"\n\nEverywhere.",
      "range": {
        "startLine": 223,
        "startChar": 53,
        "endLine": 223,
        "endChar": 54
      },
      "revId": "a21685ce475e5862f93aa2bc0a931d3276f6f163",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3c65edf_6fc707c3",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 39
      },
      "lineNbr": 223,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-27T13:59:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95d94101_371a0d83",
      "range": {
        "startLine": 223,
        "startChar": 53,
        "endLine": 223,
        "endChar": 54
      },
      "revId": "a21685ce475e5862f93aa2bc0a931d3276f6f163",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "574306a3_3b2ce221",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 39
      },
      "lineNbr": 226,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-03-27T11:23:29Z",
      "side": 1,
      "message": "It should be documented these become suite variables (in Setup suite topology interfaces).\nAre the suite variables read-only (in which case what is the point of this constant), or are they writeable (in which case when does this value revert back from e.g. u\"vf\" for the next test)?",
      "range": {
        "startLine": 226,
        "startChar": 8,
        "endLine": 226,
        "endChar": 28
      },
      "revId": "a21685ce475e5862f93aa2bc0a931d3276f6f163",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49333e33_737b8d6c",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 39
      },
      "lineNbr": 226,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-27T13:59:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "574306a3_3b2ce221",
      "range": {
        "startLine": 226,
        "startChar": 8,
        "endLine": 226,
        "endChar": 28
      },
      "revId": "a21685ce475e5862f93aa2bc0a931d3276f6f163",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecdaf943_e30f6447",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 39
      },
      "lineNbr": 226,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-03-27T15:38:47Z",
      "side": 1,
      "message": "Ack for documentation, nack for the read-only question.\nI see int set to vf here [0], but if there is another testcase run in the same suite, I do not see where it goes back to pf.\n\n[0] https://logs.fd.io/production/vex-yul-rot-jenkins-1/csit-vpp-perf-verify-master-2n-clx/101/archives/log.html.gz#s1-s1-s1-s1-s13-t1-k2-k6-k2",
      "parentUuid": "49333e33_737b8d6c",
      "range": {
        "startLine": 226,
        "startChar": 8,
        "endLine": 226,
        "endChar": 28
      },
      "revId": "a21685ce475e5862f93aa2bc0a931d3276f6f163",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcd46667_ac12535c",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 39
      },
      "lineNbr": 226,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-27T16:46:39Z",
      "side": 1,
      "message": "\"int\" is not read only for now. It is a pointer to which set of variables to use. The reset of interface variables is happening on suite level (read topology) and then in the test in the KW of initialization driver. After that it always become u\"vf\" (virtual CSIT interface?). This way we are bifurcating PF into \"pieces\" of VFs. If we will use SRIOV they are VFs if not tere is just one interface (copy\u0026paste from PF). This way we can have same KWs for both.\nSo far Scapy and TG both are only on u\"pf\" (unless we make use of SRIOV there), but the DUTs should always read PF on suite level (parsing topology as always in CSIT) and then on test level they become u\"vf\". Benefit is also that we keep previous information and we can still use (if needed).\n\nPreviously when i implemented initial way, i used the trick of overwriting u\"if\" to fake it. But then i realize i cannot really use multiple NICs and multiple VFs per one NIC. That is why Jan started to bloat code with lot of if else condition to detect multiple variables.\n\nNow we have an array (we can check how many VFs are there), in VPP we \"do not care\" if they are AVF/RDMA/DPDK/TAP...",
      "parentUuid": "ecdaf943_e30f6447",
      "range": {
        "startLine": 226,
        "startChar": 8,
        "endLine": 226,
        "endChar": 28
      },
      "revId": "a21685ce475e5862f93aa2bc0a931d3276f6f163",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "733a3991_2f30645b",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 39
      },
      "lineNbr": 226,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-03-27T18:10:25Z",
      "side": 1,
      "message": "I was talking about suite setup versus test setup. Patch 40 has:\n0. Suite setup.\n1. int\u003d\u003dpf\n2. First testcase.\n3. Before AVF interface creation: int\u003d\u003dpf\n4. After AVF creation: int\u003d\u003dvf\n5. Second testcase.\n6. Before AVF creation: still int\u003d\u003dvf from the previous test.\n\nExample, see the argument (${${dut}_${int}${pf}}[0]) of [0]. It is \u0027eth_avf1\u0027, not \u0027port5_vif1\u0027 as in the first testcase [1].\n\n[0] https://logs.fd.io/production/vex-yul-rot-jenkins-1/csit-vpp-perf-verify-master-2n-clx/102/archives/log.html.gz#s1-s1-s1-s1-s1-t2-k2-k6-k1-k1-k1-k1-k1-k1-k1-k3-k1-k1\n[1] https://logs.fd.io/production/vex-yul-rot-jenkins-1/csit-vpp-perf-verify-master-2n-clx/102/archives/log.html.gz#s1-s1-s1-s1-s1-t1-k2-k6-k1-k1-k1-k1-k1-k1-k1-k3-k1-k1",
      "parentUuid": "bcd46667_ac12535c",
      "range": {
        "startLine": 226,
        "startChar": 8,
        "endLine": 226,
        "endChar": 28
      },
      "revId": "a21685ce475e5862f93aa2bc0a931d3276f6f163",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "762a526f_f141d6bf",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 39
      },
      "lineNbr": 229,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-03-27T11:23:29Z",
      "side": 1,
      "message": "Also here.",
      "range": {
        "startLine": 229,
        "startChar": 35,
        "endLine": 229,
        "endChar": 36
      },
      "revId": "a21685ce475e5862f93aa2bc0a931d3276f6f163",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edfb8dc4_d0abda04",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 39
      },
      "lineNbr": 229,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-27T13:59:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "762a526f_f141d6bf",
      "range": {
        "startLine": 229,
        "startChar": 35,
        "endLine": 229,
        "endChar": 36
      },
      "revId": "a21685ce475e5862f93aa2bc0a931d3276f6f163",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07efe518_4a70cb8c",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 39
      },
      "lineNbr": 242,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-03-27T11:23:29Z",
      "side": 1,
      "message": "node[u\"type\"] \u003d\u003d u\"TG\"\nor maybe\n  node[u\"type\"] in (u\"TG\",)",
      "range": {
        "startLine": 242,
        "startChar": 15,
        "endLine": 242,
        "endChar": 35
      },
      "revId": "a21685ce475e5862f93aa2bc0a931d3276f6f163",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "914bf799_a0d0d674",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 39
      },
      "lineNbr": 242,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-27T13:59:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07efe518_4a70cb8c",
      "range": {
        "startLine": 242,
        "startChar": 15,
        "endLine": 242,
        "endChar": 35
      },
      "revId": "a21685ce475e5862f93aa2bc0a931d3276f6f163",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}