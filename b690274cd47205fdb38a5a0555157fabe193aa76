{
  "comments": [
    {
      "key": {
        "uuid": "3c239309_22dbe627",
        "filename": "resources/libraries/robot/performance/performance_utils.robot",
        "patchSetId": 24
      },
      "lineNbr": 87,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-07-13T11:31:28Z",
      "side": 1,
      "message": "Do you plan to move this outside as for example DPDK test does not use this. Should i copy the whole KW for DPDK or non VPP TCs?\nOtherwise looks good.",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 64
      },
      "revId": "b690274cd47205fdb38a5a0555157fabe193aa76",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2079f31_f2e727ca",
        "filename": "resources/libraries/robot/performance/performance_utils.robot",
        "patchSetId": 24
      },
      "lineNbr": 87,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-07-13T11:55:17Z",
      "side": 1,
      "message": "Oh, right. We also have tests which do not configure VPP.\n\nI see two possible solutions:\n\n1. Add optional argument to current keyword, for example ${configure_vpp}\u003d${True}\n\n2. Split into two keywords. \"Get Max Rate And Jumbo\" (for non-VPP tests) with most of logic, and reduce \"Get Max Rate And Jumbo And Handle Multi Seg\" (for VPP tests) to call that and then \"Add no multi seg to all DUTs\".\n\nEither way, this can be done in a subsequent Change, as both solutions are backward compatible.",
      "parentUuid": "3c239309_22dbe627",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 64
      },
      "revId": "b690274cd47205fdb38a5a0555157fabe193aa76",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "726e4d75_d8549c95",
        "filename": "tests/vpp/perf/srv6/10ge2p1x520-ethip6ip6-ip6base-srv6enc1sid-mrr.robot",
        "patchSetId": 24
      },
      "lineNbr": 94,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-07-13T12:03:33Z",
      "side": 1,
      "message": "Most suites do not need this, so perhaps creating a keyword or optional argument to skip this could save some space.\nBut some suites do need that, and having it everywhere is better for copying suites.\n\nI tend to prefer copyability to shortness.",
      "range": {
        "startLine": 94,
        "startChar": 18,
        "endLine": 94,
        "endChar": 26
      },
      "revId": "b690274cd47205fdb38a5a0555157fabe193aa76",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87b04edf_2a401a17",
        "filename": "tests/vpp/perf/srv6/10ge2p1x520-ethip6ip6-ip6base-srv6enc1sid-mrr.robot",
        "patchSetId": 24
      },
      "lineNbr": 94,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-07-13T12:30:21Z",
      "side": 1,
      "message": "\u003e But some suites do need that, and having it everywhere is better\n \u003e for copying suites.\n\n+1 let have suites as most unified.",
      "parentUuid": "726e4d75_d8549c95",
      "range": {
        "startLine": 94,
        "startChar": 18,
        "endLine": 94,
        "endChar": 26
      },
      "revId": "b690274cd47205fdb38a5a0555157fabe193aa76",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "465ce2ec_b3186f0c",
        "filename": "tests/vpp/perf/srv6/regenerate_testcases.py",
        "patchSetId": 24
      },
      "lineNbr": 39,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-07-13T13:15:31Z",
      "side": 1,
      "message": "When typos are (possible and) invisible, the code is not maintainable enough.",
      "range": {
        "startLine": 39,
        "startChar": 45,
        "endLine": 39,
        "endChar": 46
      },
      "revId": "b690274cd47205fdb38a5a0555157fabe193aa76",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c689a2d9_6fb7ad77",
        "filename": "tests/vpp/perf/srv6/regenerate_testcases.py",
        "patchSetId": 24
      },
      "lineNbr": 39,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-07-13T13:53:30Z",
      "side": 1,
      "message": "have you tried and played with python map and lambda for this?",
      "parentUuid": "465ce2ec_b3186f0c",
      "range": {
        "startLine": 39,
        "startChar": 45,
        "endLine": 39,
        "endChar": 46
      },
      "revId": "b690274cd47205fdb38a5a0555157fabe193aa76",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}