{
  "comments": [
    {
      "key": {
        "uuid": "98bc8638_b7038bc1",
        "filename": "tests/vpp/perf/l2/10ge2p1x710-avf-eth-l2bdbasemaclrn-mrr.robot",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-09-04T11:39:40Z",
      "side": 1,
      "message": "Oh, this is not a Draft anymore.\n\nThis way of skipping some tests is not compatible with autogeneration. Search for \"vic1227\" to see how to blacklist 9000B test cases for some tags.",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 1
      },
      "revId": "4f06b0a80174b9d7cc0d0b3a8be15a18368980d3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e12e5fdb_e942c076",
        "filename": "tests/vpp/perf/l2/10ge2p1x710-avf-eth-l2bdbasemaclrn-mrr.robot",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-09-04T11:59:57Z",
      "side": 1,
      "message": "where in file_out.write(testcase.generate(num\u003dnum, **kwargs)), kwargs I can found TAG or suite name?",
      "parentUuid": "98bc8638_b7038bc1",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 1
      },
      "revId": "4f06b0a80174b9d7cc0d0b3a8be15a18368980d3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e6a18b7_33997493",
        "filename": "tests/vpp/perf/l2/10ge2p1x710-avf-eth-l2bdbasemaclrn-mrr.robot",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-09-04T12:12:04Z",
      "side": 1,
      "message": "Oh, my bad. The string is searched for in the \"iface\" part of suite name instead. You would need to change that (e.g. to searching for substrings in the whole filename).\n\nIn general, each such substring should also have a short comment explaining why attempting the 9000B test would be pointless (e.g. the NIC/driver not supporting large enough MTU).",
      "parentUuid": "e12e5fdb_e942c076",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 1
      },
      "revId": "4f06b0a80174b9d7cc0d0b3a8be15a18368980d3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "220ce492_5533b9f1",
        "filename": "tests/vpp/perf/l2/10ge2p1x710-avf-eth-l2bdbasemaclrn-mrr.robot",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-09-04T12:23:16Z",
      "side": 1,
      "message": "Quick attempt:\n\n\ndiff --git a/resources/libraries/python/autogen/Regenerator.py b/resources/libraries/python/autogen/Regenerator.py\nindex e7e03703..38a0c0c8 100644\n--- a/resources/libraries/python/autogen/Regenerator.py\n+++ b/resources/libraries/python/autogen/Regenerator.py\n@@ -69,13 +69,17 @@ class Regenerator(object):\n                 dash_split \u003d dash_split[1].split(\"-\", 1)\n             return dash_split[0], dash_split[1].split(\".\", 1)[0]\n\n-        def add_testcase(testcase, iface, file_out, num, **kwargs):\n+        def add_testcase(testcase, iface, suite_id, file_out, num, **kwargs):\n             # TODO: Is there a better way to disable some combinations?\n-            if kwargs[\"framesize\"] !\u003d 9000 or \"vic1227\" not in iface:\n+            if kwargs[\"framesize\"] \u003d\u003d 9000 and \"vic1227\" in iface:\n+                pass\n+            else if kwargs[\"framesize\"] \u003d\u003d 9000 and \"avf\" in suite_id:\n+                pass\n+            else\n                 file_out.write(testcase.generate(num\u003dnum, **kwargs))\n             return num + 1\n\n-        def add_testcases(testcase, iface, file_out, tc_kwargs_list):\n+        def add_testcases(testcase, iface, suite_id, file_out, tc_kwargs_list):\n             num \u003d 1\n             for tc_kwargs in tc_kwargs_list:\n                 num \u003d add_testcase(testcase, iface, file_out, num, **tc_kwargs)\n@@ -105,6 +109,6 @@ class Regenerator(object):\n             testcase \u003d self.testcase_class(suite_id)\n             with open(filename, \"w\") as file_out:\n                 file_out.write(text_prolog)\n-                add_testcases(testcase, iface, file_out, kwargs_list)\n+                add_testcases(testcase, iface, suite_id, file_out, kwargs_list)\n         print \"Regenerator ends.\"\n         print  # To make autogen check output more readable.",
      "parentUuid": "2e6a18b7_33997493",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 1
      },
      "revId": "4f06b0a80174b9d7cc0d0b3a8be15a18368980d3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "097c5d36_59142020",
        "filename": "tests/vpp/perf/l2/10ge2p1x710-avf-eth-l2bdbasemaclrn-mrr.robot",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-09-04T12:32:46Z",
      "side": 1,
      "message": "Looks reasonable enough. Feel free to use [0] to see if it works correctly.\nAnd you can add explanations as comments instead of the \"pass\" lines.\n\n[0] https://gerrit.fd.io/r/13450",
      "parentUuid": "220ce492_5533b9f1",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 1
      },
      "revId": "4f06b0a80174b9d7cc0d0b3a8be15a18368980d3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c0e5305_92547ab4",
        "filename": "tests/vpp/perf/l2/10ge2p1x710-avf-eth-l2bdbasemaclrn-mrr.robot",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-09-04T12:41:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "097c5d36_59142020",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 1
      },
      "revId": "4f06b0a80174b9d7cc0d0b3a8be15a18368980d3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c65f514e_45cbcff3",
        "filename": "tests/vpp/perf/l2/10ge2p1x710-avf-eth-l2bdbasemaclrn-mrr.robot",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-09-04T12:55:47Z",
      "side": 1,
      "message": "If you run the new autogen, you will see it skips (as opposed to \"comments out\") the test cases.",
      "parentUuid": "7c0e5305_92547ab4",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 91,
        "endChar": 1
      },
      "revId": "4f06b0a80174b9d7cc0d0b3a8be15a18368980d3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}