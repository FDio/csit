{
  "comments": [
    {
      "key": {
        "uuid": "2bd0b883_590e366b",
        "filename": "resources/libraries/python/autogen/Regenerator.py",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-06T05:24:56Z",
      "side": 1,
      "message": "Wrong detection, not needed",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 166,
        "endChar": 22
      },
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c86190b_8b5d9fa7",
        "filename": "resources/libraries/python/autogen/Regenerator.py",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1880
      },
      "writtenOn": "2019-09-06T06:13:26Z",
      "side": 1,
      "message": "Load-balancer maglev mode tests the performance that load-balancer forward to services.\nso we only care the performance that max throughput rom TG to DUT(MRR).\nThe destination is that when the case is load-balancer type doing not NDRPDR check.\nso I think it is necessary.",
      "parentUuid": "2bd0b883_590e366b",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 166,
        "endChar": 22
      },
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0092cf47_080a6446",
        "filename": "resources/libraries/python/autogen/Regenerator.py",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-06T09:01:31Z",
      "side": 1,
      "message": "It is fine that you only care about MRR results.\nBut we care about keeping autogen (and tc_naming) simple.\nYour attempt to simplify testing is actually making it harder to maintain the tests.\nIf you create ndrpdr suite, you can still keep triggering only MRR tests, without any change to autogen.",
      "parentUuid": "1c86190b_8b5d9fa7",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 166,
        "endChar": 22
      },
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9b8ac41_70460686",
        "filename": "resources/libraries/python/autogen/Regenerator.py",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1880
      },
      "writtenOn": "2019-09-06T09:28:06Z",
      "side": 1,
      "message": "I understand your worry, and it\u0027s simple to change MRR to NDRPDR.\nBut if those NDRPDR test case are never triggered, even though those are triggered that test results are failed.\nIt\u0027s not good, I think. If you think it\u0027s good, I can change MRR to NDRPDR.",
      "parentUuid": "0092cf47_080a6446",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 166,
        "endChar": 22
      },
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3af451a6_f4f52138",
        "filename": "resources/libraries/python/autogen/Regenerator.py",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-06T10:09:03Z",
      "side": 1,
      "message": "Are you expecting NDRPDR to fail? \nIn fact I agree with Vratko that maintaining such non standard test cases is very hard and will not be done by CSIT team. If you put there NDRPDR you can still trigger MRR but implementation is clean. On the other hand if you will insist on MRR only, this will have an implication that those testcases will quickly fade into not working at all and will not get into CSIT report 20.01 (where we build it on NDRPDR). \n\nSee the graveyard of such approach in DMM/NSH/TLDK tests, which are broken very long time due to its non standard implementation and lack of maintenance from community.\n\nThank you for understanding.",
      "parentUuid": "c9b8ac41_70460686",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 166,
        "endChar": 22
      },
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25100441_ae91b2c5",
        "filename": "resources/libraries/python/autogen/Regenerator.py",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-06T10:19:12Z",
      "side": 1,
      "message": "Note: Doing such giant IFs just for one Testcase is not clean enough to me. I would then prefer moving it to function.",
      "parentUuid": "3af451a6_f4f52138",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 166,
        "endChar": 22
      },
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6691eabf_84d44938",
        "filename": "resources/libraries/robot/lb/load_balancer.robot",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-06T05:24:56Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 47,
        "endChar": 64
      },
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28b01635_c7cfeb7e",
        "filename": "resources/libraries/robot/lb/load_balancer.robot",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1880
      },
      "writtenOn": "2019-09-06T06:13:26Z",
      "side": 1,
      "message": "I will keep line 45,because it is used in line54~59.\nOthers will be removed.",
      "parentUuid": "6691eabf_84d44938",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 47,
        "endChar": 64
      },
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f00c1d0a_1c5b6aa2",
        "filename": "tests/vpp/perf/lb/2n1l-10ge2p1x710-ethip4-loadbalancer-maglev-mrr.robot",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-06T05:24:56Z",
      "side": 1,
      "message": "Make it NDRPDR",
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bcfbcdd_0962bdcd",
        "filename": "tests/vpp/perf/lb/2n1l-10ge2p1x710-ethip4-loadbalancer-maglev-mrr.robot",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1880
      },
      "writtenOn": "2019-09-06T06:13:26Z",
      "side": 1,
      "message": "Load-balancer maglev mode tests the performance that load-balancer forward to services.\nso we only care the performance that max throughput from TG to DUT(MRR).\ndon\u0027t care ndrpdr performate.",
      "parentUuid": "f00c1d0a_1c5b6aa2",
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0dce1f5_f0b32692",
        "filename": "tests/vpp/perf/lb/2n1l-10ge2p1x710-ethip4-loadbalancer-maglev-mrr.robot",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-05T13:49:42Z",
      "side": 1,
      "message": "Is this the reason why you only support MRR test type?\nIf yes, let me see if I can make all three test types support unidirection, as I do not like your changes to autogen.",
      "range": {
        "startLine": 76,
        "startChar": 10,
        "endLine": 76,
        "endChar": 30
      },
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a8d574c_c61abcec",
        "filename": "tests/vpp/perf/lb/2n1l-10ge2p1x710-ethip4-loadbalancer-maglev-mrr.robot",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-05T15:12:16Z",
      "side": 1,
      "message": "\u003e  I can make all three test types support unidirection\n\nHere is the first attempt [0]. Not tested yet, but you can start looking at it, to see if it fits here.\n\n[0] https://gerrit.fd.io/r/c/csit/+/21830",
      "parentUuid": "f0dce1f5_f0b32692",
      "range": {
        "startLine": 76,
        "startChar": 10,
        "endLine": 76,
        "endChar": 30
      },
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64f71447_77186b54",
        "filename": "tests/vpp/perf/lb/2n1l-10ge2p1x710-ethip4-loadbalancer-maglev-mrr.robot",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1880
      },
      "writtenOn": "2019-09-06T06:13:26Z",
      "side": 1,
      "message": "Load-balancer maglev mode tests the performance that load-balancer forward to services.\nso we only care the performance that max throughput from TG to DUT(MRR).\nThe destination is not making all three test types support unidirection.",
      "parentUuid": "8a8d574c_c61abcec",
      "range": {
        "startLine": 76,
        "startChar": 10,
        "endLine": 76,
        "endChar": 30
      },
      "revId": "28de7841cf0fde4c013f3c802fb1ce116ac6057d",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}