{
  "comments": [
    {
      "key": {
        "uuid": "6d94a4b7_cc165c62",
        "filename": "tests/vpp/perf/ip4/10ge2p1x520-ethip4-ip4base-ndrpdr.robot",
        "patchSetId": 15
      },
      "lineNbr": 81,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-05-04T09:49:26Z",
      "side": 1,
      "message": "Mockup:\n| | Set Test Variable | ${framesize}\n| | Set Test Variable | ${min_rate} | ${20000}\n| | Set Test Variable | ${wt}\n| | Set Test Variable | ${rxq}\n| | ${get_framesize}\u003d | Get Frame Size | ${framesize}\n| | Set Test Variable | ${get_framesize}\n| | ${max_uniditrectional_rate}\u003d | Calculate pps | ${s_limit} | ${get_framesize}\n| | ${max_rate}\u003d | Evaluate | 2*${max_uniditrectional_rate}\n| | Given Create performance startup configuration on all VPP DUTs\n| | And Apply startup configuration on all VPP DUTs\n| | And Initialize IPv4 forwarding in 3-node circular topology\n| | Then Find NDR and PDR intervals using optimized search\n| | ... | ${framesize} | ${traffic_profile} | ${min_rate} | ${max_rate}\n\nThis assumes creating new KW as this is most repeating part of all TCs\n\nViews?",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 81,
        "endChar": 71
      },
      "revId": "ea4436118dfad580b480f65e14a100d1621b290b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "237ffa88_298b7b3c",
        "filename": "tests/vpp/perf/ip4/10ge2p1x520-ethip4-ip4base-ndrpdr.robot",
        "patchSetId": 15
      },
      "lineNbr": 81,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-05-04T10:43:41Z",
      "side": 1,
      "message": "Lines up to max_rate can become a small keyword: Calculate max framerate (arguments: framesize, max_nic_unidirectional_bitrate, max_nic_transmit_framerate).\n\n\u003e Create performance startup configuration on all VPP DUTs\n\nThis is the magic consuming ${wt} and ${rxq}. It could be possible to create such a universal keyword (with lots of optional arguments if needed to accomodate different suites).\n\n\u003e Apply startup configuration on all VPP DUTs\n\nI vaguely remember IPsec setting keys around here. Still, this bould be mergeable into a bigger magical universal keyword.\n\n\u003e Then Find NDR and PDR intervals using optimized search\n\nMRR tests will have all of the above (except min_rate). Could be part of the (even bigger) universal keyword, if we find a good way how to document the test message format.\n\nA reasonable compromise would be to create resources/libraries/robot/performance/performance_templates.robot which will list the test template keywords for each suite type. Each template keyword will have two calls. One call to a universal setup keyword (with optional arguments set for the given suite type) and one call to a test keyword (MRR, MDR, wrk, whatever).",
      "parentUuid": "6d94a4b7_cc165c62",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 81,
        "endChar": 71
      },
      "revId": "ea4436118dfad580b480f65e14a100d1621b290b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "003d7dc3_2020bdfa",
        "filename": "tests/vpp/perf/ip4/10ge2p1x520-ethip4-ip4base-ndrpdr.robot",
        "patchSetId": 15
      },
      "lineNbr": 81,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-05-04T11:58:49Z",
      "side": 1,
      "message": "- I would safely remove doc per testcase as Suite doc can contain general message and packet sizes are not worth of too much code overhead.\n- I agree with performance_template library with have KW unique named like ethip4-ip4base and than advanced TC would be just calling base KWs and adding feature. This was initial design long time ago. And will help automating them in future.\n- Agree that Configuration can be one KW with many _parameters_\n- Ipsec could have different KW...again we need to desing hierarchy structured KWs so we can then merge similar into bigger.",
      "parentUuid": "237ffa88_298b7b3c",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 81,
        "endChar": 71
      },
      "revId": "ea4436118dfad580b480f65e14a100d1621b290b",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}