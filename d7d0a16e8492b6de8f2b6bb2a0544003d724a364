{
  "comments": [
    {
      "key": {
        "uuid": "a7bc219f_d5cfedab",
        "filename": "resources/libraries/python/IPsecUtil.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-02-27T09:50:26Z",
      "side": 1,
      "message": "fix these pylints",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 25,
        "endChar": 75
      },
      "revId": "d7d0a16e8492b6de8f2b6bb2a0544003d724a364",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7eeeaa4_e32bafe3",
        "filename": "resources/libraries/python/IPsecUtil.py",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-02-26T16:19:54Z",
      "side": 1,
      "message": "Usually I prefer stateless objects, but this begs for:\n\n\npapi_executor.clear().add(\n    api_name\u003d\u0027ipsec_select_backend\u0027,\n    protocol\u003dprotocol, index\u003dindex).execute()",
      "range": {
        "startLine": 258,
        "startChar": 12,
        "endLine": 262,
        "endChar": 48
      },
      "revId": "d7d0a16e8492b6de8f2b6bb2a0544003d724a364",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e992efd5_ade7458e",
        "filename": "resources/libraries/python/IPsecUtil.py",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 207
      },
      "writtenOn": "2019-02-27T09:28:11Z",
      "side": 1,
      "message": "We want to be consistent with KWs where we need to pass more api commands to papi executor, e.g. vpp_ipsec_create_tunnel_interfaces used in ipsec scale tests to create 1000 ipsec tunnels.",
      "parentUuid": "d7eeeaa4_e32bafe3",
      "range": {
        "startLine": 258,
        "startChar": 12,
        "endLine": 262,
        "endChar": 48
      },
      "revId": "d7d0a16e8492b6de8f2b6bb2a0544003d724a364",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8842cb00_95d96150",
        "filename": "resources/libraries/python/IPsecUtil.py",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-02-27T11:41:42Z",
      "side": 1,
      "message": "Those keywords would call multiple .add() in a loop, with .execute() after the loop.\n\nBut I guess it would be easier for me to implement than just describe.",
      "parentUuid": "e992efd5_ade7458e",
      "range": {
        "startLine": 258,
        "startChar": 12,
        "endLine": 262,
        "endChar": 48
      },
      "revId": "d7d0a16e8492b6de8f2b6bb2a0544003d724a364",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf2871e7_4aad4366",
        "filename": "resources/libraries/python/IPsecUtil.py",
        "patchSetId": 1
      },
      "lineNbr": 264,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-02-26T16:19:54Z",
      "side": 1,
      "message": "Replace .execute() from my previous comment with:\n\n.execute_should_pass(error_message_template, node[\"host\"])",
      "range": {
        "startLine": 264,
        "startChar": 30,
        "endLine": 264,
        "endChar": 55
      },
      "revId": "d7d0a16e8492b6de8f2b6bb2a0544003d724a364",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4067b83_517aa8fd",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-02-27T09:50:26Z",
      "side": 1,
      "message": "9",
      "range": {
        "startLine": 1,
        "startChar": 19,
        "endLine": 1,
        "endChar": 20
      },
      "revId": "d7d0a16e8492b6de8f2b6bb2a0544003d724a364",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38dbb2bf_293a6c6f",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-02-27T09:50:26Z",
      "side": 1,
      "message": "VPP API",
      "range": {
        "startLine": 14,
        "startChar": 10,
        "endLine": 14,
        "endChar": 13
      },
      "revId": "d7d0a16e8492b6de8f2b6bb2a0544003d724a364",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fefc5706_c3cf4b12",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-02-27T09:50:26Z",
      "side": 1,
      "message": "VPP API",
      "revId": "d7d0a16e8492b6de8f2b6bb2a0544003d724a364",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}