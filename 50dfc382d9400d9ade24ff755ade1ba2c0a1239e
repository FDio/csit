{
  "comments": [
    {
      "key": {
        "uuid": "a0a5c407_7797aced",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 3
      },
      "lineNbr": 246,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-04-23T15:15:41Z",
      "side": 1,
      "message": "ack,\n[n]ode\n[t]g\n[d]ut\n\nI think i Over-Maciek-ized-it. Too much of Maciek\u0027s acronyms :) Lets call it MACRO - Maciek\u0027s ACRonyms Overused?",
      "range": {
        "startLine": 246,
        "startChar": 0,
        "endLine": 246,
        "endChar": 2
      },
      "revId": "50dfc382d9400d9ade24ff755ade1ba2c0a1239e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96c14bca_4834cb55",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 3
      },
      "lineNbr": 246,
      "author": {
        "id": 10
      },
      "writtenOn": "2020-04-26T21:31:13Z",
      "side": 1,
      "message": "\u003e ack,\n\u003e [n]ode\n\u003e [t]g\n\u003e [d]ut\n\u003e \n\u003e I think i Over-Maciek-ized-it. Too much of Maciek\u0027s acronyms :) Lets call it MACRO - Maciek\u0027s ACRonyms Overused?\n\n:D\n\nDone",
      "parentUuid": "a0a5c407_7797aced",
      "range": {
        "startLine": 246,
        "startChar": 0,
        "endLine": 246,
        "endChar": 2
      },
      "revId": "50dfc382d9400d9ade24ff755ade1ba2c0a1239e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d37758a_c330045a",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 3
      },
      "lineNbr": 257,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-04-23T15:15:41Z",
      "side": 1,
      "message": "[n]ode_pfx\n[p]hysical_pfx - this is new variable that clearly says it is physical interface (can be virtual later)\n[i]nterface_pfx - old naming scheme for backward compatibility",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 257,
        "endChar": 2
      },
      "revId": "50dfc382d9400d9ade24ff755ade1ba2c0a1239e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "219772f0_c35c5917",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 3
      },
      "lineNbr": 257,
      "author": {
        "id": 10
      },
      "writtenOn": "2020-04-26T21:31:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d37758a_c330045a",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 257,
        "endChar": 2
      },
      "revId": "50dfc382d9400d9ade24ff755ade1ba2c0a1239e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ab3013d_5d629f6e",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-04-23T15:15:41Z",
      "side": 1,
      "message": "hard coded is the way that we start from 1 and each link has two interfaces (point to point). not full mesh.",
      "range": {
        "startLine": 266,
        "startChar": 32,
        "endLine": 266,
        "endChar": 49
      },
      "revId": "50dfc382d9400d9ade24ff755ade1ba2c0a1239e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10865a44_413539e4",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 10
      },
      "writtenOn": "2020-04-26T21:31:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ab3013d_5d629f6e",
      "range": {
        "startLine": 266,
        "startChar": 32,
        "endLine": 266,
        "endChar": 49
      },
      "revId": "50dfc382d9400d9ade24ff755ade1ba2c0a1239e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "144e130e_f1776c14",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 3
      },
      "lineNbr": 269,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-04-23T15:15:41Z",
      "side": 1,
      "message": "right, purpose was to capture following\ntg1_if1 -\u003e dut1_if1 -\u003e dut1_if2 -\u003e [dut2_if1 -\u003e dut2_if2 ...] -\u003e tg1_if2\ntechnically next round is doing \ntg1_if3 -\u003e dut1_if3 -\u003e dut1_if4 -\u003e [dut2_if3 -\u003e dut2_if4 ...] -\u003e tg1_if4\n\nso we can use many circuits and many NICs/ports. I wrote the simulator for this in past to verify indexes. Id did not introduce new scheme as it would break everything.",
      "range": {
        "startLine": 269,
        "startChar": 0,
        "endLine": 269,
        "endChar": 2
      },
      "revId": "50dfc382d9400d9ade24ff755ade1ba2c0a1239e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b34795c_a0786f44",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 3
      },
      "lineNbr": 269,
      "author": {
        "id": 10
      },
      "writtenOn": "2020-04-26T21:31:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "144e130e_f1776c14",
      "range": {
        "startLine": 269,
        "startChar": 0,
        "endLine": 269,
        "endChar": 2
      },
      "revId": "50dfc382d9400d9ade24ff755ade1ba2c0a1239e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04b644ec_a1dca10e",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 3
      },
      "lineNbr": 269,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-04-28T07:05:40Z",
      "side": 1,
      "message": "I mean the purpose is to enumerate: node, dut tg, to be able to index them separately. TG1..N (i do not expect more than 1), DUT1..N, interface indexes are for each node again from 1, but each \"circuit\" must use separated one. So hard to make it readable , but algo somewhat works. Maybe we can add better documentation for how it increases in sample topology.",
      "parentUuid": "5b34795c_a0786f44",
      "range": {
        "startLine": 269,
        "startChar": 0,
        "endLine": 269,
        "endChar": 2
      },
      "revId": "50dfc382d9400d9ade24ff755ade1ba2c0a1239e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "458acd38_12b89108",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 3
      },
      "lineNbr": 279,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-04-23T15:15:41Z",
      "side": 1,
      "message": "n_idx",
      "range": {
        "startLine": 279,
        "startChar": 48,
        "endLine": 279,
        "endChar": 53
      },
      "revId": "50dfc382d9400d9ade24ff755ade1ba2c0a1239e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9615b302_7a7f65ef",
        "filename": "resources/libraries/python/NodePath.py",
        "patchSetId": 3
      },
      "lineNbr": 279,
      "author": {
        "id": 10
      },
      "writtenOn": "2020-04-26T21:31:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "458acd38_12b89108",
      "range": {
        "startLine": 279,
        "startChar": 48,
        "endLine": 279,
        "endChar": 53
      },
      "revId": "50dfc382d9400d9ade24ff755ade1ba2c0a1239e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}