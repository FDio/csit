{
  "comments": [
    {
      "key": {
        "uuid": "8fa9b6bd_6c436b58",
        "filename": "resources/libraries/python/Policer.py",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-08-08T09:03:54Z",
      "side": 1,
      "message": "I suggest to start very simple. Remove all the getters and setters and rework robot KW to put direct parameters. Stop crippling code to fit. Take an inspiration from GBP.py how the library should look like. You cannot solve the problems without reworking L2 KW in robot. \nThis lib should fully follow PAPI design so every function corresponds to what VPP expects not what CSIT does now.\n\nIf you cannot do that please let me know i will reassign the task to someone else. Thanks",
      "revId": "bf5a9034f7df796a4934d690027c6ded95edf3bc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6db2da0e_e93bcac3",
        "filename": "resources/libraries/python/Policer.py",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-08-06T14:37:20Z",
      "side": 1,
      "message": "Ah, now I see. Everything after equals is the value.\nSo either replace lowercase strings with ints, or use tuples as in DSCP.",
      "range": {
        "startLine": 26,
        "startChar": 11,
        "endLine": 26,
        "endChar": 17
      },
      "revId": "bf5a9034f7df796a4934d690027c6ded95edf3bc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70970cd0_a9623988",
        "filename": "resources/libraries/python/Policer.py",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1817
      },
      "writtenOn": "2019-08-07T07:38:25Z",
      "side": 1,
      "message": "From the dictionary arguments, i see that rate_type is \"pps\" which is a string. I also understand that the CLI command\u0027s requisite is also a string (pps).\n\nWith that in picture, could you please elaborate as to why the lowercase strings (Line No - 26) should be converted to ints or used as tuples.",
      "parentUuid": "6db2da0e_e93bcac3",
      "range": {
        "startLine": 26,
        "startChar": 11,
        "endLine": 26,
        "endChar": 17
      },
      "revId": "bf5a9034f7df796a4934d690027c6ded95edf3bc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54590ca9_a134fcc4",
        "filename": "resources/libraries/python/Policer.py",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1804
      },
      "writtenOn": "2019-08-07T08:32:03Z",
      "side": 1,
      "message": "in api it is defined as int\nu8 rate_type;\n\n 452 static uword\n 453 unformat_policer_rate_type (unformat_input_t * input, va_list * args)\n 454 {\n 455   u8 *r \u003d va_arg (*args, u8 *);\n 456 \n 457   if (unformat (input, \"kbps\"))\n 458     *r \u003d SSE2_QOS_RATE_KBPS;\n 459   else if (unformat (input, \"pps\"))\n 460     *r \u003d SSE2_QOS_RATE_PPS;\n 461   else\n 462     return 0;\n 463   return 1;\n 464 }\n\nfrom policer/xlate.h\ntypedef enum\n{\n  SSE2_QOS_RATE_KBPS \u003d 0,\n  SSE2_QOS_RATE_PPS,\n  SSE2_QOS_RATE_INVALID\n} sse2_qos_rate_type_en;",
      "parentUuid": "70970cd0_a9623988",
      "range": {
        "startLine": 26,
        "startChar": 11,
        "endLine": 26,
        "endChar": 17
      },
      "revId": "bf5a9034f7df796a4934d690027c6ded95edf3bc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbdd5b80_cffdb7b8",
        "filename": "resources/libraries/python/Policer.py",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1817
      },
      "writtenOn": "2019-08-07T09:39:09Z",
      "side": 1,
      "message": "Referred the below link and got to understand that rate_type is not an integer,\n https://docs.fd.io/csit/master/report/test_configuration/vpp_functional_configuration/vpp_functional_configuration_policer.html\n\npolicer_add_del name policer1  cir 100 eir 150 cb 200 eb 300 rate_type pps round_type closest type 2r3c-2698 conform_action transmit exceed_action mark-and-transmit AF22 violate_action drop color-aware\n\nCould you please clarify.",
      "parentUuid": "54590ca9_a134fcc4",
      "range": {
        "startLine": 26,
        "startChar": 11,
        "endLine": 26,
        "endChar": 17
      },
      "revId": "bf5a9034f7df796a4934d690027c6ded95edf3bc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e42be8e0_b53c12ff",
        "filename": "resources/libraries/python/Policer.py",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-08-07T10:43:52Z",
      "side": 1,
      "message": "\u003e below link\n\nAs the table states, those are \"VPP API Test (VAT) Commands History\".\nVPP has several interfaces. PAPI is a wrapper around \"binary api\", governed by .api files (so various types are \"u8\", represented in Python as int). There is also CLI (the 452-464 block shows how VPP converts from string CLI arguments to internal numeric ones). The xlate.h enums are used internally in the VPP code to make numeric values more readable.\nAnd finally, there is VAT we are migrating away from. VAT also uses string inputs, but converts them here [1], again to numeric values using the same xlate.h enums.\n\nThis CSIT file previously mapped Python enums to VAT string arguments, for PAPI we need to map from Python enums to integer values.\n\n[1] https://github.com/FDio/vpp/blob/4208a4ce8d72d3fb6428527cde1fba7b397bd6f7/src/vat/api_format.c#L456-L571",
      "parentUuid": "fbdd5b80_cffdb7b8",
      "range": {
        "startLine": 26,
        "startChar": 11,
        "endLine": 26,
        "endChar": 17
      },
      "revId": "bf5a9034f7df796a4934d690027c6ded95edf3bc",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}