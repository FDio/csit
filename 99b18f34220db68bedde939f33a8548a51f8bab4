{
  "comments": [
    {
      "key": {
        "uuid": "e7fa3a28_c6fa6d28",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 11,
      "author": {
        "id": 76
      },
      "writtenOn": "2021-10-20T17:21:24Z",
      "side": 1,
      "message": "I not even 1% convinced this patch is the right thing. Device or resource busy indicates some issue on FS side. \n\nTo me i would like to see how switch from volume/mount/dev on Docker side looks like and then changing overlayfs in docker. If the issue is slow init on ARM due to slow CPU, then this patch is not solving anything just delaying problem. as it might not be ready anyway.\n\nSo is this timing related of fs related?",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 67
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6409878_e2d61052",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 11,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-21T09:43:15Z",
      "side": 1,
      "message": "From the document, section 4.3.1.:\n\nMounting the whole /sys/ or /dev/ directory in the container will overwrite the\nnetwork device descriptor inside the container which causes \u0027device not found\u0027 or \u0027no such file or directory\u0027 error.\n\nThis doesn\u0027t happen when using only /dev/vfio/\u003cn\u003e.\n\nMore in https://jira.fd.io/browse/CSIT-1794.\n\nWhat would a change to overlayfs in docker look like?",
      "parentUuid": "e7fa3a28_c6fa6d28",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 67
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b332bebc_093f0f67",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 13,
      "author": {
        "id": 1263
      },
      "writtenOn": "2021-10-20T15:21:36Z",
      "side": 1,
      "message": "Which section? It is quite a long document.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 3
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5bd65d6_d9b4deab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 13,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-21T09:43:15Z",
      "side": 1,
      "message": "Section 4.3.1. Will add to the commit msg.",
      "parentUuid": "b332bebc_093f0f67",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 3
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f71f9e8_452297f3",
        "filename": "resources/libraries/bash/function/device.sh",
        "patchSetId": 12
      },
      "lineNbr": 44,
      "author": {
        "id": 1263
      },
      "writtenOn": "2021-10-20T15:21:36Z",
      "side": 1,
      "message": "Mention this is a workaround for a driver issue, so future refactors to not remove it by accident.",
      "range": {
        "startLine": 44,
        "startChar": 64,
        "endLine": 44,
        "endChar": 65
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dd34d51_3f8305ce",
        "filename": "resources/libraries/bash/function/device.sh",
        "patchSetId": 12
      },
      "lineNbr": 44,
      "author": {
        "id": 76
      },
      "writtenOn": "2021-10-20T17:21:24Z",
      "side": 1,
      "message": "It is unclear what is \"vpp driver\". uio_pci_generic, igb_uio, rdma, vfio-pci, enic, or any other from hundreds on dpdk.org",
      "parentUuid": "9f71f9e8_452297f3",
      "range": {
        "startLine": 44,
        "startChar": 64,
        "endLine": 44,
        "endChar": 65
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7573fcea_c2b15f3d",
        "filename": "resources/libraries/bash/function/device.sh",
        "patchSetId": 12
      },
      "lineNbr": 44,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-21T09:43:15Z",
      "side": 1,
      "message": "This is not a workaround, but a solution. We can\u0027t mount the whole /dev/vfio, so that needs to be changed a this function is necessary for this solution. There could be other solutions, of course.\n\nAnd vpp driver is \"the driver that vpp will use\". If kernel driver is what vpp will use, then we don\u0027t need to do anything in this function. For iavf, we need to bind to vfio-pci, since that\u0027s what VPP will use. There could be a problem with this approach if we used different vpp drivers with the same kernel driver (e.g. uio_pci_generic or vfio-pci with iavf), but I don\u0027t think that\u0027s the case.",
      "parentUuid": "5dd34d51_3f8305ce",
      "range": {
        "startLine": 44,
        "startChar": 64,
        "endLine": 44,
        "endChar": 65
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f7e7221_a7c34214",
        "filename": "resources/libraries/bash/function/device.sh",
        "patchSetId": 12
      },
      "lineNbr": 56,
      "author": {
        "id": 76
      },
      "writtenOn": "2021-10-20T17:21:24Z",
      "side": 1,
      "message": "and if not? RDMA?",
      "range": {
        "startLine": 56,
        "startChar": 32,
        "endLine": 56,
        "endChar": 36
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6225096e_c848841d",
        "filename": "resources/libraries/bash/function/device.sh",
        "patchSetId": 12
      },
      "lineNbr": 56,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-21T09:43:15Z",
      "side": 1,
      "message": "As far as I know, we\u0027re only using iavf in vpp device, hence only support for that. Is there a need to add rdma?\n\nBut in general, if the driver is not iavf, the old system should be used - i.e. mount the whole /dev/vfio. This fallback is actually missing, so I\u0027ll add it.",
      "parentUuid": "0f7e7221_a7c34214",
      "range": {
        "startLine": 56,
        "startChar": 32,
        "endLine": 56,
        "endChar": 36
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdb7c9d4_7a0c300a",
        "filename": "resources/libraries/bash/function/device.sh",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-19T10:26:07Z",
      "side": 1,
      "message": "The binding did not work without using driver_override. I probably hit some corner case where this is necessary. I was inspired by the dpdk bind script which always does this, so I think it\u0027s better to have this than not.",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 140,
        "endChar": 5
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f4c45f5_be959444",
        "filename": "resources/libraries/bash/function/device.sh",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-21T09:43:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdb7c9d4_7a0c300a",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 140,
        "endChar": 5
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b353d201_bb5552c6",
        "filename": "resources/libraries/bash/function/device.sh",
        "patchSetId": 12
      },
      "lineNbr": 142,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-19T10:26:07Z",
      "side": 1,
      "message": "A note on redirection here: tee emits to the standard output, so when calling this function before calling print_env_variables (like I added in this patch), the output gets polluted by all of the tee output, hence the redirection.",
      "range": {
        "startLine": 142,
        "startChar": 45,
        "endLine": 142,
        "endChar": 56
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "189f0f0b_78b30390",
        "filename": "resources/libraries/bash/function/device.sh",
        "patchSetId": 12
      },
      "lineNbr": 142,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-21T09:43:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b353d201_bb5552c6",
      "range": {
        "startLine": 142,
        "startChar": 45,
        "endLine": 142,
        "endChar": 56
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0acd81e9_0badd82f",
        "filename": "resources/libraries/bash/function/device.sh",
        "patchSetId": 12
      },
      "lineNbr": 793,
      "author": {
        "id": 76
      },
      "writtenOn": "2021-10-20T17:21:24Z",
      "side": 1,
      "message": "move above in same place as before",
      "range": {
        "startLine": 786,
        "startChar": 0,
        "endLine": 793,
        "endChar": 8
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8374ac0_c2499cb9",
        "filename": "resources/libraries/bash/function/device.sh",
        "patchSetId": 12
      },
      "lineNbr": 793,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-21T09:43:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0acd81e9_0badd82f",
      "range": {
        "startLine": 786,
        "startChar": 0,
        "endLine": 793,
        "endChar": 8
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0536a297_60da07d0",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 12
      },
      "lineNbr": 448,
      "author": {
        "id": 1263
      },
      "writtenOn": "2021-10-20T15:21:36Z",
      "side": 1,
      "message": "It would be nice to mention here we intentionally avoid unbinding (if the driver is correct) as a workaround to a driver issue.",
      "range": {
        "startLine": 448,
        "startChar": 73,
        "endLine": 448,
        "endChar": 74
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b08ceb88_118a6358",
        "filename": "resources/libraries/python/DUTSetup.py",
        "patchSetId": 12
      },
      "lineNbr": 448,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-21T09:43:15Z",
      "side": 1,
      "message": "It\u0027s not a workaround and it is also not a driver issue. We\u0027ve been framing is as a driver issue, since that\u0027s what it looked like at the beginning, but my understanding has moved quite a bit. More in: https://jira.fd.io/browse/CSIT-1794. I\u0027ll add this reference to the commit message.",
      "parentUuid": "0536a297_60da07d0",
      "range": {
        "startLine": 448,
        "startChar": 73,
        "endLine": 448,
        "endChar": 74
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ac326df_8200c2cc",
        "filename": "resources/libraries/robot/shared/interfaces.robot",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-19T10:26:07Z",
      "side": 1,
      "message": "I needed the function to not unbind vfio-pci if already bound, but I couldn\u0027t do a separate check since RF doesn\u0027t allow nested FOR cycles, so I reworked the function. It\u0027s not used anywhere else, so I think that\u0027s the best solution.",
      "range": {
        "startLine": 140,
        "startChar": 6,
        "endLine": 140,
        "endChar": 42
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ca46678_4e2ffd83",
        "filename": "resources/libraries/robot/shared/interfaces.robot",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 1263
      },
      "writtenOn": "2021-10-20T15:21:36Z",
      "side": 1,
      "message": "\u003e RF doesn\u0027t allow nested FOR cycles\n\nThe usual workaround is to put the inner FOR into a keyword called from the outer FOR.\nYour solution of doing the inner for in Python is even better.",
      "parentUuid": "8ac326df_8200c2cc",
      "range": {
        "startLine": 140,
        "startChar": 6,
        "endLine": 140,
        "endChar": 42
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5238f206_8b875761",
        "filename": "resources/libraries/robot/shared/interfaces.robot",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 76
      },
      "writtenOn": "2021-10-20T17:21:24Z",
      "side": 1,
      "message": "I prefer hard unbind. I think it is there for a reason. No exceptions",
      "parentUuid": "7ca46678_4e2ffd83",
      "range": {
        "startLine": 140,
        "startChar": 6,
        "endLine": 140,
        "endChar": 42
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3ea93a1_10a8f5d8",
        "filename": "resources/libraries/robot/shared/interfaces.robot",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 576
      },
      "writtenOn": "2021-10-21T09:43:15Z",
      "side": 1,
      "message": "What is the reason?\n\nWith this solution, we can\u0027t unbind the vfio-pci driver because the VF will be no longer be visible in the container.",
      "parentUuid": "5238f206_8b875761",
      "range": {
        "startLine": 140,
        "startChar": 6,
        "endLine": 140,
        "endChar": 42
      },
      "revId": "99b18f34220db68bedde939f33a8548a51f8bab4",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}