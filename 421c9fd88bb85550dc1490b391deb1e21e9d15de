{
  "comments": [
    {
      "key": {
        "uuid": "3da8756d_4588e698",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-27T17:54:36Z",
      "side": 1,
      "message": "Add the following line to integrate with Jira:\n\nTicket: CSIT-1378",
      "range": {
        "startLine": 20,
        "startChar": 48,
        "endLine": 20,
        "endChar": 49
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67cef15d_f67b68e4",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 91,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-27T17:17:50Z",
      "side": 1,
      "message": "node.get(\u0027type\u0027)",
      "range": {
        "startLine": 91,
        "startChar": 13,
        "endLine": 91,
        "endChar": 25
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08610098_5f86619b",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 91,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-27T17:54:36Z",
      "side": 1,
      "message": "I prefer to store the result (already used in line 89) into a local variable, and use that, instead of accessing the dict again.\n\nAlso, this is merely copied from Base line 49. :)",
      "parentUuid": "67cef15d_f67b68e4",
      "range": {
        "startLine": 91,
        "startChar": 13,
        "endLine": 91,
        "endChar": 25
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bcfd3b8_3c52b21a",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 131,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-27T17:17:50Z",
      "side": 1,
      "message": "no way doing it like this. it needs to be reinitialized.",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 131,
        "endChar": 74
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7426f084_52a3c9b1",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 142,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-27T17:17:50Z",
      "side": 1,
      "message": "wrong name of function (it should be initialized or something like that)",
      "range": {
        "startLine": 142,
        "startChar": 8,
        "endLine": 142,
        "endChar": 43
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e422b2d_53a0bf7f",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 142,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-27T17:54:36Z",
      "side": 1,
      "message": "Yeah. This is to be called from setup of unrelated suite.\n\"ensure_traffic_generator_is_torn_down\" (or a shorter variant) sounds better.",
      "parentUuid": "7426f084_52a3c9b1",
      "range": {
        "startLine": 142,
        "startChar": 8,
        "endLine": 142,
        "endChar": 43
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a96da90_39e3909e",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 156,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-27T17:17:50Z",
      "side": 1,
      "message": "i do not understand this",
      "range": {
        "startLine": 152,
        "startChar": 1,
        "endLine": 156,
        "endChar": 29
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68ef35a8_9c626cda",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 156,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-27T17:54:36Z",
      "side": 1,
      "message": "That means docstring is not explaining the usage well enough.",
      "parentUuid": "0a96da90_39e3909e",
      "range": {
        "startLine": 152,
        "startChar": 1,
        "endLine": 156,
        "endChar": 29
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "698daaf6_21d689a4",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 183,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-27T17:17:50Z",
      "side": 1,
      "message": "driver cannot be none logically. It is always something and the something is defined in topology file",
      "range": {
        "startLine": 183,
        "startChar": 1,
        "endLine": 183,
        "endChar": 32
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22c9819e_d9475401",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 183,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-27T17:54:36Z",
      "side": 1,
      "message": "\u003e the something is defined in topology file\n\nWhich somethings can we rely on? Elsewhere you want node.get(\u0027type\u0027) as if the node type could be undefined in the topology file.\n\nOr do you mean driver initialization should be done automatically (so everything works even if no suite setup initializes driver explicitly)? That would probably not work, as the initialization needs data about which interfaces to use.",
      "parentUuid": "698daaf6_21d689a4",
      "range": {
        "startLine": 183,
        "startChar": 1,
        "endLine": 183,
        "endChar": 32
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "598f8276_a8ddcafe",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 183,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-10-02T09:46:50Z",
      "side": 1,
      "message": "TG:\n    type: TG\n    subtype: TREX\n\n  TG:\n    type: TG\n    subtype: IXIA\n\n  TG:\n    type: TG\n    subtype: SPIRENT\n\n  TG:\n    type: TG\n    subtype: WRK",
      "parentUuid": "22c9819e_d9475401",
      "range": {
        "startLine": 183,
        "startChar": 1,
        "endLine": 183,
        "endChar": 32
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0474ea4b_56d084e6",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 183,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-10-02T12:57:44Z",
      "side": 1,
      "message": "\u003e subtype: WRK\n\nWe have few WRK tests, but they run on TG of subtype TREX. In suite setup [1], TRex is torn down, and PCI devices are bound to Linux driver (written in topology).\n\nI see several issues:\n1. Software traffic generators do not define a TG node subtype, as we see single TG node can support several TG \"apps\", depending on what is installed there.\n2. Software traffic generators do not have unified API this python module could expose. You cannot use WRK for MRR tests, you cannot (easily, with the current CSIT code) use TRex for TCP tests.\n3. This specific Change uses _driver to mean tg_driver, not pci_device_driver, creating confusion.\n\nQuestions:\n1. Do we want to unify API for software generators, throwing NotImplementedError if user calls a method not supported by a particular tg_driver?\n2. How should users specify which tg_driver to use, so that TRex vs WRK is decided in suite, but TRex vs Ixia is decided in topology?\n\n[1] https://github.com/FDio/csit/blob/37a9451377f7239365b5af778b8072d1585a2d2a/resources/libraries/robot/shared/suite_setup.robot#L233-L262",
      "parentUuid": "598f8276_a8ddcafe",
      "range": {
        "startLine": 183,
        "startChar": 1,
        "endLine": 183,
        "endChar": 32
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b1284f4_5d7b8ce5",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 183,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-10-02T13:51:56Z",
      "side": 1,
      "message": "And that is exactly why someone who is doing this refactor should first describe in rst/svg and discuss instead of coding first.\n\n- Currently the problem is that TREX subtype is misused for WRK as well as WRK is a TG subtype so we have problem to solve first. \n- WRK should use this class for proper init and deinit to avoid conflict with TREX. (containerized approach?)\n- Why WRK cannot use MRR? it is same problem domain. Run maximum load of HTTP blah blah. Give RAW results.\n\nThe above is the example how we can use modular approach and why i wanted to use all units (eg. Percentage, PPS, TPS, RPS, etc). This way we can fully abstract measurement and depends on Tg.subtype use proper parser for output.\n\nOriginal design of this class/driver assumed that driver (shell/python remote/local script) will listen to same subset of commands (run, stop, give results, configure profile) while controling HW/SW TGs of various vendors. If the output is given in same way we can extract info from measurement and use particular logic. So having not only RobotKW for TRex but also for WRK in same way. \n\nBenefits are clear having same KW for getting VPP statistics during measurement while low level TG code is abstracted.\n\n| Do we want to unify API for software generators, throwing NotImplementedError if user calls a method not supported by a particular tg_driver?\n\nyes\n\n| How should users specify which tg_driver to use, so that TRex vs WRK is decided in suite, but TRex vs Ixia is decided in topology?\n\nWe need to design first ;). There are multiple ways in my head but we should start drawing vs coding.\nEg. define Tg.subtype\u003dSW making particular RF keyword to decide which to chose, or we can pick base on traffic profile or suite variable etc.",
      "parentUuid": "0474ea4b_56d084e6",
      "range": {
        "startLine": 183,
        "startChar": 1,
        "endLine": 183,
        "endChar": 32
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3ca5726_5c293dfc",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 183,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-10-03T10:28:20Z",
      "side": 1,
      "message": "\u003e first describe in rst/svg and discuss\n\nCreated [2] with my point of view.\nUsing steps listed there, my priorities are 1 and 4, Peter\u0027s priorities seem to be 2 and 7, and the current scope of this change is 1, 2 and 3.\n\n\u003e Why WRK cannot use MRR?\n\nIn [2], listed as item 2 of current issues.\n\n\u003e Percentage, PPS, TPS, RPS\n\nAdded to [2] as step 5.\n\n\u003e We need to design first\n\nAdded to [2] as a generic step 7. The point is, I believe we can merge several changes before we get to that.\n\n[2] https://gerrit.fd.io/r/c/csit/+/22506",
      "parentUuid": "7b1284f4_5d7b8ce5",
      "range": {
        "startLine": 183,
        "startChar": 1,
        "endLine": 183,
        "endChar": 32
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da7b1872_12efed0e",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 298,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-27T17:17:50Z",
      "side": 1,
      "message": "i want to keep both frames and percentage in driver (PLR/MLR can be added later but driver should support it)",
      "range": {
        "startLine": 297,
        "startChar": 1,
        "endLine": 298,
        "endChar": 48
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f9cb423_4223f9ec",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 298,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-09-27T17:54:36Z",
      "side": 1,
      "message": "This method is called optionally in output processing (and we do not show percentages there).\n\nPercentages are still available as input arguments, at least according to lines 546 and 767 (until CSIT-1620).",
      "parentUuid": "da7b1872_12efed0e",
      "range": {
        "startLine": 297,
        "startChar": 1,
        "endLine": 298,
        "endChar": 48
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d222adba_1934bbe8",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 752,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-27T17:17:50Z",
      "side": 1,
      "message": "Use original way to kill it.",
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2680b8e8_0b5cb20a",
        "filename": "resources/libraries/python/TrafficGenerator.py",
        "patchSetId": 10
      },
      "lineNbr": 961,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-09-27T17:17:50Z",
      "side": 1,
      "message": "remove, pointless, must be part of topology.py",
      "range": {
        "startLine": 920,
        "startChar": 0,
        "endLine": 961,
        "endChar": 72
      },
      "revId": "421c9fd88bb85550dc1490b391deb1e21e9d15de",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}