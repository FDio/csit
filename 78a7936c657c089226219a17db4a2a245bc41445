{
  "comments": [
    {
      "key": {
        "uuid": "3a045101_f7e6f743",
        "filename": "resources/libraries/python/HTTPRequest.py",
        "patchSetId": 5
      },
      "lineNbr": 157,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "Add repr(err) as parameter to format.",
      "range": {
        "startLine": 157,
        "startChar": 49,
        "endLine": 157,
        "endChar": 62
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_57f80be5",
        "filename": "resources/libraries/python/HTTPRequest.py",
        "patchSetId": 5
      },
      "lineNbr": 161,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "raise HTTPRequestError(\"Not possible to connect to {0}.\\n\".format(url) + repr(err), enable_logging\u003denable_logging)",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 161,
        "endChar": 60
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_37dd7f71",
        "filename": "resources/libraries/python/HTTPRequest.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "These errors do not need logging?",
      "range": {
        "startLine": 163,
        "startChar": 18,
        "endLine": 163,
        "endChar": 34
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_17da8378",
        "filename": "resources/libraries/python/HTTPRequest.py",
        "patchSetId": 5
      },
      "lineNbr": 167,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "why do we have to specify \\n here? It\u0027s recurring pattern, so either move it to the constructor handling or, preferably, remove completely.",
      "range": {
        "startLine": 167,
        "startChar": 61,
        "endLine": 167,
        "endChar": 63
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_d7e3fb31",
        "filename": "resources/libraries/python/HTTPRequest.py",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "what about XML payloads?",
      "range": {
        "startLine": 210,
        "startChar": 15,
        "endLine": 210,
        "endChar": 42
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_17c16380",
        "filename": "resources/libraries/python/HoneycombSetup.py",
        "patchSetId": 5
      },
      "lineNbr": 87,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "please add ssh.exec_command_sudo_log(), that has the same functionality as this, but adds the logger.debug() lines that you have below on lines 89 and 90. Reason is that we duplicate this everywhere.",
      "range": {
        "startLine": 87,
        "startChar": 49,
        "endLine": 87,
        "endChar": 66
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_f7bdd703",
        "filename": "resources/libraries/python/HoneycombSetup.py",
        "patchSetId": 5
      },
      "lineNbr": 110,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "os.path.join is wrong in this context, because it takes current OS execution environment as base, hence if you start these testcases from Windows, it won\u0027t work if the DUTs are linux - which they are.",
      "range": {
        "startLine": 110,
        "startChar": 33,
        "endLine": 110,
        "endChar": 46
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_f70277b3",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "replace honeycomb with Honeycomb everywhere.",
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_374b3f2d",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "how ?",
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_1748432c",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "how?\nYou don\u0027t have to copy paste. In the module docstring, just mention that this module contains one utility class that ....\n\nAnd here provide more details on how this is achieved - REST/HTTP/XML/JSON, error handling. What have you.",
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_7758a7fa",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "either swap words, or \"encoded in UTF-8\"",
      "range": {
        "startLine": 36,
        "startChar": 39,
        "endLine": 36,
        "endChar": 47
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_575dabe8",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "Honeycomb.",
      "range": {
        "startLine": 37,
        "startChar": 11,
        "endLine": 37,
        "endChar": 20
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_176f2394",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "Great that you have description here. But more general write up is due either in docs/ dir, or on wiki. Either link from docs/ to wiki, or from wiki to docs/. Choose one, and be consistent with other documentation too.",
      "range": {
        "startLine": 37,
        "startChar": 22,
        "endLine": 37,
        "endChar": 58
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_f76b9783",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "host and port",
      "range": {
        "startLine": 38,
        "startChar": 54,
        "endLine": 38,
        "endChar": 56
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_b7050fc4",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "there\u0027s no period in the file, is there ? :)",
      "range": {
        "startLine": 39,
        "startChar": 54,
        "endLine": 39,
        "endChar": 55
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_770f87e2",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 46,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "you are not really joining paths here, are you ?",
      "range": {
        "startLine": 46,
        "startChar": 14,
        "endLine": 46,
        "endChar": 25
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_57148bf4",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 72,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "... addressed by path from ...",
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_37f9ffc8",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "host",
      "range": {
        "startLine": 100,
        "startChar": 52,
        "endLine": 100,
        "endChar": 54
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_17f603d8",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 113,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "HTTP response.\n\nWhat about the status_code ?",
      "range": {
        "startLine": 113,
        "startChar": 22,
        "endLine": 113,
        "endChar": 28
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_d7ff7ba9",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "I think you have to distinguish create from put, and having only \"set\" here is not enough. So I think this should be renamed to put.",
      "range": {
        "startLine": 118,
        "startChar": 8,
        "endLine": 118,
        "endChar": 26
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_9731f3a4",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 135,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "Add some text to the debug function, so that reader knows what they are looking at.",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 26
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_b72cef4b",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "add debugging.",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 143,
        "endChar": 32
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a045101_7726676a",
        "filename": "resources/libraries/python/HoneycombUtil.py",
        "patchSetId": 5
      },
      "lineNbr": 163,
      "author": {
        "id": 13
      },
      "writtenOn": "2016-04-11T11:49:51Z",
      "side": 1,
      "message": "please be consistent with logging messages.",
      "range": {
        "startLine": 163,
        "startChar": 0,
        "endLine": 163,
        "endChar": 49
      },
      "revId": "78a7936c657c089226219a17db4a2a245bc41445",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}