# Copyright (c) 2021 Cisco and/or its affiliates.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

$id: https://fd.io/FIXME/CSIT/UTI/test_case/info/0.2.0
$schema: https://json-schema.org/draft/2020-12/schema
description: >-
    Schema for info output of test case.
type: object
additionalProperties: false
properties:
    duration:
        $ref: "#/$defs/types/nonnegative_number"
        description: >-
            A derived quantity, present only in info output files.
            Difference between start_time and end_time, in seconds.
    end_time:
        $ref: "#/$defs/types/date_time"
        description: >-
            UTC date and time in RFC 3339 format, specifying calendar time
            just before test case ended (at the end of test case teardown).
    log:
        $ref: "#/$defs/types/empty_array"
        description: >-
            No log items are implemented in the current version,
            but the (empty) list is present to simplify logic
            in multi-version importers.
    message:
        type: string
        description: >-
            If status is PASS, this property is not present.
            Otherwise, value taken directly from TEST_MESSAGE Robot variable,
            read at the end of test case (teardown).
            It contains information from the exception
            that caused the failure, probably with additional exceptions
            from teardown keywords.
    results:
        type: object
        oneOf:
        -   additionalProperties: false
            properties:
                samples:
                    $ref: "#/$defs/types/rate_list_with_bandwidth"
                    description: >-
                        Receive rates for multiple one MRR trials.
                        For PPS, these are aggregate (bidirectional)
                        rates.
                        Currently, the tests are exporting
                        approximated receive rates.
                        That means the actual trial duration
                        is measured (as opposed to trusting traffic
                        generator to honor its target duration),
                        so the resulting values contain noise
                        from time measurement, and can be lower
                        than the real performance
                        (due to various time overheads).
                        Bandwidth values are supported, but currently
                        Robot does not export them.
                avg:
                    $ref: "#/$defs/types/nonnegative_number"
                    description: >-
                        A derived quantity, present only
                        in info output files.
                        It is the arithmetic average
                        of the (rate value part of) samples list.
                stdev:
                    $ref: "#/$defs/types/nonnegative_number"
                    description: >-
                        A derived quantity, present only
                        in info output files.
                        It's the standard deviation for
                        the (rate value part of) samples list,
                        as computed by jumpavg library.
                test_type:
                    type: string
                    const: mrr
                    comment: >-
                        TODO: Add link to methodology document for MRR .
            required:
            -   samples
            -   avg
            -   stdev
            -   test_type
            comment: >-
                TODO: Add multiplicity field,
                so PAL can detect incomplete samples.
        -   additionalProperties: false
            properties:
                ndr:
                    $ref: "#/$defs/macros/lower_and_upper_rate"
                    description: >-
                        The results refer to search for NDR
                        (Non Drop Rate). For PPS, this is aggregate
                        (bidirectional) rate.
                        Each bound was used as the target load value
                        in a full-duration trial measurement.
                        The accepted loss ratio for NDR is exact zero.
                        Note that packets the Traffic Generator
                        did not send are also counted as lost packets.
                pdr:
                    $ref: "#/$defs/macros/lower_and_upper_rate"
                    description: >-
                        The results refer to search for PDR
                        (Partial Drop Rate). For PPS, this is aggregate
                        (bidirectional) rate.
                        Each bound was used as the target load value
                        in a full-duration trial measurement.
                        The accepted loss ratio for PDR is 0.5%.
                        Note that packets the Traffic Generator
                        did not send are also counted as lost packets.
                latency_forward:
                    $ref: "#/$defs/macros/latency_for_loads"
                    description: >-
                        Object with results related to latency part
                        of NDRPDR test, for forward traffic direction.
                        It is the direction used in unidirectional
                        traffic profiles.
                        ASTF profiles and IMIX STL profiles
                        do not support latency information,
                        so for those tests this object is missing.
                        It is also missing if Traffic Generator
                        fails to return valid latency results
                        for any other reasons,
                        e.g. latency rate is too high for CPU/NIC used.
                latency_reverse:
                    $ref: "#/$defs/macros/latency_for_loads"
                    description: >-
                        Object with results related to latency part
                        of NDRPDR test, for reverse traffic diration.
                        This object is not present
                        when unidirectional traffic profiles are used.
                        ASTF profiles and IMIX STL profiles
                        do not support latency information,
                        so for those tests this object is missing.
                        It is also missing if Traffic Generator
                        fails to return valid latency results
                        for any other reasons,
                        e.g. latency rate is too high for CPU/NIC used.
                latency_unit:
                    type: string
                    enum:
                    -   us
                    description: >-
                        Unit of measurement for latency time.
                        Currently a constant, but later versions
                        of the model may allow more values.
                test_type:
                    type: string
                    const: ndrpdr
                    comment: >-
                        TODO: Add link to methodology document for NDRPDR .
            required:
            -   ndr
            -   pdr
            -   test_type
            dependencies:
                latency_forward:
                -   latency_unit
                latency_reverse:
                -   latency_unit
        -   additionalProperties: false
            properties:
                critical_rate:
                    $ref: "#/$defs/macros/lower_and_upper_rate"
                    description: >-
                        The results refer to bayesian estimate of critical rate
                        corresponding to 10^-7 average loss ratio.
                        For PPS, this is aggregate (bidirectional) rate.
                        The bounds are based on trial measurement results,
                        but are not equal to any target load used.
                        Note that packets the Traffic Generator
                        did not send are also counted as lost packets.
                test_type:
                    type: string
                    const: soak
                    comment: >-
                        TODO: Add link to methodology document for SOAK .
        -   additionalProperties: false
            properties: {}
            description: >-
                This case represents a test with no specific result
                (outside message), e.g. device test; or a test with result
                not parsed into this version of model yet, e.g. GSO test.
    start_time:
        $ref: "#/$defs/types/date_time"
        description: >-
            UTC date and time in RFC 3339 format, specifying calendar time
            just after test case started (at the start of test setup).
    status:
        type: string
        enum:
        -   PASS
        -   FAIL
        description: >-
            Value taken directly from TEST_STATUS Robot variable.
            It is PASS or FAIL, read at the end of test case (teardown).
    suite_id:
        type: string
        description: >-
            A derived quantity, present only in info output files.
            This property has a value, converted from suite name
            by replacing spaces with underscores and converting to lowercase.
        comment: >-
            TODO: Test with underscores and spaces, both in suite and test.
    suite_name:
        type: string
        description: >-
            Value taken directly from SUITE_NAME Robot variable.
            It consists of CamelCase names for the suite level delimited by dot.
            Each name may contain spaces (converted from underscores in source).
    sut_type:
        type: string
        enum:
        -   VPP
        -   DPDK
        description: >-
            Identifier for System Under Test.
            Some tests may not set this, the property is not present
            in that case. For example, TRex tests use only Traffic Generator,
            there is no SUT.
    sut_version:
        type: string
        description: >-
            Some tests may not set this (this property is not present then).
            The value should correspond to sut_type. For VPP type, the value
            is taken from version field of reply to show_version API call.
    tags:
        type: array
        items:
            type: string
        description: >-
            The list of strings comes directly from Robot variable TEST_TAGS.
            The content should include both static and dynamic tags
            at the end of test case (teardown).
    test_documentation:
        type: string
        description: >-
            Value taken directly from TEST_DOCUMENTATION Robot variable.

            The content is what you see in suite file at test case definition,
            which is usually empty as CSIT uses data driven test cases.
    test_id:
        type: string
        description: >-
            A derived quantity, present only in info output files.
            This property has a value, composed from suite name and test name
            connected with dot. Also, any space is replaced by underscore
            and letetrs are converted to lower case.
        comment: >-
            TODO: Test with underscores and spaces, both in suite and test.
    test_name:
        type: string
        description: >-
            Value taken directly from TEST_NAME Robot variable.
            It consists of CamelCase name of this test case.
    version:
        type: string
        const: 1.0.0
        description: >-
            CSIT model version (semver format) the exporting code adhered to.
required:
-   duration
-   end_time
-   log
-   results
-   start_time
-   status
-   suite_id
-   suite_name
-   tags
-   test_documentation
-   test_id
-   test_name
-   version
if:
    properties:
        status:
            const: PASS
then:
    not:
        required:
        -   message
else:
    required:
    -   message

$defs:
    types:
        nonnegative_number:
            type: number
            minimum: 0
        nonnegative_integer:
            type: integer
            minimum: 0
        positive_integer:
            type: integer
            minimum: 1
        date_time:
            type: string
            format: date-time
        empty_array:
            type: array
            maxItems: 0
        rate_unit:
            type: string
            enum:
            -   pps
            -   cps
        rate_without_bandwidth:
            type: object
            additionalProperties: false
            properties:
                value:
                    $ref: "#/$defs/types/nonnegative_number"
                    description: >-
                        Unless specified otherwise, this is the aggregated rate
                        (sum of both traffic directions).
                        Depending on the usage, the value can express
                        intended load, offered load, receive rate,
                        and various approximations or estimated bounds thereof.
                unit:
                    $ref: "#/$defs/types/rate_unit"
                    description: >-
                        A transaction rate unit the value is expressed in.
                        The value is pps (packets per second),
                        or cps (connections per second).
            required:
            -   value
            -   unit
            description: >-
                Reusable composite type, value together with its
                unit of measurement.
        rate_list_without_bandwidth:
            type: object
            additionalProperties: false
            properties:
                values:
                    type: array
                    minItmes: 1
                    items:
                        $ref: "#/$defs/types/nonnegative_number"
                        description: >-
                            Unless specified otherwise, this is the aggregated
                            rate (sum of both traffic directions).
                            Depending on the usage, the value can express
                            intended load, offered load, receive rate,
                            and various approximations or estimated bounds
                            thereof.
                    description: >-
                        List of values of the same unit, useful for MRR.
                unit:
                    $ref: "#/$defs/types/rate_unit"
                    description: >-
                        A transaction rate unit the value is expressed in.
                        The value is pps (packets per second),
                        or cps (connections per second).
            required:
            -   values
            -   unit
            description: >-
                Reusable composite type, multiple values together with their
                unit of measurement.
        bandwidth:
            type: object
            additionalProperties: false
            properties:
                value:
                    $ref: "#/$defs/types/nonnegative_number"
                    description: >-
                        Bandwidth value computed from the corresponding rate.
                    comment: >-
                        TODO: Add link explaining our L1 bandwidth calculation.
                unit:
                    type: string
                    enum:
                    -   Gbps
                    description: >-
                        Unit of measurement for bandwidth values.
                        Currently a constant, but later versions of model
                        may allow more units.
            required:
            -   value
            -   unit
            description: >-
                This is a derived entity, thus it only appears in info output,
                and only when rate unit is pps.
        bandwidth_list:
            type: object
            additionalProperties: false
            properties:
                values:
                    type: array
                    minItmes: 1
                    items:
                        $ref: "#/$defs/types/nonnegative_number"
                        description: >-
                            Unless specified otherwise, this is the aggregated
                            bandwidth (sum of both traffic directions).
                            Depending on the usage, the value can express
                            intended load, offered load, receive rate,
                            and various approximations or estimated bounds
                            thereof.
                    description: >-
                        List of values of the same unit, useful for MRR.
                    comment: >-
                        TODO: Add link explaining our L1 bandwidth calculation.
                unit:
                    type: string
                    enum:
                    -   Gbps
                    description: >-
                        Unit of measurement for bandwidth values.
                        Currently a constant, but later versions of model
                        may allow more units.
            required:
            -   value
            -   unit
            description: >-
                This is a derived entity, thus it only appears in info output,
                and only when rate unit is pps.
        rate_with_bandwidth:
            type: object
            additionalProperties: false
            properties:
                rate:
                    $ref: "#/$defs/types/rate_without_bandwidth"
                bandwidth:
                    $ref: "#/$defs/types/bandwidth"
            required:
            - rate
            description: >-
                Reusable composite type, joining primary rate
                with optional derived bandwidth.
                Not all test types currently compute bandwidth,
                even if rate unit is pps.
        rate_list_with_bandwidth:
            type: object
            additionalProperties: false
            properties:
                rate:
                    $ref: "#/$defs/types/rate_list_without_bandwidth"
                bandwidth:
                    $ref: "#/$defs/types/bandwidth_list"
            required:
            - rate
            description: >-
                Reusable composite type, joining primary rates
                with optional derived bandwidths.
                No test types currently computes the bandwidth part.
    macros:
        lower_and_upper_rate:
            type: object
            additionalProperties: false
            properties:
                lower:
                    $ref: "#/$defs/types/rate_with_bandwidth"
                    description: >-
                        The lower bound (or min_rate) for the estimate
                        of a particular searched value.
                upper:
                    $ref: "#/$defs/types/rate_with_bandwidth"
                    description: >-
                        The upper bound (or max_rate) for the estimate
                        of a particular searched value.
            required:
            -   lower
            -   upper
        latency_numbers:
            type: object
            additionalProperties: false
            properties:
                min:
                    $ref: "#/$defs/types/nonnegative_integer"
                    description: >-
                        Rounded minimal latency time measured in this trial.
                        See latency_unit property for the unit of measurement.
                max:
                    $ref: "#/$defs/types/positive_integer"
                    description: >-
                        Rounded maximal latency time measured in this trial.
                        See latency_unit property for the unit of measurement.
                        Zero value is not allowed, as that is one of symptoms
                        of Traffic Generator failing to get proper latency.
                avg:
                    $ref: "#/$defs/types/nonnegative_integer"
                    description: >-
                        Rounded average latency time measured in this trial.
                        See latency_unit property for the unit of measurement.
                hdrh:
                    type: string
                    description: >-
                        Base64-encoded compressed representation of HDRHistogram
                        of all latency sample times encountered
                        in this latency trial.
                        See latency_unit property for the unit of measurement.
                    comment: >-
                        TODO: Add a link to URL explaining
                        how to decode the data?
            required:
            -   avg
            -   hdrh
            -   max
            -   min
        latency_for_loads:
            type: object
            additionalProperties: false
            properties:
                pdr_0:
                    $ref: "#/$defs/macros/latency_numbers"
                    description: >-
                        Object related to latency measurement performed
                        at minimal rate (currently 9000 pps per direction).
                pdr_10:
                    $ref: "#/$defs/macros/latency_numbers"
                    description: >-
                        Object related to latency measurement performed
                        at 10% of PDR lower bound, if needed rounded up
                        to minimal rate (currently 9000 pps per direction).
                pdr_50:
                    $ref: "#/$defs/macros/latency_numbers"
                    description: >-
                        Object related to latency measurement performed
                        at 50% of PDR lower bound, if needed rounded up
                        to minimal rate (currently 9000 pps per direction).
                pdr_90:
                    $ref: "#/$defs/macros/latency_numbers"
                    description: >-
                        Object related to latency measurement performed
                        at 90% of PDR lower bound, if needed rounded up
                        to minimal rate (currently 9000 pps per direction).
            required:
            -   pdr_0
            -   pdr_10
            -   pdr_50
            -   pdr_90
