
By default, any item delivered by Vratko should be reviewed by Maciek.
The review will probably propose tweaks, they will be discussed and decided.
The review may cause Vratko return to a previous item
(for example the item tweaks may be adding new terms to terminology).

- Document MLRv7 code:
 - Vratko to finish editing.
 - Tibor to review.
  - Interaction between components should be clear even for people
    who are not familiar with the complete algorithm.
- Terminology freeze (as in no further tweak unless forced by other item):
 - Vratko to compile current terms (perhaps also their old names).
  - Comments in MLRv7 code may contain terms not yet mentioned in draft.
  - This includes the "MLRsearch" term itself.
- Finite state machines (FSMs):
 - Vratko to write/draw and describe the FSMs as implemented in MLRv7 code.
 ?? Restructure code if better FSMs are found and time permits.
- Draft: high level description:
 - Vratko to write.
- Draft: low level description:
 - Vratko and Maciek to agree which details should be in draft and which not.
 - Vratko to write.
- Draft: Finalize and present to BMWG on an IETF meeting.
- CSIT productization:
 - Vratko to finish integration and gather data with various configurations.
 - Decide on open questions:
  - Migrate reporting from intended load to forwarding rate.
  - Choose the new configurations (ndrpdr, reconf) to use in CSIT production.
   - E.g. use a nonzero exceed ratio to stabilize "NDR".
 ?? Pilot deployment when most tests stay at v2 but few run also at v7 in trending?
 - Prepare CSIT methodology page with shorter MLRv7 description.
 - Switch CSIT to v7 and monitor for at least one release cycle.
  - Publish the new methodology.
- Logic freeze (no logic changes unless forced by a cdash-visible bug):
 - Refrain from trying to optimize the code further.
 - Minor tweaks are allowed:
  - Improvements to methodology, code documentation, variable names if needed.
  - Improvements to logging.
  - Bumping Python versions.
   - Apply new language features where convenient.
 - Bigger improvement ideas should go to PLRsearch or a brand new search algorithm.
?? Formal verification, proving MLRsearch cannot get stuck (or slow)
   no mater what the measurement results are.
 ?? Fuzz tests?
