{
  "comments": [
    {
      "key": {
        "uuid": "6efbeee9_78d8641c",
        "filename": "docs/job_specs/report_coverage/2n-clx/l2-00.md",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-09-17T13:46:50Z",
      "side": 1,
      "message": "The point of estimates is to update them before we see the real durations.\n\n171 * 3.1 / 60 \u003d 8.83",
      "range": {
        "startLine": 3,
        "startChar": 17,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "50ea4739c3543e517b7dbee0898c933364379621",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "426f4b8c_facf3954",
        "filename": "docs/job_specs/report_coverage/2n-clx/l2-00.md",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-09-17T13:51:36Z",
      "side": 1,
      "message": "estimates are changing base on code changes. Per TC constant is foobar. 3.1 is not true anymore.",
      "parentUuid": "6efbeee9_78d8641c",
      "range": {
        "startLine": 3,
        "startChar": 17,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "50ea4739c3543e517b7dbee0898c933364379621",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da3996a5_6c5ba029",
        "filename": "docs/job_specs/report_coverage/2n-clx/l2-00.md",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-09-18T14:06:26Z",
      "side": 1,
      "message": "\u003e Per TC constant is foobar.\n\nThat particular type of foobar is called \"the estimate\" in this case. We know it will be off (comapred to real), but we have nothing better.\n\nBy the way, we should have a helpful tox checker that makes sure the values are consistent and gives an output as a .diff file, so it can be applied, similarly to what autogen checker does.\n\nIn this case: The checker should compute the number of tests and update \"tests\" value. There should be only one \"test mins\" value. If \"job hrs real\" value is edited (and \"tests\" not), the checker should compute and update \"test mins\" value. If \"tests\" value is edited (but not \"job hrs real\" nor \"test mins\"), the checker should compute and update \"job hrs est\" value. And so on.",
      "parentUuid": "426f4b8c_facf3954",
      "range": {
        "startLine": 3,
        "startChar": 17,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "50ea4739c3543e517b7dbee0898c933364379621",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bb20a9c_3d0cc5f9",
        "filename": "docs/job_specs/report_coverage/2n-clx/l2-00.md",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-09-21T15:05:33Z",
      "side": 1,
      "message": "Well technically we should have an idea from dry-run [rc1,rc2], and someone needs to put some coefficient and then do a*b although that is also artificial.\n\nTo me:\n1) PAL producing trending /graphs/blah/tables\n2) PAL to put special file docs.fd.io/csit/trending/../detail_time_report.txt (CSV file, per test , per suite, per run results)\n3) Fetch it from link above or leave it there and watch there.\n\n\n//\nMerging this patch only after confirmed from Neale?",
      "parentUuid": "da3996a5_6c5ba029",
      "range": {
        "startLine": 3,
        "startChar": 17,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "50ea4739c3543e517b7dbee0898c933364379621",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}