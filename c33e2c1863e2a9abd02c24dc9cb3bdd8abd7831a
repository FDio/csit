{
  "comments": [
    {
      "key": {
        "uuid": "3cc3b048_fcd71b85",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-18T10:10:33Z",
      "side": 1,
      "message": "Introduce IP_Profiles",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 40
      },
      "revId": "c33e2c1863e2a9abd02c24dc9cb3bdd8abd7831a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6b16084_f23c0988",
        "filename": "resources/ip_profiles/trex/trex-sl-3n-azure.py",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-03-20T14:32:10Z",
      "side": 1,
      "message": "If I understand it correctly, for cloud testbeds each NIC/port has some restriction on IP addresses. If that is true, the restrictions should be a part of the testbed yaml definition.\nEach suite can call a library that looks at yaml definition and chooses specific ranges for the traffic.\nAs traffic profiles run on a TG (not on Robot executor), they also need to have access to the chosen range. The library could create a file (I prefer .json or .yaml) to be copied on TG, where profile_trex_stateless_base_class.py reads it and overrides the defaults set in the traffic profile .py file.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 15
      },
      "revId": "c33e2c1863e2a9abd02c24dc9cb3bdd8abd7831a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd6330ac_e73d6318",
        "filename": "resources/ip_profiles/trex/trex-sl-3n-azure.py",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-18T10:10:33Z",
      "side": 1,
      "message": "trex-sl-3n-ethip4-ip4src253",
      "range": {
        "startLine": 28,
        "startChar": 15,
        "endLine": 28,
        "endChar": 30
      },
      "revId": "c33e2c1863e2a9abd02c24dc9cb3bdd8abd7831a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f46030b2_45af9f21",
        "filename": "resources/ip_profiles/trex/trex-sl-3n-azure.py",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-18T10:10:33Z",
      "side": 1,
      "message": "no trailing spaces\n(depends on your tool you can easily setup displaying those)",
      "range": {
        "startLine": 29,
        "startChar": 48,
        "endLine": 29,
        "endChar": 49
      },
      "revId": "c33e2c1863e2a9abd02c24dc9cb3bdd8abd7831a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2790b57_ff597ffb",
        "filename": "resources/libraries/robot/ip/ip4.robot",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-03-20T14:32:10Z",
      "side": 1,
      "message": "I do not see a way how the values from trex-sl-3n-azure.py make it here.",
      "range": {
        "startLine": 48,
        "startChar": 42,
        "endLine": 48,
        "endChar": 55
      },
      "revId": "c33e2c1863e2a9abd02c24dc9cb3bdd8abd7831a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "799a7773_261f26fb",
        "filename": "resources/libraries/robot/ip/ip4.robot",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-18T10:10:33Z",
      "side": 1,
      "message": "line too long",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 86,
        "endChar": 31
      },
      "revId": "c33e2c1863e2a9abd02c24dc9cb3bdd8abd7831a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "540b4d35_12628250",
        "filename": "resources/traffic_profiles/trex/profile_trex_stateless_base_class.py",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-18T10:10:33Z",
      "side": 1,
      "message": "None \n?",
      "range": {
        "startLine": 47,
        "startChar": 26,
        "endLine": 47,
        "endChar": 32
      },
      "revId": "c33e2c1863e2a9abd02c24dc9cb3bdd8abd7831a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d149a4e4_fbdb99cd",
        "filename": "resources/traffic_profiles/trex/profile_trex_stateless_base_class.py",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-18T10:10:33Z",
      "side": 1,
      "message": "if self.ip_profile:\n?",
      "range": {
        "startLine": 123,
        "startChar": 8,
        "endLine": 123,
        "endChar": 37
      },
      "revId": "c33e2c1863e2a9abd02c24dc9cb3bdd8abd7831a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36eecd22_005f72bc",
        "filename": "resources/traffic_profiles/trex/profile_trex_stateless_base_class.py",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-03-18T10:10:33Z",
      "side": 1,
      "message": "line too long",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 125,
        "endChar": 148
      },
      "revId": "c33e2c1863e2a9abd02c24dc9cb3bdd8abd7831a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}