{
  "comments": [
    {
      "key": {
        "uuid": "0a30003c_b558cf64",
        "filename": "tests/vpp/perf/hoststack/10ge2p1x710-eth-ip4tcpbase-ldpreload-iperf3-bps.robot",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-27T16:29:29Z",
      "side": 1,
      "message": "I think it will be more readable to set these values in Variable table (of the suite file).\n(I verified variables defined in one suite Variables table are not visible in another suites.)",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 77
      },
      "revId": "be27767d0d0b4e3ee6931ae4892b3dbda24ed328",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "530d6f4d_08c0ec59",
        "filename": "tests/vpp/perf/hoststack/10ge2p1x710-eth-ip4tcpbase-ldpreload-iperf3-bps.robot",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 10
      },
      "writtenOn": "2020-04-27T20:38:40Z",
      "side": 1,
      "message": "\u003e I think it will be more readable to set these values in Variable table (of the suite file).\n\u003e (I verified variables defined in one suite Variables table are not visible in another suites.)\n\nThe downside to doing that is then all of the suite files will need to have the variables added to them, instead of having the default values set in the library file and overridden by those suites that need to change them.\n\nIMHO it is not a good idea to propagate variables across all of the suite files.  This has broken many tests which were either under development or overlooked when new \u0027universal\u0027 variables were added which are library/keyword dependent.  This makes for larger patch sets and higher maintenance costs.",
      "parentUuid": "0a30003c_b558cf64",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 77
      },
      "revId": "be27767d0d0b4e3ee6931ae4892b3dbda24ed328",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1968f299_6d133892",
        "filename": "tests/vpp/perf/hoststack/10ge2p1x710-eth-ip4tcpbase-ldpreload-iperf3-bps.robot",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-04-28T07:00:11Z",
      "side": 1,
      "message": "Both wrong.\n\nInitial CSIT design assumes to have the topology file without TG part in it. Thus you do not need to bother at all (require of course all the KWs to be DUT and TG aware). Not sure how much work it would be to test such approach. The only problem is to rewrite \"Setup suite topology interfaces\" to check if TG is in DICT or not (easy to do).\n\nDownside is that you need to copy topology files but as they are not frequently changed, it does not matter.\nBrightside is that we would not need any special excuses in common.sh to eliminate tests from 3-node and so on.",
      "parentUuid": "530d6f4d_08c0ec59",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 77
      },
      "revId": "be27767d0d0b4e3ee6931ae4892b3dbda24ed328",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc2de8b8_03e5fe90",
        "filename": "tests/vpp/perf/hoststack/10ge2p1x710-eth-ip4tcpbase-ldpreload-iperf3-bps.robot",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-28T15:20:09Z",
      "side": 1,
      "message": "\u003e The downside to doing that is then all of the suite files will need to have the variables added to them, instead of having the default values set in the library file and overridden by those suites that need to change them.\n\nNo. If a (variable table of a) suite does not specify some value, the value from a (variable table of a) library is applied. Hence only the suites wanting to override the defaults need to add the variables.\n\n\u003e Both wrong.\n\u003e Downside is that you need to copy topology files\n\nCan you give more details? This is what I imagined, but you maybe think about something different:\n\nAre you suggesting to have multiple topology files selectable for the same testbed? I do not think that will work, at least not easily enough. Currently, when a reservation succeeds, unique topology file is selected. And jenkins jobs have different names based on testbed type. Are you suggesting to have separate \"no TG\" and \"yes TG\" jobs?\nNote that reservation flag is selected on TG, so even \"no TG\" jobs will need to know which TG to flag (so no other \"yes TG\" job thinks the testbed is free).",
      "parentUuid": "1968f299_6d133892",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 77
      },
      "revId": "be27767d0d0b4e3ee6931ae4892b3dbda24ed328",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16347cdd_dfc06f8d",
        "filename": "tests/vpp/perf/hoststack/10ge2p1x710-eth-ip4tcpbase-ldpreload-iperf3-bps.robot",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-04-28T17:40:22Z",
      "side": 1,
      "message": "No different jobs. And yes that is why reservation was always DUT, when we put IXIA One TG there will be no more TG reservation as it is HW tester. So yes moving reservation to TG was never the plan from design point of view. Once we include IXIA PSOne TG we will move reservation back to DUT and finally find root cause why it was breaking perf.",
      "parentUuid": "dc2de8b8_03e5fe90",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 77
      },
      "revId": "be27767d0d0b4e3ee6931ae4892b3dbda24ed328",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e278d1c6_58515658",
        "filename": "tests/vpp/perf/hoststack/10ge2p1x710-eth-ip4tcpbase-ldpreload-iperf3-bps.robot",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-29T12:00:19Z",
      "side": 1,
      "message": "\u003e No different jobs.\n\nSo a single job. Will it allow a trigger that selects both \"yes TG\" and \"no TG\" tests? If not, how?\nI guess this patch shows how \"yes TG\" and \"no TG\" tests can be triggered in the same job.\nI am still not sure how do you plan to define multiple topologies for the same testbed. Or is it just a single topology file (without TG) and our setup keywords will add the missing details? If yes, based on what?\n\n\u003e that is why reservation was always DUT\n\nOk. We have moved the reservation out of DUT because apparently SSH access was messing with VPP workers. Maybe after latest irqbalance fixes it no longer does?\nBut with \"no different jobs\" it should not matter where do the jobs check the reservation.",
      "parentUuid": "16347cdd_dfc06f8d",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 77
      },
      "revId": "be27767d0d0b4e3ee6931ae4892b3dbda24ed328",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a96145c_a00e745e",
        "filename": "tests/vpp/perf/hoststack/10ge2p1x710-eth-ip4tcpbase-ldpreload-iperf3-bps.robot",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 10
      },
      "writtenOn": "2020-04-29T13:24:22Z",
      "side": 1,
      "message": "\u003e No. If a (variable table of a) suite does not specify some value, \n\u003e the value from a (variable table of a) library is applied. Hence \n\u003e only the suites wanting to override the defaults need to add the\n\u003e variables.\n\nOk, then do you agree that it would be good to refactor the existing libraries/suites to reduce the number of variables replicated across the test suites which are all set to the same value?  I think this would be a good thing to put on the \u0027housekeeping\u0027 list.\n\nWill fix this patch accordingly.",
      "parentUuid": "e278d1c6_58515658",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 77
      },
      "revId": "be27767d0d0b4e3ee6931ae4892b3dbda24ed328",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "765c6bc8_bb038311",
        "filename": "tests/vpp/perf/hoststack/10ge2p1x710-eth-ip4tcpbase-ldpreload-iperf3-bps.robot",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-29T17:01:38Z",
      "side": 1,
      "message": "\u003e Ok, then do you agree that it would be good to refactor the existing libraries/suites to reduce the number of variables replicated across the test suites which are all set to the same value?\n\nYes, for cases where we have (or can easily decide) a good default value. Also, some values are edited by autogen, so they better remain explicitly present even if already set to a reasonable (default) value.\n\n\u003e they better\n\nI mean autogen can possibly handle adding (instead of editing), but it is easier for us to tell people (who want to tweak some suite without employing autogen) to edit a value than to add a whole line.",
      "parentUuid": "7a96145c_a00e745e",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 77
      },
      "revId": "be27767d0d0b4e3ee6931ae4892b3dbda24ed328",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1677b11e_d8c41757",
        "filename": "tests/vpp/perf/hoststack/10ge2p1x710-eth-ip4tcpbase-ldpreload-iperf3-bps.robot",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-04-29T17:14:12Z",
      "side": 1,
      "message": "In past we used for variables that are global __init__.robot which applies on suite level. This is candidate. Although hard to find but still better then pollute \"topo_has_tg\" to every file. see main __init__.robot files. Suite gen currently only changes values that require permutations in volume. E.g nic/driver/pkt_size. As \"topo_has_tg\" does not require alternations rather it is feature of suite (settings) that is why i said that carboncopy of \"Setup suite variables with no tg\" is also an option and it is much cleanuer. it is safe to move to globals for some suite to __init__.robot. Same for always_same_link.\n\nQuickie:\n1) create Set suite Variables without TG, kw calling Set Suite Variable with special params true,true\n\nmake it a call here. better then polute variables at all. Thanks ;)",
      "parentUuid": "765c6bc8_bb038311",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 77
      },
      "revId": "be27767d0d0b4e3ee6931ae4892b3dbda24ed328",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b10682f1_7f1c59df",
        "filename": "tests/vpp/perf/hoststack/10ge2p1x710-eth-ip4tcpbase-ldpreload-iperf3-bps.robot",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-29T17:36:43Z",
      "side": 1,
      "message": "Oh, I forgot about __init__.robot; yes, that is better than specifying the same value in all suite files within a directory.\n\nBy the way, what is the motivation for the \"use Setup Suite Topology Interfaces\" requirement?\n\nBecause one solution would be to add optional arguments to Setup Suite Topology Interfaces keyword (default values for \"yes TG\"), and turn Setup Suite Topology Interfaces No TG keyword to be just a wrapper to call Setup Suite Topology Interfaces keyword with \"no TG\" values. That way you need no edits in current suites, and setup keywords remain maintainable.\n\nBut calling such Setup Suite Topology Interfaces keyword directly from suites (with \"no TG\" argument values specified in \"no TG\" suites; \"yes TG\" suites calling without arguments as before) is also good, at least if the values are short and descriptive (e.g. \"no_tg\u003d${True}\" if that also implies same link).",
      "parentUuid": "1677b11e_d8c41757",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 77
      },
      "revId": "be27767d0d0b4e3ee6931ae4892b3dbda24ed328",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a87e9ad_713174a4",
        "filename": "tests/vpp/perf/hoststack/10ge2p1x710-eth-ip4tcpbase-ldpreload-iperf3-bps.robot",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-04-30T07:39:05Z",
      "side": 1,
      "message": "That is what I wrote above.",
      "parentUuid": "b10682f1_7f1c59df",
      "range": {
        "startLine": 25,
        "startChar": 52,
        "endLine": 25,
        "endChar": 77
      },
      "revId": "be27767d0d0b4e3ee6931ae4892b3dbda24ed328",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}