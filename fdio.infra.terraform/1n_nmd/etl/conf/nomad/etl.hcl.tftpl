job "${job_name}" {
  # The "region" parameter specifies the region in which to execute the job.
  # If omitted, this inherits the default region name of "global".
  # region    = "${region}"

  # The "datacenters" parameter specifies the list of datacenters which should
  # be considered when placing this task. This must be provided.
  datacenters = "${datacenters}"

  # The "type" parameter controls the type of job, which impacts the scheduler's
  # decision on placement. For a full list of job types and their differences,
  # please see the online documentation.
  #
  #     https://www.nomadproject.io/docs/jobspec/schedulers
  #
  type        = "${type}"

  # The periodic stanza allows a job to run at fixed times, dates, or intervals.
  # The easiest way to think about the periodic scheduler is "Nomad cron" or
  # "distributed cron".
  #
  #     https://www.nomadproject.io/docs/job-specification/periodic
  #
  periodic {
    cron             = "${cron}"
    prohibit_overlap = "${prohibit_overlap}"
    time_zone        = "${time_zone}"
  }

  update {
    # The "max_parallel" parameter specifies the maximum number of updates to
    # perform in parallel.
    max_parallel = "${max_parallel}"

    # Specifies the delay between each set of max_parallel updates when updating
    # system jobs.
    stagger      = "${stagger}"
  }

  # The "group" stanza defines a series of tasks that should be co-located on
  # the same Nomad client. Any task within a group will be placed on the same
  # client.
  #
  #     https://www.nomadproject.io/docs/job-specification/group
  #
  group "${job_name}-group-1" {
    # The restart stanza configures a tasks's behavior on task failure. Restarts
    # happen on the client that is running the task.
    #
    # https://www.nomadproject.io/docs/job-specification/restart
    #
    restart {
      interval = "30m"
      attempts = 5
      delay    = "15s"
      mode     = "delay"
    }

    # The "task" stanza creates an individual unit of work, such as a Docker
    # container, web application, or batch processing.
    #
    #     https://www.nomadproject.io/docs/job-specification/task.html
    #
    task "${job_name}-task-1" {
      # The "driver" parameter specifies the task driver that should be used to
      # run the task.
      driver = "docker"

      # The "config" stanza specifies the driver configuration, which is passed
      # directly to the driver to start the task. The details of configurations
      # are specific to each driver, so please see specific driver
      # documentation for more information.
      config {
        image   = "${image}"
        command = "gluesparksubmit local/job_stats_s3.py"
      }

      # The env stanza configures a list of environment variables to populate
      # the task's environment before starting.
      env {
%{ if use_vault_provider }
  {{ with secret "${vault_kv_path}" }}
        AWS_ACCESS_KEY_ID     = "{{ .Data.data.${vault_kv_field_access_key} }}"
        AWS_SECRET_ACCESS_KEY = "{{ .Data.data.${vault_kv_field_secret_key} }}"
  {{ end }}
%{ else }
        AWS_ACCESS_KEY_ID     = "${access_key}"
        AWS_SECRET_ACCESS_KEY = "${secret_key}"
%{ endif }
        ${ envs }
      }

      # The "resources" stanza describes the requirements a task needs to
      # execute. Resource requirements include memory, network, cpu, and more.
      # This ensures the task will execute on a machine that contains enough
      # resource capacity.
      #
      #     https://www.nomadproject.io/docs/job-specification/resources
      #
      resources {
        cpu    = ${cpu}
        memory = ${memory}
      }
    }
  }
}
