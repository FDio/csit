{
  "comments": [
    {
      "key": {
        "uuid": "69c154f3_781843da",
        "filename": "tests/dpdk/dpdk_scripts/cleanup_dpdk.sh",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-20T12:30:47Z",
      "side": 1,
      "message": "The usual practice is to \"set +x\" just before the noisy part starts, and \"set -x\" just after it ends.",
      "range": {
        "startLine": 69,
        "startChar": 23,
        "endLine": 69,
        "endChar": 28
      },
      "revId": "d5182f1202ee7df252dcd5ec5e77b93c90cd3e5e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccafe9ff_99fb0c45",
        "filename": "tests/dpdk/dpdk_scripts/cleanup_dpdk.sh",
        "patchSetId": 8
      },
      "lineNbr": 71,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-20T12:30:47Z",
      "side": 1,
      "message": "This is usually recommended for \"teardown\" functions where we want to attempt executing all the code no matter what.\n\nUpdate line 69, as when I hear \"custom error handling\" I imagine small blocks with \"set +e\" before and \"set -e\" after, checking $? after each.\nI see no good reason for \"set +u\" unless you are sourcing a third part script (e.g. virtualenv activate).",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 71,
        "endChar": 11
      },
      "revId": "d5182f1202ee7df252dcd5ec5e77b93c90cd3e5e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59cd5230_d4b5a514",
        "filename": "tests/dpdk/dpdk_scripts/cleanup_dpdk.sh",
        "patchSetId": 8
      },
      "lineNbr": 78,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-20T12:30:47Z",
      "side": 1,
      "message": "Which \"echo\"s should be \"warn\"s?",
      "range": {
        "startLine": 78,
        "startChar": 8,
        "endLine": 78,
        "endChar": 12
      },
      "revId": "d5182f1202ee7df252dcd5ec5e77b93c90cd3e5e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6a3a455_4fc95ab7",
        "filename": "tests/dpdk/dpdk_scripts/cleanup_dpdk.sh",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-20T12:30:47Z",
      "side": 1,
      "message": "Is this undoing lines 154-155 of install_dpdk.sh?\nAs this is called from suite teardown, I assumed it undoes changes only from init_dpdk.sh as that is called on suite setup.",
      "range": {
        "startLine": 128,
        "startChar": 9,
        "endLine": 128,
        "endChar": 11
      },
      "revId": "d5182f1202ee7df252dcd5ec5e77b93c90cd3e5e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8716ddb9_79ffc429",
        "filename": "tests/dpdk/dpdk_scripts/cleanup_dpdk.sh",
        "patchSetId": 8
      },
      "lineNbr": 132,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-20T12:30:47Z",
      "side": 1,
      "message": "Is this the same as dpdk_bind in init_dpdk.sh?\nI expected something like dpdk_unbind here, based on DPDKTools.py line 59.",
      "range": {
        "startLine": 132,
        "startChar": 9,
        "endLine": 132,
        "endChar": 18
      },
      "revId": "d5182f1202ee7df252dcd5ec5e77b93c90cd3e5e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffe34333_a0b6e64d",
        "filename": "tests/dpdk/dpdk_scripts/cleanup_dpdk.sh",
        "patchSetId": 8
      },
      "lineNbr": 140,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-20T12:30:47Z",
      "side": 1,
      "message": "set -exuo pipefail\n\nOr some other flag combination if needed.",
      "range": {
        "startLine": 140,
        "startChar": 38,
        "endLine": 140,
        "endChar": 39
      },
      "revId": "d5182f1202ee7df252dcd5ec5e77b93c90cd3e5e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6c2eb43_cfea63a4",
        "filename": "tests/dpdk/dpdk_scripts/install_dpdk.sh",
        "patchSetId": 8
      },
      "lineNbr": 116,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-20T12:30:47Z",
      "side": 1,
      "message": "|| die?",
      "range": {
        "startLine": 116,
        "startChar": 56,
        "endLine": 116,
        "endChar": 57
      },
      "revId": "d5182f1202ee7df252dcd5ec5e77b93c90cd3e5e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5485c049_3212b555",
        "filename": "tests/dpdk/dpdk_scripts/install_dpdk.sh",
        "patchSetId": 8
      },
      "lineNbr": 152,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-04-20T12:30:47Z",
      "side": 1,
      "message": "1?",
      "range": {
        "startLine": 152,
        "startChar": 40,
        "endLine": 152,
        "endChar": 41
      },
      "revId": "d5182f1202ee7df252dcd5ec5e77b93c90cd3e5e",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}