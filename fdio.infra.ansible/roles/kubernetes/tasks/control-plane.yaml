---
# file: tasks/control-plane.yaml

#- name: deploy the config-file for kubeadm and kubelet
#  template:
#    src: kubeadm-kubelet-config.j2
#    dest: "{{ kubernetes_kubeadm_kubelet_config_file_path }}"
#  tags:
#    - kubernetes-inst-control-plane

- name: disable swap
  ansible.posix.mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  loop: ["none", "swap"]
  tags:
    - kubernetes-inst-control-plane

- name: disable swap
  ansible.builtin.shell: |
    swapoff -a
  tags:
    - kubernetes-inst-control-plane

- name: restart containerd
  ansible.builtin.service:
    name: "containerd"
    state: "restarted"
  tags:
    - kubernetes-inst-control-plane

- name: initialize kubernetes control plane with kubeadm init
  ansible.builtin.command: "kubeadm init {{ kubernetes_kubeadm_init_extra_opts }}"
  register: kubeadmin_init
  when: (not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is not defined)
  tags:
    - kubernetes-inst-control-plane

- name: initialize kubernetes control plane with kubeadm init and ignore_preflight_errors
  ansible.builtin.command: "kubeadm init --ignore-preflight-errors={{ kubernetes_ignore_preflight_errors }} {{ kubernetes_kubeadm_init_extra_opts }}"
  register: kubeadmin_init
  when: (not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is defined)
  tags:
    - kubernetes-inst-control-plane

- name: print the init output to screen
  ansible.builtin.debug:
    var: kubeadmin_init.stdout
    verbosity: 2
  when: not kubernetes_init_stat.stat.exists
  tags:
    - kubernetes-inst-control-plane

- name: ensure .kube directory exists
  become: false
  ansible.builtin.file:
    path: /home/testuser/.kube
    state: directory
    mode: 0755
  tags:
    - kubernetes-inst-control-plane

- name: copy the kubectl admin.conf to ~/.kube/conf
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/testuser/.kube/config
    remote_src: yes
  tags:
    - kubernetes-inst-control-plane

- name: give user permissions to an existing file
  ansible.builtin.file:
    path: /home/testuser/.kube/
    owner: testuser
    group: testuser
    recurse: yes
  tags:
    - kubernetes-inst-control-plane

- name: allow pods on control plane (if configured)
  ansible.builtin.command: "kubectl taint nodes --all node-role.kubernetes.io/control-plane-"
  become: false
  when:
    - kubernetes_allow_pods_on_control_plane | bool
    - not kubernetes_init_stat.stat.exists
  tags:
    - kubernetes-inst-control-plane