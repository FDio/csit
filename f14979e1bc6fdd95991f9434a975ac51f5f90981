{
  "comments": [
    {
      "key": {
        "uuid": "d051242e_cd74bfcf",
        "filename": "resources/libraries/python/InterfaceUtil.py",
        "patchSetId": 3
      },
      "lineNbr": 1099,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-12-15T18:01:10Z",
      "side": 1,
      "message": "I thought this will either work or not once we bump VPP version. If some feature is not supported yet, we should not support it. And add it only when it is ready",
      "range": {
        "startLine": 1093,
        "startChar": 2,
        "endLine": 1099,
        "endChar": 75
      },
      "revId": "f14979e1bc6fdd95991f9434a975ac51f5f90981",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "753f1909_e2b61e94",
        "filename": "resources/libraries/python/InterfaceUtil.py",
        "patchSetId": 3
      },
      "lineNbr": 1099,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-12-15T18:32:32Z",
      "side": 1,
      "message": "This is my request, as keeping backward compatibility helps with bisection. I ask for it if it is cheap as in NAT [0], but not ask for it if it is expensive as in ipsec [1].\nHere it is cheap enough.\n\n[0] https://gerrit.fd.io/r/c/csit/+/30152\n[1] https://gerrit.fd.io/r/c/csit/+/30260",
      "parentUuid": "d051242e_cd74bfcf",
      "range": {
        "startLine": 1093,
        "startChar": 2,
        "endLine": 1099,
        "endChar": 75
      },
      "revId": "f14979e1bc6fdd95991f9434a975ac51f5f90981",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "012a1eb9_096bf097",
        "filename": "resources/libraries/python/InterfaceUtil.py",
        "patchSetId": 3
      },
      "lineNbr": 1099,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-12-15T19:01:16Z",
      "side": 1,
      "message": "This should be properly tracked and maintained. To prevent abuse and forking code too much making it complicated to support.\nI suggest to maintain it on some file level and drop that as soon as not needed like max(release-1)",
      "parentUuid": "753f1909_e2b61e94",
      "range": {
        "startLine": 1093,
        "startChar": 2,
        "endLine": 1099,
        "endChar": 75
      },
      "revId": "f14979e1bc6fdd95991f9434a975ac51f5f90981",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d5ac5a5_da7b6486",
        "filename": "resources/libraries/python/InterfaceUtil.py",
        "patchSetId": 3
      },
      "lineNbr": 1099,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-12-16T16:24:20Z",
      "side": 1,
      "message": "One idea: Have a non-voting tox checker, that greps for \"old_cmd\", uses git blame to find commit that added it, extract date of that commit, and add a line to a log file if the commit is older than (say) 6 months.\n\nI do not think we can keep verifying the old command, mainly because we do not keep the old versions for all API changes and we do not want to maintain a separate test selection to run with released VPP.",
      "parentUuid": "012a1eb9_096bf097",
      "range": {
        "startLine": 1093,
        "startChar": 2,
        "endLine": 1099,
        "endChar": 75
      },
      "revId": "f14979e1bc6fdd95991f9434a975ac51f5f90981",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "692a0205_8df1d1aa",
        "filename": "resources/libraries/python/InterfaceUtil.py",
        "patchSetId": 3
      },
      "lineNbr": 1099,
      "author": {
        "id": 76
      },
      "writtenOn": "2020-12-16T19:44:25Z",
      "side": 1,
      "message": "No tox, that is \"nobody reading\", I want to see a process of removal these crapy lines from repo. Running older version is easy with previous operbranch. No excuse",
      "parentUuid": "2d5ac5a5_da7b6486",
      "range": {
        "startLine": 1093,
        "startChar": 2,
        "endLine": 1099,
        "endChar": 75
      },
      "revId": "f14979e1bc6fdd95991f9434a975ac51f5f90981",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e027724_4497711a",
        "filename": "resources/libraries/python/InterfaceUtil.py",
        "patchSetId": 3
      },
      "lineNbr": 1099,
      "author": {
        "id": 207
      },
      "writtenOn": "2020-12-17T14:06:29Z",
      "side": 1,
      "message": "I found that new bond_create2 was introduced by patch [0], corresponding vpp build is 20.09-rc0~368-g42845dd56 - that means it is available in whole release 21.01 cycle so no workaround for the old api is needed - going to remove the workaroung.\n\n\n[0] https://gerrit.fd.io/r/c/vpp/+/28112",
      "parentUuid": "692a0205_8df1d1aa",
      "range": {
        "startLine": 1093,
        "startChar": 2,
        "endLine": 1099,
        "endChar": 75
      },
      "revId": "f14979e1bc6fdd95991f9434a975ac51f5f90981",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}