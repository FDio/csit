{
  "comments": [
    {
      "key": {
        "uuid": "92fadc71_bc0d4286",
        "filename": "resources/libraries/python/InterfaceUtil.py",
        "patchSetId": 10
      },
      "lineNbr": 184,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-08-16T15:26:29Z",
      "side": 1,
      "message": "Does this mean we want link down state? Or is link state ignored when setting, only used for getting?",
      "range": {
        "startLine": 184,
        "startChar": 64,
        "endLine": 184,
        "endChar": 72
      },
      "revId": "71be76c5d3fc1153f276bea185c8bf0d177c921a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb054a5d_f823773d",
        "filename": "resources/libraries/python/InterfaceUtil.py",
        "patchSetId": 10
      },
      "lineNbr": 186,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-08-16T07:41:20Z",
      "side": 1,
      "message": "Why was this not modeled in Enum, I think we should ping Jakub to do so.",
      "range": {
        "startLine": 186,
        "startChar": 24,
        "endLine": 186,
        "endChar": 25
      },
      "revId": "71be76c5d3fc1153f276bea185c8bf0d177c921a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c76a556c_5b8332f7",
        "filename": "resources/libraries/python/InterfaceUtil.py",
        "patchSetId": 10
      },
      "lineNbr": 186,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-08-16T15:26:29Z",
      "side": 1,
      "message": "I believe it is a common approach for \"flags\", as in 1-bit independent attributes.\nLook at SubInterfaceFlags, you do not want to have a line for all 512 combinations.\nThe zero here is in fact a \"bitwise or of empty set of flags\".\nNo easy way to write that in Python, unless we want to create out own function for bitwise or with variable number of arguments.",
      "parentUuid": "bb054a5d_f823773d",
      "range": {
        "startLine": 186,
        "startChar": 24,
        "endLine": 186,
        "endChar": 25
      },
      "revId": "71be76c5d3fc1153f276bea185c8bf0d177c921a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "274ae4eb_53609bde",
        "filename": "resources/libraries/python/InterfaceUtil.py",
        "patchSetId": 10
      },
      "lineNbr": 317,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-08-16T15:26:29Z",
      "side": 1,
      "message": "Would be more readable with the enum name, but would also be too long.",
      "range": {
        "startLine": 317,
        "startChar": 45,
        "endLine": 317,
        "endChar": 46
      },
      "revId": "71be76c5d3fc1153f276bea185c8bf0d177c921a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c78d5fe1_8c656d74",
        "filename": "tests/vpp/perf/ip4/10ge2p1x710-ethip4udp-ip4base-iacl10sf-100flows-ndrpdr.robot",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-08-16T07:29:10Z",
      "side": 1,
      "message": "Put into the default.robot",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 1
      },
      "revId": "71be76c5d3fc1153f276bea185c8bf0d177c921a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "662ad33d_9cab018a",
        "filename": "tests/vpp/perf/ip4/10ge2p1x710-ethip4udp-ip4base-iacl10sf-100flows-ndrpdr.robot",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 207
      },
      "writtenOn": "2019-08-16T07:35:51Z",
      "side": 1,
      "message": "Well, that\u0027s not good approach to import all side resource files via default resource file to all test suites... default.robot should contain only staff needed in every (or at least in most of) csit test suites. Why should we import acl related resources to e.g. base ip4 test?\nRF is scalable so let\u0027s use it.",
      "parentUuid": "c78d5fe1_8c656d74",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 1
      },
      "revId": "71be76c5d3fc1153f276bea185c8bf0d177c921a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36382a0a_722662ee",
        "filename": "tests/vpp/perf/ip4/10ge2p1x710-ethip4udp-ip4base-iacl10sf-100flows-ndrpdr.robot",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 76
      },
      "writtenOn": "2019-08-16T08:01:26Z",
      "side": 1,
      "message": "I was trying to build some map of dependencies and currently it is very bad. Libraries of python/robot are huge (see previously what was in performance_setup.robot) and mixed. So for example acl.robot is depending on interfaces.robot and ipv4.robot.\nThis results into state when is hard to move KW as the dependency chain is cyclic. Not sure without proper refactor how to approach. We should first do more strict KWs and from acl.robot run only acl L1 KW. Then it might work. Cause ACL i found in other non-ACL libraries. It is mess :)\n\nMaybe my intuition is wrong but having only default.robot in tests will help us in refactor of L2 KWs??",
      "parentUuid": "662ad33d_9cab018a",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 1
      },
      "revId": "71be76c5d3fc1153f276bea185c8bf0d177c921a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6b09740_5f07e063",
        "filename": "tests/vpp/perf/ip4/10ge2p1x710-ethip4udp-ip4base-iacl10sf-100flows-ndrpdr.robot",
        "patchSetId": 10
      },
      "lineNbr": 16,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-08-16T15:26:29Z",
      "side": 1,
      "message": "\u003e having only default.robot\n\nHaving only one import in suites definitely simplifies their maintenance, assuming Robot is still fast and not memory constrained.\nBut at that point, perhaps resources/libraries/robot/shared/default.robot is not the best name. What about resources/libraries/robot/all.robot?",
      "parentUuid": "36382a0a_722662ee",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 1
      },
      "revId": "71be76c5d3fc1153f276bea185c8bf0d177c921a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}