{
  "comments": [
    {
      "key": {
        "uuid": "7f09eb9c_28ac843b",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-03-07T13:58:39Z",
      "side": 1,
      "message": "I do not like this. Can we name this function \"verify_replies\" and create a simple wrapper called \"verify_single_reply\"?",
      "range": {
        "startLine": 275,
        "startChar": 52,
        "endLine": 275,
        "endChar": 65
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8989cde6_d4546c2e",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 180
      },
      "writtenOn": "2019-03-07T14:24:20Z",
      "side": 1,
      "message": "good idea",
      "parentUuid": "7f09eb9c_28ac843b",
      "range": {
        "startLine": 275,
        "startChar": 52,
        "endLine": 275,
        "endChar": 65
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26e40b10_c86cb71e",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-03-07T13:58:39Z",
      "side": 1,
      "message": "Define a class (such as PapiReplyDataItem), rtype will be \"list of PapiReplyDataItem\".\n\nUse PapiReplyDataItem to define PapiReplyItem, and document line 40 as \"list of PapiReplyItem\".\n\nI recommend for both class to have a constructor accepting all the fileds as arguments. That way we can use constructor docstring to nicely document what the fields are, and also create a nice __repr__.",
      "range": {
        "startLine": 282,
        "startChar": 14,
        "endLine": 282,
        "endChar": 19
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "154f8d1b_c92c2900",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 180
      },
      "writtenOn": "2019-03-07T14:24:20Z",
      "side": 1,
      "message": "I agree",
      "parentUuid": "26e40b10_c86cb71e",
      "range": {
        "startLine": 282,
        "startChar": 14,
        "endLine": 282,
        "endChar": 19
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1376d4d1_4ae6d6b8",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 207
      },
      "writtenOn": "2019-03-08T08:07:16Z",
      "side": 1,
      "message": "Why do we need to return any other data? We need to just verify that all papi commands in the session were executed successfuly, i.e. that retval for every executed api command is equal to 0 - if not, raise an exception with info which command has failed (resp[\u0027api_name\u0027]).\n\nWe already have papi reply data in reply attribute of papi_reponse and all other processing of this reply should be done in corresponding L1 KW.",
      "parentUuid": "154f8d1b_c92c2900",
      "range": {
        "startLine": 282,
        "startChar": 14,
        "endLine": 282,
        "endChar": 19
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53d8f729_1e18d361",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 180
      },
      "writtenOn": "2019-03-08T08:22:34Z",
      "side": 1,
      "message": "The idea is to provide verified data in simpler structure.\nThe executor will return verified data or raise an exception if verification fails.",
      "parentUuid": "1376d4d1_4ae6d6b8",
      "range": {
        "startLine": 282,
        "startChar": 14,
        "endLine": 282,
        "endChar": 19
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf7747fe_c3e4d6bf",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 207
      },
      "writtenOn": "2019-03-08T08:34:40Z",
      "side": 1,
      "message": "But in case of dump command there is no retval it the reply:\n\u003e\u003e\u003e papi_fn \u003d getattr(vpp.api, \u0027sw_interface_dump\u0027)\n\u003e\u003e\u003e rv \u003d papi_fn()\n\u003e\u003e\u003e print rv\n[\nsw_interface_details(_0\u003d86, context\u003d2, sw_if_index\u003d0, sup_sw_if_index\u003d0, l2_address_length\u003d0, l2_address\u003d\u0027\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\u0027, interface_name\u003d\u0027local0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\u0027, admin_up_down\u003d0, link_up_down\u003d0, link_duplex\u003d0, link_speed\u003d0, link_mtu\u003d0, mtu\u003d[0, 0, 0, 0], sub_id\u003d0, sub_dot1ad\u003d0, sub_dot1ah\u003d0, sub_number_of_tags\u003d0, sub_outer_vlan_id\u003d0, sub_inner_vlan_id\u003d0, sub_exact_match\u003d0, sub_default\u003d0, sub_outer_vlan_id_any\u003d0, sub_inner_vlan_id_any\u003d0, vtr_op\u003d0, vtr_push_dot1q\u003d0, vtr_tag1\u003d0, vtr_tag2\u003d0, tag\u003d\u0027\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\u0027, outer_tag\u003d0, b_dmac\u003d\u0027\\x00\\x00\\x00\\x00\\x00\\x00\u0027, b_smac\u003d\u0027\\x00\\x00\\x00\\x00\\x00\\x00\u0027, b_vlanid\u003d0, i_sid\u003d0),...\n\nso we will not call the verify_reply method...",
      "parentUuid": "53d8f729_1e18d361",
      "range": {
        "startLine": 282,
        "startChar": 14,
        "endLine": 282,
        "endChar": 19
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00b7ab2e_a6228d42",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-03-11T09:49:36Z",
      "side": 1,
      "message": "If I recall correctly, *_dump commands can produce unknown number of *_details responses (which do not contain retval), so the recommended usage is to follow any *_dump with a dummy command (which returns *_reply with retval), so that when the client sees the dummy reply, it knows it has seen all the *_details.\nIt is in VPP documentation somewhere, together with the dummy command to use.\n\nIn long term we can add support to automatically insert the dummy command and put all the *_details together for easier parsing.\n\nIn short term, verify_reply could return nothing, and check retval of the _last_ command.",
      "parentUuid": "bf7747fe_c3e4d6bf",
      "range": {
        "startLine": 282,
        "startChar": 14,
        "endLine": 282,
        "endChar": 19
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be8a8ffc_2c41e0b2",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 180
      },
      "writtenOn": "2019-03-11T11:50:04Z",
      "side": 1,
      "message": "Link to doc: https://wiki.fd.io/view/VPP/Python_API#Python_binding_for_the_VPP_API",
      "parentUuid": "00b7ab2e_a6228d42",
      "range": {
        "startLine": 282,
        "startChar": 14,
        "endLine": 282,
        "endChar": 19
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b723442_aa798dd8",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-03-07T13:58:39Z",
      "side": 1,
      "message": "Do you have a usage example for this? I do not like this tuple much.",
      "range": {
        "startLine": 290,
        "startChar": 30,
        "endLine": 290,
        "endChar": 47
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53e47422_370358b5",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 180
      },
      "writtenOn": "2019-03-07T14:24:20Z",
      "side": 1,
      "message": "The structure of returned data will be defined in classes you mentioned above.\nJan, can you comment/suggest the structure of data?",
      "parentUuid": "8b723442_aa798dd8",
      "range": {
        "startLine": 290,
        "startChar": 30,
        "endLine": 290,
        "endChar": 47
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9c6bf2e_ff1a4aec",
        "filename": "resources/libraries/python/PapiExecutor.py",
        "patchSetId": 1
      },
      "lineNbr": 290,
      "author": {
        "id": 207
      },
      "writtenOn": "2019-03-08T08:07:16Z",
      "side": 1,
      "message": "See my comment to line 282.",
      "parentUuid": "53e47422_370358b5",
      "range": {
        "startLine": 290,
        "startChar": 30,
        "endLine": 290,
        "endChar": 47
      },
      "revId": "5ca93a006b6e239aa294a96e8e4b6fe02b573962",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}