{
  "comments": [
    {
      "key": {
        "uuid": "baaa99c8_978f6ac4",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 78
      },
      "writtenOn": "2019-04-08T13:39:14Z",
      "side": 1,
      "message": "I think it would be good to mention NFVbench here as it is the first solution that addresses this problem space with a working open source implementation.\nMLR search is orthogonal to this problem (can use any algorithm).",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78d77138_f2c3b200",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-06-10T11:31:55Z",
      "side": 1,
      "message": "Added. Need to provide the right links and info.",
      "parentUuid": "baaa99c8_978f6ac4",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06135667_407ddeec",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-07-08T18:47:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78d77138_f2c3b200",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a05ece20_7a84b794",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 78
      },
      "writtenOn": "2019-04-08T13:39:14Z",
      "side": 1,
      "message": "It would be worth adding that capacity planning (as to how many VNF can run per compute) is an important element of decision for commercial viability of a NFVi platform and results from traditional dataplane benchmarks do a very bad job at it because they are single dimensional.",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d8aa9e7_bb00230a",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-06-10T11:31:55Z",
      "side": 1,
      "message": "OK. Updated paragraph.",
      "parentUuid": "a05ece20_7a84b794",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1e27a98_45ead006",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-07-08T18:47:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d8aa9e7_bb00230a",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4933edf6_cc6cc27b",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 78
      },
      "writtenOn": "2019-04-08T13:39:14Z",
      "side": 1,
      "message": "Although it may look obvious, it is best to say explicitly that density chaining means we run multiple of these chains in parallel.\n\nAlso good to add that \n- almost all current deployments use the simpler NxPVP model.\n- the number of NFs in a single chain is not large in practice and are generally not as efficient as when these NFs are implemented in the same VM/container. de",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b778801b_d6bc70a1",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-06-10T11:31:55Z",
      "side": 1,
      "message": "OK. Added explicit note about multiple chains, updated diagrams.\nRe number of NFs per service, it\u0027s down to specific use case, the draft should not be prescriptive.",
      "parentUuid": "4933edf6_cc6cc27b",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79e544f6_ee194701",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-07-08T18:47:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b778801b_d6bc70a1",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bd69494_9b62715a",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 78
      },
      "writtenOn": "2019-04-08T13:39:14Z",
      "side": 1,
      "message": "former \u003d L2?\nplease make it more clear.",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd5cf97e_8eff0721",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-06-10T11:31:55Z",
      "side": 1,
      "message": "OK. It actually refers to both L2 and IP. Updated paragraph.",
      "parentUuid": "7bd69494_9b62715a",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84034b1f_dcfc11fb",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-07-08T18:47:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd5cf97e_8eff0721",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df46bb2f_949bae00",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 78
      },
      "writtenOn": "2019-04-08T13:39:14Z",
      "side": 1,
      "message": "L3 routing is generally done out of the compute node or inside the NF",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f39972c_a7f6132a",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-06-10T11:31:55Z",
      "side": 1,
      "message": "IP routing in host data plane is also out there e.g. Calico. This draft aims at covering both, L2 and IP routing.",
      "parentUuid": "df46bb2f_949bae00",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f730be9_30d7901e",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-07-08T18:47:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f39972c_a7f6132a",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "510349dc_2fb34bc7",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 78
      },
      "writtenOn": "2019-04-08T13:39:14Z",
      "side": 1,
      "message": "only the first kind is available today in production deployments. we should explain why.\nWe should also explain what makes the latter more difficult to operate.",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1f128b7_91cba970",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-06-10T11:31:55Z",
      "side": 1,
      "message": "Why do you say that pipeline would be more difficult to operate?\nExpectation is that with cloud-native container based NFV infrastructure pipeline topology will be more efficient, and as such needs to be covered here.",
      "parentUuid": "510349dc_2fb34bc7",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54e14f08_93deee2c",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 78
      },
      "writtenOn": "2019-07-03T16:19:31Z",
      "side": 1,
      "message": "more difficult in terms of control plane.\nright now in csit you hardcode the placement of your NFs, this is not possible in a generic NFV cloud control plane as you need to use the tools/APIs available to place your NFs in the way you exactly want.\nThat is the main difference between a research experiment and productization.\nThink about it, in production you not only have 1 compute but you have many of them, how are you going to spread your chains? By packing each compute one by one? or by spreading them across all compute nodes?\nAlso this paper makes you think that all these combos are equally important. They are not. Today, nobody ever deploys any chain in high density with more than 2 NFs per chain. So the value of a 4-NF chain is clearly not that useful other than purely speculative (not to mention 10-NF chain).\nThe concurrent multi-chain dimension is a lot more interesting today (10 x single NF chains is a lot more interesting than 1x10-NF chain)\nThis might change with CNCF with lighter containers and more of them in a chain but this opens up a whole set of other control plane  issues that are not present in the current deployment VNFs (all in one VM).\nAlso it is not exactly fair to compare different technologies with same chain depth.\nVM based VNFs tend to pool all NFs in 1 VM, so depth is 1.\nContainer based VNFs aim to disaggregate into plenty of smaller containers so depth is \u003e\u003e1.\nA more fair comparison is to compare VM based VNF to container based VNF, so that would be more like comparing \n- VM based shallow chain\n- vs. container based deep chain\n E.g. 10 chains of 1 VM vs 10 chains or 10-deep containers\n\nWhat is the purpose of doing otherwise? That would be confusing message. It would be as if you want to compare the throughput of 1 hardware router vs, the throughput of 1 of the disaggregated piece of the router in isolation (say ACL), clearly wrong.\n\n\n\nI think it is important to put things in perspective and associate them to the reality of the field.",
      "parentUuid": "c1f128b7_91cba970",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed73003b_7a5c55a5",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 1263
      },
      "writtenOn": "2019-07-03T18:10:18Z",
      "side": 1,
      "message": "\u003e VNFs (all in one VM)\n\nIs it a fancy monolithic application which performs multiple functions at once using high-performance techniques (zero copy),\nor is it several smaller applications relying on Linux kernel (in VM) to move packets between them?\n\nFrom test point of view, I believe we can treat NFs as blackboxes, as long as we report throughput per NF (so deployments can filter by what is achievable or cost-efficient for then).\nOf course, in tests we need to pick well-defined \"blackboxes\" to detect possible \"noisy neighbor\" characteristics.",
      "parentUuid": "54e14f08_93deee2c",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68474203_0ad2f059",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 78
      },
      "writtenOn": "2019-07-03T19:23:34Z",
      "side": 1,
      "message": "it can be any design. The most efficient one will likely avoid passing packets between guest user space and guest kernel space.\nPeople have tried to come up with domain specific reference NFs but they all fall short because the memory footprint/signature of each commercial NF is unique.\nYou will not find 2 commercial VNFs that will use the LLC in a same way.\nAnd that pretty much limits the real relevance of any study of noisy neighbor using any form of test VNF.\nThe only relevant benchmark is to run it on the real thing:\nchains using real VNFs on the real platform on the real HW.\nAnything else is just estimation and approximation.\nThat is why nfvbench was designed to run on the final system.\n\nMy concern about this CNCF style of matrix is that 99.99% of readers will do a 1:1 comparison between the matrices: 1 x 1 VM vs 1 x 1 CNF, 1 x 10 VM vs 1 x 10 CNF etc... \nSuch comparison is inappropriate for the above reasons.\n\nI would say that any spec that leads to that kind of ill conceived comparison is dangerous and requires guard rails.\n\nPerhaps this spec needs to have an important \"How to (not) interpret results\" section.\n\"Can the results of such measurement predict that one technology is superior to another one?\"\nWhat does this spec and one technology buys to the folks who will deploy and actually have to make money out of dense deployments?\nFrom all practical purpose, I think this spec advances in one area, which is to formalize the dense deployment perf measurement, advertise why it is important and how the results can be used (which is IMHO good to do capacity planning: how many chains can I stuff in a compute).\n\nThe risk I can see is some people will want to use the raw results to say for ex that VM Is slow and CNF is 10x faster and hence I should drop VM technology.",
      "parentUuid": "ed73003b_7a5c55a5",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97f3156a_1d42a6e5",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-07-08T18:47:47Z",
      "side": 1,
      "message": "This spec is about benchmarking methodology of different NF service instance topologies and densities. It is treating each instantiation of NF (VM or container) as a black box with packet interfaces, and is focusing on evaluating e2e system performance paying attention to service topology (number of NFs, how they\u0027re interconnected), type of virtual interfaces, number of service instances (density) and allocation of the main shared resources processor cores. And of course, included sample results are not representative to every deployment, but rather are examples of applying this spec to lab tests.\n\nIf you have suggestions on how to avoid misinterpreting the results, pls share. I have added a separate (PLACEHOLDER) section to this effect: \n\n## Intrepreting the Sample Results\n\nTODO How to interpret and avoid misreading included results? And how to\navoid falling into the trap of using these results to draw generilized\nconclusions about performance of different virtualization technologies,\ne.g. VM and Containers, irrespective of deployment scenarios and what\nVNFs and CNFs are in the actual use.",
      "parentUuid": "68474203_0ad2f059",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cfdc0aac_67a1417b",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 525,
      "author": {
        "id": 78
      },
      "writtenOn": "2019-04-08T13:39:14Z",
      "side": 1,
      "message": "Using different load per chain will open up a new dimension of benchmarking that will be a lot more complex.\nI think we need outline here the limitations of using an equal load approach and explain why it is still sufficient to satisfy the overall goal of this service chain density spec.",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68739c45_904ed42f",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 525,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-06-10T11:31:55Z",
      "side": 1,
      "message": "OK. Updated paragraph.",
      "parentUuid": "cfdc0aac_67a1417b",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27a19ad7_bd417b0b",
        "filename": "docs/ietf/draft-mkonstan-nf-service-density-01.md",
        "patchSetId": 1
      },
      "lineNbr": 525,
      "author": {
        "id": 45
      },
      "writtenOn": "2019-07-08T18:47:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68739c45_904ed42f",
      "revId": "f2d1e0ececa0e29d934a5c49a5bb027b4f78d1a0",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}