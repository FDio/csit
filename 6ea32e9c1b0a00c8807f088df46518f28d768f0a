{
  "comments": [
    {
      "key": {
        "uuid": "9a0b303c_04af3033",
        "filename": "docs/vpp-device.rst",
        "patchSetId": 54
      },
      "lineNbr": 37,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-10-17T10:56:56Z",
      "side": 1,
      "message": "2-Container\n\nSo that questions like \"How many nodes are used?\" are still unambigous.",
      "range": {
        "startLine": 37,
        "startChar": 4,
        "endLine": 37,
        "endChar": 10
      },
      "revId": "6ea32e9c1b0a00c8807f088df46518f28d768f0a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f556e1d1_638bcc85",
        "filename": "docs/vpp-device.rst",
        "patchSetId": 54
      },
      "lineNbr": 37,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-10-17T11:44:54Z",
      "side": 1,
      "message": "Indeed confusing. Although it is all over the code and report but i will change.\n\nWhat about 2-node simulated topology?",
      "parentUuid": "9a0b303c_04af3033",
      "range": {
        "startLine": 37,
        "startChar": 4,
        "endLine": 37,
        "endChar": 10
      },
      "revId": "6ea32e9c1b0a00c8807f088df46518f28d768f0a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b69f1506_f683b106",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 54
      },
      "lineNbr": 24,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-10-17T10:56:56Z",
      "side": 1,
      "message": "In order to avoid bloating common.sh, the new functions could be placed into a separate device.sh library.\n\nThe device.sh file mentioned in lines 38 and 52 is not a library file, it is an entry script.",
      "range": {
        "startLine": 24,
        "startChar": 18,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "6ea32e9c1b0a00c8807f088df46518f28d768f0a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "223275da_a27ce423",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 54
      },
      "lineNbr": 24,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-10-17T11:44:54Z",
      "side": 1,
      "message": "Hm, partially right but there is bigger problem. This function (+deactive derivate) is wrapper for SHIM so if you want to run this beast against SSH remote machine (docker/vm/phy), you can as per line 51-52. If you want to run locally you can too in vbox just by sourcing device.sh.\n\nHowever the real issue is executing device.sh remotely via ssh and without obscure scp copy and then source and call functions.\n\nOne possible option to explore could be:\n\n $(${ssh} \u003c ${input} ${params[@]}; execute f1(); execute f2())\n\nBut it was not working for me. So this way device.sh acts as standalone \"reservation\" function broken to smaller sub-functions call separately. As of now i am not aware of any more optimized solution to invoke functions sourced remotely.",
      "parentUuid": "b69f1506_f683b106",
      "range": {
        "startLine": 24,
        "startChar": 18,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "6ea32e9c1b0a00c8807f088df46518f28d768f0a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7e973ff_680dc4a2",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 54
      },
      "lineNbr": 24,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-10-17T15:37:01Z",
      "side": 1,
      "message": "Remote sourcing aside, this function still can be placed in different library file.\n\nYou cannot \"call a function\" over SSH. You can only execute a script (or command). Thus docker.sh is entry script, not a library file.\nWhen sourcing, the difference is between executing some action, or just \"importing\" function definitions. Here (line 64), ${input} is an entry script still.\n\nIf you want to avoid copying, I think you can put functions into library file(s), create a \"fake entry\" file which assumes the functions are already defined, and concatenate the content of those files into one long string to execute.\nThat would only work if libraries do not contain any \"source\" on their own, which sounds like a good rule to follow anyway.\n\n$(${ssh} \u003c ${input} ${params[@]}; execute f1(); execute f2())\n\nThat lines executes f1 and f2 on local machine. You need to put the compound command into a string (unless I am mistaken about precedence of \u003c and ; operators).\n\nAlso, \"export -f\" might help, although I do not see a solution which would need that.",
      "parentUuid": "223275da_a27ce423",
      "range": {
        "startLine": 24,
        "startChar": 18,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "6ea32e9c1b0a00c8807f088df46518f28d768f0a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e3f25a6_5c17b828",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 54
      },
      "lineNbr": 24,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-10-18T09:04:06Z",
      "side": 1,
      "message": "\u003e You cannot \"call a function\" over SSH. You can only execute a\n \u003e script (or command). Thus docker.sh is entry script, not a library\n \u003e file.\n\nYou mean device.sh, but anyway you can call it. Technically SSH is just session and what ever you do in this single session is remains.\n\n \u003e When sourcing, the difference is between executing some action, or\n \u003e just \"importing\" function definitions. Here (line 64), ${input} is\n \u003e an entry script still.\n\nTrue, but do not forget that we are for example executing \"set -\" per each entry file which also breaks the rule.\n\n \u003e If you want to avoid copying, I think you can put functions into\n \u003e library file(s), create a \"fake entry\" file which assumes the\n \u003e functions are already defined, and concatenate the content of those\n \u003e files into one long string to execute.\n\nMaybe i will try to focus on both on input library + execute function separately. I think it should be doable.\n\n \u003e That would only work if libraries do not contain any \"source\" on\n \u003e their own, which sounds like a good rule to follow anyway.\n \nYes looks to be usable as one of the option. I will try to separate calling from library again. Hope i will find something.",
      "parentUuid": "b7e973ff_680dc4a2",
      "range": {
        "startLine": 24,
        "startChar": 18,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "6ea32e9c1b0a00c8807f088df46518f28d768f0a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "538d266e_7bf4d358",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 54
      },
      "lineNbr": 761,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-10-17T10:56:56Z",
      "side": 1,
      "message": "single",
      "range": {
        "startLine": 761,
        "startChar": 36,
        "endLine": 761,
        "endChar": 37
      },
      "revId": "6ea32e9c1b0a00c8807f088df46518f28d768f0a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3e63f8f_f771532a",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 54
      },
      "lineNbr": 767,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-10-17T10:56:56Z",
      "side": 1,
      "message": "single\n\nWe might need to introduce yet another variable (aside of NODENESS and FLAVOR) when we introduce multi-link 2-container topology.",
      "range": {
        "startLine": 767,
        "startChar": 36,
        "endLine": 767,
        "endChar": 37
      },
      "revId": "6ea32e9c1b0a00c8807f088df46518f28d768f0a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc0a6aef_3ded1698",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 54
      },
      "lineNbr": 767,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-10-17T11:44:54Z",
      "side": 1,
      "message": "How it will be named for double link?\nSimilarly to perf, technically this infra allows us to create N-link topologies just by parameter of how many interfaces pairs we will allocate to each docker. \n\nSo at the end, yes I will change it in this intital version but flavor and nodeness are derived from test_code which is job title, which i guess we won\u0027t need to change just for double links?\n\nLet\u0027s think about this till TWS. Currently I am more \"thinking loud\".",
      "parentUuid": "f3e63f8f_f771532a",
      "range": {
        "startLine": 767,
        "startChar": 36,
        "endLine": 767,
        "endChar": 37
      },
      "revId": "6ea32e9c1b0a00c8807f088df46518f28d768f0a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5eadbaa_65ac36c6",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 54
      },
      "lineNbr": 767,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-10-17T15:37:01Z",
      "side": 1,
      "message": "We can design that later.\nCurrently, vpp_device.template simply does not have enough links for double-link (circular) topology.",
      "parentUuid": "fc0a6aef_3ded1698",
      "range": {
        "startLine": 767,
        "startChar": 36,
        "endLine": 767,
        "endChar": 37
      },
      "revId": "6ea32e9c1b0a00c8807f088df46518f28d768f0a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f0796a4_7c82c6b3",
        "filename": "resources/libraries/bash/function/common.sh",
        "patchSetId": 54
      },
      "lineNbr": 767,
      "author": {
        "id": 76
      },
      "writtenOn": "2018-10-18T07:02:09Z",
      "side": 1,
      "message": "Fair.",
      "parentUuid": "a5eadbaa_65ac36c6",
      "range": {
        "startLine": 767,
        "startChar": 36,
        "endLine": 767,
        "endChar": 37
      },
      "revId": "6ea32e9c1b0a00c8807f088df46518f28d768f0a",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}