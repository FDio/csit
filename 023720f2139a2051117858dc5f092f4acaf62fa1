{
  "comments": [
    {
      "key": {
        "uuid": "7fdff575_738cdab0",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-10-09T11:07:54Z",
      "side": 1,
      "message": "When a definition is edited (now line 76), you should search\u0026replace every occurence.",
      "range": {
        "startLine": 108,
        "startChar": 34,
        "endLine": 108,
        "endChar": 52
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4292c57_0caec3e5",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 45
      },
      "writtenOn": "2020-10-09T13:49:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7fdff575_738cdab0",
      "range": {
        "startLine": 108,
        "startChar": 34,
        "endLine": 108,
        "endChar": 52
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc966572_1a06d466",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 120,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-10-09T11:07:54Z",
      "side": 1,
      "message": "CSIT code contains mix on names, mostly dictated by history. So \"multiplier\" is a name of a particular TRex parameter (in theory a traffic profile can set its own CPS value, but we no not do it so default 1 CPS is assumed). When passed to search keyword, this becomes \"rate\", \"target_tr\", \"transmit_rate\" or similar, depending on keyword/function used.\n\nI believe this spec should primarily use names from RFCs and drafts (so \"offered load\" in STL case, I do not remember what transaction-oriented RFCs use). And only use TRex-specific argument names in sub-sections discussing TRex specifics.\n\nThat applies mainly to input names, but maybe that should apply also to output names (counters).",
      "range": {
        "startLine": 120,
        "startChar": 5,
        "endLine": 120,
        "endChar": 15
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c92f6979_6bf220ce",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 120,
      "author": {
        "id": 45
      },
      "writtenOn": "2020-10-09T13:49:24Z",
      "side": 1,
      "message": "Updated text:\n\n- `multiplier`, represents `trial_cps_rate`, a number of connections per\n  second to be executed per trial. Multiplier applies to connect phases.\n  Close phases occur automatically based on arrival of the last packet\n  expected per session.",
      "parentUuid": "dc966572_1a06d466",
      "range": {
        "startLine": 120,
        "startChar": 5,
        "endLine": 120,
        "endChar": 15
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "882ad47a_2f66ccfa",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 155,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-10-09T11:07:54Z",
      "side": 1,
      "message": "Yes, although the traffic profile should have set large enough keepalive value so zero KA packets are actually sent within the trial.\nI did not actually check the value is large enough for the worst case (ndrpdr search hitting min multiplier of 9001).",
      "range": {
        "startLine": 155,
        "startChar": 61,
        "endLine": 155,
        "endChar": 67
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6c3ee2e_88475132",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 157,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-10-09T11:07:54Z",
      "side": 1,
      "message": "I think this is TRex receiving the packet on L2 level, but then dropping it because L7 buffers are full. Such packet increases ipackets, but does not increase any L7 counter (even if traffic profile wants to receive that packet).\n\nBut this is just me guessing. TRex docs say \"rx thread was throttled due too many packets in NIC rx queue\", and I did no experiments/investigation to confirm my hypothesis fits with the observed counters.",
      "range": {
        "startLine": 157,
        "startChar": 7,
        "endLine": 157,
        "endChar": 21
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4360a479_cbe47dd3",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 192,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-10-09T11:07:54Z",
      "side": 1,
      "message": "Oh, I missed this. *_est_flows are not used in formulas.\nAlso, no polling so no Target-Counters.",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 192,
        "endChar": 15
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40e8d93d_91050d24",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 192,
      "author": {
        "id": 45
      },
      "writtenOn": "2020-10-09T13:49:24Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "4360a479_cbe47dd3",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 192,
        "endChar": 15
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b9a6b9_38578426",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 199,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-10-09T11:07:54Z",
      "side": 1,
      "message": "Not used yet. The current suite structure (mrr/ndrpdr/soak autogenerated from the same template) is not a good fit, and the suite would need to restart VPP with different config (no support in existing keywords).\n\nI can imagine a suite that uses two traffic profiles, which are identical except IP ranges used, and VPP configured to NAT only one range. The rest of the suite can be similar to reconf suites: Discover a NDR and then use it in the next search.\nBut no chance to cram such development into rls2009.\n\nSo current MRR tests compute max rate just from pps limit and unidir packets per transaction, which is generally too high for TRex to keep up.",
      "range": {
        "startLine": 199,
        "startChar": 54,
        "endLine": 199,
        "endChar": 58
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63ead030_8684fe29",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 199,
      "author": {
        "id": 45
      },
      "writtenOn": "2020-10-09T13:49:24Z",
      "side": 1,
      "message": "See updated text.",
      "parentUuid": "36b9a6b9_38578426",
      "range": {
        "startLine": 199,
        "startChar": 54,
        "endLine": 199,
        "endChar": 58
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32101ba8_f440fde3",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 207,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-10-09T11:07:54Z",
      "side": 1,
      "message": "This is not PDR. It is the estimate used in initial phase of MLRsearch (mrr and mrr2). PDR is just multiplier acting as a valid PDR lower bound.",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 207,
        "endChar": 7
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f23db465_fa228969",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 207,
      "author": {
        "id": 45
      },
      "writtenOn": "2020-10-09T13:49:24Z",
      "side": 1,
      "message": "Updated text:\n\nCPS-PDR values are discovered using MLRsearch, a binary search optimized\nfor the overall test duration.\n\nCPS-PDR \u003d max(`trial_cps_rate`) found for `pktloss_ratio` \u003c\n`target_loss_ratio`, where `trial_cps_rate` \u003d TRex ASTF `multiplier`.\n\nMeasurements to be reported in the CPS-PDR result test message:\n\n- PDR_LOWER",
      "parentUuid": "32101ba8_f440fde3",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 207,
        "endChar": 7
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de9a0f94_08f2fb71",
        "filename": "docs/test_specs/csit-nat44ed-cps-spec.md",
        "patchSetId": 8
      },
      "lineNbr": 210,
      "author": {
        "id": 1263
      },
      "writtenOn": "2020-10-09T11:07:54Z",
      "side": 1,
      "message": "For UDP_CPS:\n\n  \u0027limit\u0027 * 1\n\nIf we had a UDP test with more complicated handshake, the \"* 1\" part could be different. But we do not have that (also I think the code does not support it, but it is already complicated enough).",
      "range": {
        "startLine": 210,
        "startChar": 24,
        "endLine": 210,
        "endChar": 32
      },
      "revId": "023720f2139a2051117858dc5f092f4acaf62fa1",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}