---
logging:
  version: 1
  formatters:
    console_stdout:
      format: '%(asctime)s - %(name)s - %(message)s'
    console_stderr:
      format: '%(message)s'
    prom:
      format: '%(message)s'
  handlers:
    console_stdout:
      class: logging.StreamHandler
      level: INFO
      formatter: console_stdout
      stream: ext://sys.stdout
    console_stderr:
      class: logging.StreamHandler
      level: ERROR
      formatter: console_stderr
      stream: ext://sys.stderr
    prom:
      class: logging.handlers.RotatingFileHandler
      level: INFO
      formatter: prom
      filename: /tmp/metric.prom
      mode: w
  loggers:
    prom:
      handlers: [prom]
      level: INFO
      propagate: False
  root:
    level: INFO
    handlers: [console_stdout, console_stderr]
scheduler:
  duration: 1
programs:
  - name: bundle_vpp
    metrics:
      gauge:
        - name: lvl0
          documentation: Branches/call
          namespace: vpp
          subsystem: power_licensing
          labelnames:
            - name
            - thread_name
            - thread_id
        - name: lvl1
          documentation: Branches/packet
          namespace: vpp
          subsystem: power_licensing
          labelnames:
            - name
            - thread_name
            - thread_id
        - name: lvl2
          documentation: Taken/call
          namespace: vpp
          subsystem: power_licensing
          labelnames:
            - name
            - thread_name
            - thread_id
        - name: throttle
          documentation: Taken/packet
          namespace: vpp
          subsystem: power_licensing
          labelnames:
            - name
            - thread_name
            - thread_id
    code: |
      perfmon reset
      perfmon start bundle power-licensing
      wait {duration}
      perfmon stop
      show perfmon statistics
