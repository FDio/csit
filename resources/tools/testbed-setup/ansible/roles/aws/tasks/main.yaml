---
# file: roles/aws/tasks/main.yaml

- name: Edit repositories
  include_tasks: "{{ ansible_distribution|lower }}_{{ ansible_distribution_release }}.yaml"
  tags:
    - edit-repo

- name: Inst - Update Package Cache (APT)
  apt:
    update_cache: yes
    cache_valid_time: 3600
  when:
    - ansible_distribution|lower == 'ubuntu'
  tags:
    - calibration-inst-prerequisites

- name: Get vfio-pci With WC Patcher
  get_url:
    url: "https://github.com/amzn/amzn-drivers/raw/master/userspace/dpdk/enav2-vfio-patch/get-vfio-with-wc.sh"
    dest: "/opt/get-vfio-with-wc.sh"
    mode: "744"
  tags:
    - vfio-aws-patch

- name: Create vfio-pci Patch Directory
  file:
    path: "/opt/patches/"
    state: "directory"
  tags:
    - vfio-aws-patch

- name: Get vfio-pci WC Patch >=4.10
  get_url:
    url: "https://github.com/amzn/amzn-drivers/raw/master/userspace/dpdk/enav2-vfio-patch/patches/linux-4.10-vfio-wc.patch"
    dest: "/opt/patches/linux-4.10-vfio-wc.patch"
    mode: "744"
  tags:
    - vfio-aws-patch

- name: Get vfio-pci WC Patch >=5.8
  get_url:
    url: "https://github.com/amzn/amzn-drivers/raw/master/userspace/dpdk/enav2-vfio-patch/patches/linux-5.8-vfio-wc.patch"
    dest: "/opt/patches/linux-5.8-vfio-wc.patch"
    mode: "744"
  tags:
    - vfio-aws-patch

- name: Compile vfio-pci With WC Patch
  shell: "/bin/bash /opt/get-vfio-with-wc.sh"
  tags:
    - vfio-aws-patch

- name: Load Kernel Modules By Default
  lineinfile:
    path: "/etc/modules"
    state: "present"
    line: "{{ item }}"
  with_items:
    - "vfio-pci"
    - "igb_uio"
  tags:
    - load-kernel-modules

- name: Add Kernel Modules Options (igb_uio)
  lineinfile:
    path: "/etc/modprobe.d/igb_uio.conf"
    state: "present"
    line: "{{ item }}"
    create: "yes"
  with_items:
    - "options igb_uio wc_activate=1"
  tags:
    - load-kernel-modules

- name: Add Kernel Modules Options (vfio-pci)
  lineinfile:
    path: "/etc/modprobe.d/vfio-noiommu.conf"
    state: "present"
    line: "{{ item }}"
    create: "yes"
  with_items:
    - "options vfio enable_unsafe_noiommu_mode=1"
  tags:
    - load-kernel-modules

- name: Reload systemd-modules
  systemd:
    name: "systemd-modules-load"
    state: "restarted"
  tags:
    - reload-systemd-modules

- name: Inst - Prerequisites
  package:
    name: "{{ packages | flatten(levels=1) }}"
    state: latest
  tags:
    - calibration-inst-prerequisites

- name: Check CPU Power States
  shell: "lscpu"
  register: current_lscpu
  changed_when: false
  tags:
    - check-cpu-frequency

- name: Check CPU Power States
  assert:
    that:
      - "'CPU min MHz' not in current_lscpu.stdout or 'Intel(R) Xeon(R)' not in ansible_processor"
    fail_msg: "CPU configuration!"
    success_msg: "CPU configuration match."
  tags:
    - check-cpu-frequency

- name: Check Kernel Version
  assert:
    that:
      - ansible_kernel not in kernel_version_by_distro_by_arch
    fail_msg: "Kernel version!"
    success_msg: "Kernel version match."
  tags:
    - check-kernel-version

- name: Get Spectre Meltdown Checker
  get_url:
    url: "https://meltdown.ovh"
    dest: "/opt/spectre-meltdown-checker.sh"
    mode: "744"
  tags:
    - check-spectre-meltdown

- name: Run Spectre Meltdown Checker
  shell: "/opt/spectre-meltdown-checker.sh --no-color || true"
  async: 60
  poll: 0
  ignore_errors: true
  register: spectre_meltdown_async
  tags:
    - check-spectre-meltdown

- name: "{{ ansible_machine }} Specific"
  include_tasks: "{{ ansible_machine }}.yaml"
  tags:
    - check-machine-specific
    - check-jitter-tool

- name: Check Sync Status
  async_status:
    jid: "{{ spectre_meltdown_async.ansible_job_id }}"
  register: "spectre_meltdown_poll_results"
  until: spectre_meltdown_poll_results.finished
  retries: 30

- debug: var=spectre_meltdown_poll_results.stdout_lines
  tags:
    - check-spectre-meltdown

- name: Performance Tuning - Adjust nr_hugepages
  sysctl:
    name: "vm.nr_hugepages"
    value: "8192"
    state: "present"
    sysctl_file: "/etc/sysctl.d/90-csit.conf"
    reload: "yes"
  tags:
    - set-sysctl
