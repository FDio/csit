---
# file: roles/trex/tasks/main.yaml

- name: T-Rex - Distribution - Release - Machine Prerequisites
  package:
    name: "{{ packages | flatten(levels=1) }}"
    state: latest
    update_cache: true
  tags:
    - install-dependencies

- name: T-Rex - Get Release Archive
  get_url:
    url: "{{ trex_url }}/v{{ item }}.tar.gz"
    dest: "{{ trex_target_dir }}/trex-core-{{ item }}.tar.gz"
    validate_certs: False
    mode: 0644
  loop: "{{ trex_version }}"
  register: trex_downloaded
  tags:
    - install-trex

- name: T-Rex - Ensure Directory Exists
  file:
    path: "{{ trex_target_dir }}/trex-core-{{ item }}"
    state: "directory"
  loop: "{{ trex_version }}"
  tags:
    - install-trex

- name: T-Rex - Extract Release Archive
  unarchive:
    remote_src: true
    src: "{{ trex_target_dir }}/trex-core-{{ item }}.tar.gz"
    dest: "{{ trex_target_dir }}/"
    creates: "{{ trex_target_dir }}/trex-core-{{ item }}/linux_dpdk/"
  loop: "{{ trex_version }}"
  register: trex_extracted
  tags:
    - install-trex

- name: T-Rex - Azure patch I
  patch:
    src: "files/t-rex.patch"
    basedir: "{{ trex_target_dir }}/trex-core-{{ item }}"
    strip: 1
  loop: "{{ trex_version }}"
  when:
    - azure is defined and "{{ item }}" == "2.73"
  tags:
    - install-trex

- name: T-Rex - Compile Release I
  command: "./b configure"
  args:
      chdir: "{{ trex_target_dir }}/trex-core-{{ item }}/linux_dpdk/"
  loop: "{{ trex_version }}"
  when: trex_extracted
  tags:
    - install-trex

- name: T-Rex - Compile Release II
  command: "./b build"
  args:
      chdir: "{{ trex_target_dir }}/trex-core-{{ item }}/linux_dpdk/"
  loop: "{{ trex_version }}"
  when: trex_extracted
  tags:
    - install-trex

- name: T-Rex - Compile Release III
  command: "make"
  args:
      chdir: "{{ trex_target_dir }}/trex-core-{{ item }}/scripts/ko/src"
  loop: "{{ trex_version }}"
  when: trex_extracted
  tags:
    - install-trex

- name: T-Rex - Compile Release IV
  command: "make install"
  args:
      chdir: "{{ trex_target_dir }}/trex-core-{{ item }}/scripts/ko/src"
  loop: "{{ trex_version }}"
  when: trex_extracted
  tags:
    - install-trex
