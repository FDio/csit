###############################################################################
#
# This specification is an example, but it fully works and can be used as a
# base.
#
###############################################################################

###############################################################################
# Section: Environment
#
# Specifies paths and urls used by PAL and/or elements.
# In general, you do not need to edit this section.
#
- type: "environment"

  paths:
    # Top level directories:
    ## Working directory
    DIR[WORKING]: "_tmp"
    ## Build directories
    DIR[BUILD,HTML]: "_build"
    DIR[BUILD,LATEX]: "_build_latex"

    # Static .rst files in CSIT repo
    DIR[RST]: "../../../docs/report"

    # Working directories
    ## Input data files (.zip, .xml)
    DIR[WORKING,DATA]: "{DIR[WORKING]}/data"
    ## Static source files from CSIT repo
    DIR[WORKING,SRC]: "{DIR[WORKING]}/src"
    DIR[WORKING,SRC,STATIC]: "{DIR[WORKING,SRC]}/_static"

    # Static html content
    DIR[STATIC]: "{DIR[BUILD,HTML]}/_static"
    DIR[STATIC,VPP]: "{DIR[STATIC]}/vpp"
    DIR[STATIC,DPDK]: "{DIR[STATIC]}/dpdk"
    DIR[STATIC,ARCH]: "{DIR[STATIC]}/archive"

    # Detailed test results
    DIR[DTR]: "{DIR[WORKING,SRC]}/detailed_test_results"
    DIR[DTR,PERF,DPDK,3N,HSW]: "{DIR[DTR]}/dpdk_performance_results_3n_hsw"
    DIR[DTR,PERF,DPDK,3N,SKX]: "{DIR[DTR]}/dpdk_performance_results_3n_skx"
    DIR[DTR,PERF,DPDK,2N,SKX]: "{DIR[DTR]}/dpdk_performance_results_2n_skx"
    DIR[DTR,PERF,DPDK,2N,CLX]: "{DIR[DTR]}/dpdk_performance_results_2n_clx"
    DIR[DTR,PERF,DPDK,2N,DNV]: "{DIR[DTR]}/dpdk_performance_results_2n_dnv"
    DIR[DTR,PERF,DPDK,3N,DNV]: "{DIR[DTR]}/dpdk_performance_results_3n_dnv"
    DIR[DTR,PERF,DPDK,3N,TSH]: "{DIR[DTR]}/dpdk_performance_results_3n_tsh"
    DIR[DTR,PERF,VPP,ALL]: "{DIR[DTR]}/vpp_performance_results"
    DIR[DTR,PERF,VPP,3N,HSW]: "{DIR[DTR]}/vpp_performance_results_3n_hsw"
    DIR[DTR,PERF,VPP,3N,SKX]: "{DIR[DTR]}/vpp_performance_results_3n_skx"
    DIR[DTR,PERF,VPP,2N,SKX]: "{DIR[DTR]}/vpp_performance_results_2n_skx"
    DIR[DTR,PERF,VPP,2N,CLX]: "{DIR[DTR]}/vpp_performance_results_2n_clx"
    DIR[DTR,PERF,VPP,3N,TSH]: "{DIR[DTR]}/vpp_performance_results_3n_tsh"
    DIR[DTR,PERF,VPP,3N,DNV]: "{DIR[DTR]}/vpp_performance_results_3n_dnv"
    DIR[DTR,PERF,VPP,2N,DNV]: "{DIR[DTR]}/vpp_performance_results_2n_dnv"
    DIR[DTR,PERF,VPP,3N,AWS]: "{DIR[DTR]}/vpp_performance_results_3n_aws"
    DIR[DTR,PERF,VPP,2N,AWS]: "{DIR[DTR]}/vpp_performance_results_2n_aws"
    DIR[DTR,MRR,VPP,ALL]: "{DIR[DTR]}/vpp_mrr_results"
    DIR[DTR,MRR,VPP,3N,HSW]: "{DIR[DTR]}/vpp_mrr_results_3n_hsw"
    DIR[DTR,MRR,VPP,3N,SKX]: "{DIR[DTR]}/vpp_mrr_results_3n_skx"
    DIR[DTR,MRR,VPP,2N,SKX]: "{DIR[DTR]}/vpp_mrr_results_2n_skx"
    DIR[DTR,MRR,VPP,2N,CLX]: "{DIR[DTR]}/vpp_mrr_results_2n_clx"
    DIR[DTR,MRR,VPP,3N,TSH]: "{DIR[DTR]}/vpp_mrr_results_3n_tsh"
    DIR[DTR,MRR,VPP,3N,DNV]: "{DIR[DTR]}/vpp_mrr_results_3n_dnv"
    DIR[DTR,MRR,VPP,2N,DNV]: "{DIR[DTR]}/vpp_mrr_results_2n_dnv"
    DIR[DTR,FUNC,VPP,DEVICE,UBUNTU]: "{DIR[DTR]}/vpp_device_results_ubuntu"

    # Detailed test configurations
    DIR[DTC]: "{DIR[WORKING,SRC]}/test_configuration"
    DIR[DTC,PERF,VPP,ALL]: "{DIR[DTC]}/vpp_performance_configuration"
    DIR[DTC,PERF,VPP,3N,HSW]: "{DIR[DTC]}/vpp_performance_configuration_3n_hsw"
    DIR[DTC,PERF,VPP,3N,SKX]: "{DIR[DTC]}/vpp_performance_configuration_3n_skx"
    DIR[DTC,PERF,VPP,2N,SKX]: "{DIR[DTC]}/vpp_performance_configuration_2n_skx"
    DIR[DTC,PERF,VPP,2N,CLX]: "{DIR[DTC]}/vpp_performance_configuration_2n_clx"
    DIR[DTC,PERF,VPP,3N,TSH]: "{DIR[DTC]}/vpp_performance_configuration_3n_tsh"
    DIR[DTC,PERF,VPP,3N,DNV]: "{DIR[DTC]}/vpp_performance_configuration_3n_dnv"
    DIR[DTC,PERF,VPP,2N,DNV]: "{DIR[DTC]}/vpp_performance_configuration_2n_dnv"
    DIR[DTC,PERF,VPP,3N,AWS]: "{DIR[DTC]}/vpp_performance_configuration_3n_aws"
    DIR[DTC,PERF,VPP,2N,AWS]: "{DIR[DTC]}/vpp_performance_configuration_2n_aws"
    DIR[DTC,MRR,VPP,ALL]: "{DIR[DTC]}/vpp_mrr_configuration"
    DIR[DTC,MRR,VPP,3N,HSW]: "{DIR[DTC]}/vpp_mrr_configuration_3n_hsw"
    DIR[DTC,MRR,VPP,3N,SKX]: "{DIR[DTC]}/vpp_mrr_configuration_3n_skx"
    DIR[DTC,MRR,VPP,2N,SKX]: "{DIR[DTC]}/vpp_mrr_configuration_2n_skx"
    DIR[DTC,MRR,VPP,2N,CLX]: "{DIR[DTC]}/vpp_mrr_configuration_2n_clx"
    DIR[DTC,MRR,VPP,3N,TSH]: "{DIR[DTC]}/vpp_mrr_configuration_3n_tsh"
    DIR[DTC,MRR,VPP,3N,DNV]: "{DIR[DTC]}/vpp_mrr_configuration_3n_dnv"
    DIR[DTC,MRR,VPP,2N,DNV]: "{DIR[DTC]}/vpp_mrr_configuration_2n_dnv"
    DIR[DTC,FUNC,VPP,DEVICE,UBUNTU]: "{DIR[DTC]}/vpp_device_configuration_ubuntu"

    # Detailed tests operational data
    DIR[DTO]: "{DIR[WORKING,SRC]}/test_operational_data"
    DIR[DTO,PERF,VPP,ALL]: "{DIR[DTO]}/vpp_performance_operational_data"
    DIR[DTO,PERF,VPP,3N,HSW]: "{DIR[DTO]}/vpp_performance_operational_data_3n_hsw"
    DIR[DTO,PERF,VPP,3N,SKX]: "{DIR[DTO]}/vpp_performance_operational_data_3n_skx"
    DIR[DTO,PERF,VPP,2N,SKX]: "{DIR[DTO]}/vpp_performance_operational_data_2n_skx"
    DIR[DTO,PERF,VPP,2N,CLX]: "{DIR[DTO]}/vpp_performance_operational_data_2n_clx"
    DIR[DTO,PERF,VPP,3N,TSH]: "{DIR[DTO]}/vpp_performance_operational_data_3n_tsh"
    DIR[DTO,PERF,VPP,3N,DNV]: "{DIR[DTO]}/vpp_performance_operational_data_3n_dnv"
    DIR[DTO,PERF,VPP,2N,DNV]: "{DIR[DTO]}/vpp_performance_operational_data_2n_dnv"
    DIR[DTO,PERF,VPP,3N,AWS]: "{DIR[DTO]}/vpp_performance_operational_data_3n_aws"
    DIR[DTO,PERF,VPP,2N,AWS]: "{DIR[DTO]}/vpp_performance_operational_data_2n_aws"

    # Latencies:
    DIR[LAT,VPP]: "{DIR[WORKING,SRC]}/vpp_performance_tests/hdrh_packet_latency_by_percentile_graphs"
    DIR[LAT,DPDK]: "{DIR[WORKING,SRC]}/dpdk_performance_tests/hdrh_packet_latency_by_percentile_graphs"

    # .css patch file to fix tables generated by Sphinx
    DIR[CSS_PATCH_FILE]: "{DIR[STATIC]}/theme_overrides.css"
    DIR[CSS_PATCH_FILE2]: "{DIR[WORKING,SRC,STATIC]}/theme_overrides.css"

  urls:
    # Urls where the input files are downloaded from
    URL[JENKINS,CSIT]: "https://jenkins.fd.io/view/csit/job"
    URL[S3_STORAGE,LOG]: "https://logs.nginx.service.consul/vex-yul-rot-jenkins-1"
    URL[NEXUS,LOG]: "https://logs.fd.io/production/vex-yul-rot-jenkins-1"
    URL[NEXUS,DOC]: "https://docs.fd.io/csit"
    DIR[NEXUS,DOC]: "report/_static/archive"

  make-dirs:
    # List the directories which are created while preparing the environment.
    # All directories MUST be defined in "paths" section.
    - "DIR[WORKING,DATA]"
    - "DIR[STATIC,VPP]"
    - "DIR[STATIC,DPDK]"
    - "DIR[STATIC,ARCH]"
    - "DIR[BUILD,LATEX]"
    - "DIR[WORKING,SRC]"
    - "DIR[WORKING,SRC,STATIC]"

  remove-dirs:
  # List the directories which are deleted while cleaning the environment.
  # All directories MUST be defined in "paths" section.
  #- "DIR[BUILD,HTML]"
  - "DIR[WORKING,DATA]"

  build-dirs:
  # List the directories where the results (build) is stored.
  # All directories MUST be defined in "paths" section.
  - "DIR[BUILD,HTML]"
  - "DIR[BUILD,LATEX]"

###############################################################################
#
# Section: Configuration
#
# Specifies:
# - Limits of NICs, links and PCI buses used by CSIT.
# - Data sets used by elements specified in this file.
# - Layouts of plots specified in this file.
#
- type: "configuration"

  # Limits of NICs, links and PCI buses used by CSIT.
  limits:
    # NIC limits [pps] for 64B packets
    nic:
      x520: 24460000
      x553: 29761905
      x710: 35800000
      xxv710: 35800000
      xl710: 35800000
      cx556a: 60000000

    # Link limits [pps] for 64B packets
    link:
      10ge: 14880952.38
      25ge: 37202380.95
      40ge: 59523809.52
      100ge: 148809523.81

    # PCI limits [pps] for 64B packets
    pci:
      pci-g3-x8: 74404761.90
      pci-g3-x16: 148809523.81

  # Data sets used by elements specified in this file
  #
  # The structure of a simple data set for a plot is:
  #
  #  <name-of-a-data-set>:
  #    <jenkins-job>:
  #      - <build_1>
  #      - <build_2>
  #      - ...
  #      - <build_n>
  #
  #  For example plot using data from three builds:
  #
  #  plot-vpp-throughput-lat-tsa-3n-dnv:
  #    csit-vpp-perf-verify-2001-3n-dnv:
  #      - 5   # NDRPDR sel
  #      - 6   # NDRPDR sel
  #      - 13  # NDRPDR sel
  #
  # Simple table with one data set is similar to the previous example:
  #
  #  vpp-perf-results-3n-hsw:
  #    csit-vpp-perf-verify-2001-3n-hsw:
  #      - 18  # NDRPDR full
  #      - 20  # NDRPDR full
  #      - 28  # NDRPDR full
  #      - 35  # NDRPDR full
  #      - 42  # NDRPDR full
  #      - 46  # NDRPDR full
  #      - 47  # NDRPDR full
  #
  # Tables with more than one data set:
  #
  # There are three data sub-sets defined in this example:
  # - vpp-performance-changes-3n-hsw-h1
  # - vpp-performance-changes-3n-hsw-ref
  # - vpp-performance-changes-3n-hsw-cmp
  # And then a fourth one:
  # - vpp-performance-changes-3n-hsw
  # which includes the previous three sub-sets.
  # These data sets are used for tables which compares performance of current
  # released version (2001) to the previous one (1908) and adds one old
  # version (1904).
  #
  #  vpp-performance-changes-3n-hsw-h1:
  #    csit-vpp-perf-verify-1904-3n-hsw:
  #      - 11  # NDRPDR sel
  #      - 12  # NDRPDR sel
  #      - 20  # NDRPDR sel
  #      - 21  # NDRPDR sel
  #      - 23  # NDRPDR sel
  #      - 24  # NDRPDR sel
  #      - 25  # NDRPDR sel
  #      - 26  # NDRPDR sel
  #      - 29  # NDRPDR sel
  #      - 30  # NDRPDR sel
  #  vpp-performance-changes-3n-hsw-ref:
  #    csit-vpp-perf-verify-1908-3n-hsw:
  #      - 12  # NDRPDR sel
  #      - 13  # NDRPDR sel
  #      - 14  # NDRPDR sel
  #      - 15  # NDRPDR sel
  #      - 16  # NDRPDR sel
  #      - 17  # NDRPDR sel
  #      - 18  # NDRPDR sel
  #      - 19  # NDRPDR sel
  #      - 20  # NDRPDR sel
  #      - 21  # NDRPDR sel
  #  vpp-performance-changes-3n-hsw-cmp:
  #    csit-vpp-perf-verify-2001-3n-hsw:
  #      - 21  # NDRPDR sel
  #      - 22  # NDRPDR sel
  #      - 23  # NDRPDR sel
  #      - 24  # NDRPDR sel
  #      - 25  # NDRPDR sel
  #      - 29  # NDRPDR sel
  #      - 30  # NDRPDR sel
  #      - 31  # NDRPDR sel
  #      - 32  # NDRPDR sel
  #      - 34  # NDRPDR sel
  #  vpp-performance-changes-3n-hsw:
  #    - "vpp-performance-changes-3n-hsw-h1"
  #    - "vpp-performance-changes-3n-hsw-ref"
  #    - "vpp-performance-changes-3n-hsw-cmp"
  #
  data-sets:

  # Data sets used in the examples below:
    plot-vpp-throughput-tsa-3n-aws:
      3n-aws-iter:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8

    vpp-perf-results-3n-aws:
      3n-aws-iter:
        - 1
        - 2

    plot-vpp-latency-3n-aws:
      3n-aws-iter:
        - 1
        - 2

    plot-vpp-throughput-tsa-2n-aws:
      2n-aws-iter:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10

    vpp-perf-results-2n-aws:
      2n-aws-iter:
        - 1
        - 2
        - 9

    plot-vpp-latency-2n-aws:
      2n-aws-iter:
        - 1
        - 2
        - 9

  # Layouts of plots specified in this file.
  #
  # There are defined layouts fro plots generated by plot.ly
  # The layouts are created using information from plot.ly reference:
  # https://plot.ly/python/reference/
  # These layout are directly used, however, in some cases are changed
  # or added some of their parts, e.g.:
  # - titles (graph title, axes,...),
  # - ranges,
  # - legends,
  # - annotations, ...
  #
  # For more information see plot.ly web pages.
  #
  plot-layouts:

    plot-soak-throughput:
      titlefont:
        size: 16
      xaxis:
        title: "<b>Test Cases [Index]</b>"
        titlefont:
          size: 14
        autorange: True
        fixedrange: False
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickmode: "linear"
        tickfont:
          size: 14
        zeroline: False
      yaxis:
        title: "<b>Critical Rate Lower Bound [Mpps]</b>"
        titlefont:
          size: 14
        gridcolor: "rgb(230, 230, 230)"
        hoverformat: ".4r"
        tickformat: ".3r"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickfont:
          size: 14
        zeroline: False
        range: [0,50]
      autosize: False
      margin:
        t: 50
        b: 0
        l: 80
        r: 20
      showlegend: True
      legend:
        orientation: "h"
        font:
          size: 14
      width: 700
      height: 900
      paper_bgcolor: "#fff"
      plot_bgcolor: "#fff"
      hoverlabel:
        namelength: -1

    plot-service-density:
      titlefont:
        size: 16
      xaxis:
        side: "top"
        autorange: True
        fixedrange: False
        showgrid: False
        showline: False
        showticklabels: False
        ticks: ""
        ticklen: 0
        tickwidth: 0
        zeroline: False
      yaxis:
        autorange: "reversed"
        showgrid: False
        showline: False
        showticklabels: False
        ticks: ""
        ticklen: 0
        tickwidth: 0
        zeroline: False
      showlegend: False
      paper_bgcolor: "#fff"
      plot_bgcolor: "#fff"
      width: 700
      height: 700
      hoverlabel:
        namelength: -1

    plot-hoststack:
      titlefont:
        size: 16
      xaxis:
        title: "<b>Test Cases [Index]</b>"
        titlefont:
          size: 14
        autorange: True
        fixedrange: False
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickmode: "linear"
        tickfont:
          size: 14
        zeroline: False
      yaxis:
        title: "<b>Bandwidth [Gbps]</b>"
        titlefont:
          size: 14
        gridcolor: "rgb(230, 230, 230)"
        hoverformat: ".4s"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        rangemode: "tozero"
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(230, 230, 230)"
        tickformat: ".3s"
        tickfont:
          size: 14
        zeroline: False
      autosize: False
      margin:
        t: 50
        b: 20
        l: 80
        r: 20
      showlegend: True
      legend:
        orientation: "h"
        font:
          size: 14
      width: 700
      height: 800
      paper_bgcolor: "#fff"
      plot_bgcolor: "#fff"
      hoverlabel:
        namelength: -1

    plot-throughput:
      titlefont:
        size: 16
      xaxis:
        title: "<b>Test Cases [Index]</b>"
        titlefont:
          size: 14
        autorange: True
        fixedrange: False
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickmode: "linear"
        tickfont:
          size: 14
        zeroline: False
      yaxis:
        title: "<b>Packet Throughput [Mpps]</b>"
        titlefont:
          size: 14
        gridcolor: "rgb(230, 230, 230)"
        hoverformat: ".4r"
        tickformat: ".3r"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickfont:
          size: 14
        zeroline: False
        range: [0,50]
      autosize: False
      margin:
        t: 50
        b: 0
        l: 80
        r: 20
      showlegend: True
      legend:
        orientation: "h"
        font:
          size: 14
      width: 700
      height: 900
      paper_bgcolor: "#fff"
      plot_bgcolor: "#fff"
      hoverlabel:
        namelength: -1

    plot-throughput-gbps:
      titlefont:
        size: 16
      xaxis:
        title: "<b>Test Cases [Index]</b>"
        titlefont:
          size: 14
        autorange: True
        fixedrange: False
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickmode: "linear"
        tickfont:
          size: 14
        zeroline: False
      yaxis:
        title: "<b>Data Throughput [Gbps]</b>"
        titlefont:
          size: 14
        gridcolor: "rgb(230, 230, 230)"
        hoverformat: ".4r"
        tickformat: ".3r"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickfont:
          size: 14
        zeroline: False
        range: [0,10]
      autosize: False
      margin:
        t: 50
        b: 0
        l: 80
        r: 20
      showlegend: True
      legend:
        orientation: "h"
        font:
          size: 14
      width: 700
      height: 900
      paper_bgcolor: "#fff"
      plot_bgcolor: "#fff"
      hoverlabel:
        namelength: -1

    plot-cps:
      titlefont:
        size: 16
      xaxis:
        title: "<b>Test Cases [Index]</b>"
        titlefont:
          size: 14
        autorange: True
        fixedrange: False
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickmode: "linear"
        tickfont:
          size: 14
        zeroline: False
      yaxis:
        title: "<b>Connection Rate [Mcps]</b>"
        titlefont:
          size: 14
        gridcolor: "rgb(230, 230, 230)"
        hoverformat: ".4r"
        tickformat: ".3s"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickfont:
          size: 14
        zeroline: False
        range: [0,10]
      autosize: False
      margin:
        t: 50
        b: 0
        l: 80
        r: 20
      showlegend: True
      legend:
        orientation: "h"
        font:
          size: 14
      width: 700
      height: 900
      paper_bgcolor: "#fff"
      plot_bgcolor: "#fff"
      hoverlabel:
        namelength: -1

    plot-throughput-speedup-analysis:
      titlefont:
        size: 16
      xaxis:
        title: "<b>Number of Cores [Qty]</b>"
        titlefont:
          size: 14
        autorange: True
        fixedrange: False
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(238, 238, 238)"
        tickmode: "linear"
        tickfont:
          size: 14
        zeroline: False
      yaxis:
        title: "<b>Packet Throughput [Mpps]</b>"
        titlefont:
          size: 14
        type: "linear"
        gridcolor: "rgb(230, 230, 230)"
        hoverformat: ".4s"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickformat: ".4s"
        tickfont:
          size: 14
        zeroline: True
        rangemode: "tozero"
        range: [0,100]
      legend:
        orientation: "h"
        font:
          size: 14
        xanchor: "left"
        yanchor: "top"
        x: 0
        y: -0.2
        bgcolor: "rgba(255, 255, 255, 0)"
        bordercolor: "rgba(255, 255, 255, 0)"
        traceorder: "normal"  # "grouped" does not work: bug https://github.com/plotly/plotly.js/issues/1913
      autosize: False
      margin:
          't': 50
          'b': 150
          'l': 85
          'r': 10
      showlegend: True
      width: 700
      height: 700
      paper_bgcolor: "#fff"
      plot_bgcolor: "#fff"
      hoverlabel:
        namelength: -1
      annotations: [
        {
          text: "_ _          __          ...",
          align: "left",
          showarrow: False,
          xref: "paper",
          yref: "paper",
          xanchor: "left",
          yanchor: "top",
          x: 0,
          y: -0.14,
          font: {
            family: "Consolas, Courier New",
            size: 13
          },
        },
        {
          text: "    Perfect     Measured     Limit",
          align: "left",
          showarrow: False,
          xref: "paper",
          yref: "paper",
          xanchor: "left",
          yanchor: "top",
          x: 0,
          y: -0.15,
          font: {
            family: "Consolas, Courier New",
            size: 13
          },
        },
      ]

    plot-throughput-speedup-analysis-gbps:
      titlefont:
        size: 16
      xaxis:
        title: "<b>Number of Cores [Qty]</b>"
        titlefont:
          size: 14
        autorange: True
        fixedrange: False
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(238, 238, 238)"
        tickmode: "linear"
        tickfont:
          size: 14
        zeroline: False
      yaxis:
        title: "<b>Packet Throughput [Gbps]</b>"
        titlefont:
          size: 14
        type: "linear"
        gridcolor: "rgb(230, 230, 230)"
        hoverformat: ".4s"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickformat: ".4s"
        tickfont:
          size: 14
        zeroline: True
        rangemode: "tozero"
        range: [0,100]
      legend:
        orientation: "h"
        font:
          size: 14
        xanchor: "left"
        yanchor: "top"
        x: 0
        y: -0.2
        bgcolor: "rgba(255, 255, 255, 0)"
        bordercolor: "rgba(255, 255, 255, 0)"
        traceorder: "normal"  # "grouped" does not work: bug https://github.com/plotly/plotly.js/issues/1913
      autosize: False
      margin:
          't': 50
          'b': 150
          'l': 85
          'r': 10
      showlegend: True
      width: 700
      height: 700
      paper_bgcolor: "#fff"
      plot_bgcolor: "#fff"
      hoverlabel:
        namelength: -1
      annotations: [
        {
          text: "_ _          __",
          align: "left",
          showarrow: False,
          xref: "paper",
          yref: "paper",
          xanchor: "left",
          yanchor: "top",
          x: 0,
          y: -0.13,
          font: {
            family: "Consolas, Courier New",
            size: 13
          },
        },
        {
          text: "    Perfect     Measured",
          align: "left",
          showarrow: False,
          xref: "paper",
          yref: "paper",
          xanchor: "left",
          yanchor: "top",
          x: 0,
          y: -0.15,
          font: {
            family: "Consolas, Courier New",
            size: 13
          },
        },
      ]

    plot-throughput-speedup-analysis-cps:
      titlefont:
        size: 16
      xaxis:
        title: "<b>Number of Cores [Qty]</b>"
        titlefont:
          size: 14
        autorange: True
        fixedrange: False
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(238, 238, 238)"
        tickmode: "linear"
        tickfont:
          size: 14
        zeroline: False
      yaxis:
        title: "<b>Connection Rate [Mcps]</b>"
        titlefont:
          size: 14
        type: "linear"
        gridcolor: "rgb(230, 230, 230)"
        hoverformat: ".4s"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickformat: ".4s"
        tickfont:
          size: 14
        zeroline: True
        rangemode: "tozero"
        range: [0,100]
      legend:
        orientation: "h"
        font:
          size: 14
        xanchor: "left"
        yanchor: "top"
        x: 0
        y: -0.2
        bgcolor: "rgba(255, 255, 255, 0)"
        bordercolor: "rgba(255, 255, 255, 0)"
        traceorder: "normal"  # "grouped" does not work: bug https://github.com/plotly/plotly.js/issues/1913
      autosize: False
      margin:
          't': 50
          'b': 150
          'l': 85
          'r': 10
      showlegend: True
      width: 700
      height: 700
      paper_bgcolor: "#fff"
      plot_bgcolor: "#fff"
      hoverlabel:
        namelength: -1
      annotations: [
        {
          text: "_ _          __",
          align: "left",
          showarrow: False,
          xref: "paper",
          yref: "paper",
          xanchor: "left",
          yanchor: "top",
          x: 0,
          y: -0.13,
          font: {
            family: "Consolas, Courier New",
            size: 13
          },
        },
        {
          text: "    Perfect     Measured",
          align: "left",
          showarrow: False,
          xref: "paper",
          yref: "paper",
          xanchor: "left",
          yanchor: "top",
          x: 0,
          y: -0.15,
          font: {
            family: "Consolas, Courier New",
            size: 13
          },
        },
      ]

    plot-latency:
      titlefont:
        size: 16
      xaxis:
        title: "<b>Direction</b>"
        titlefont:
          size: 14
        autorange: True
        fixedrange: False
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: False
        tickcolor: "rgb(220, 220, 220)"
        tickmode: "linear"
        tickfont:
          size: 14
        zeroline: False
      yaxis:
        title: "<b>Packet Latency [uSec]</b>"
        titlefont:
          size: 14
        type: "linear"
        gridcolor: "rgb(230, 230, 230)"
        hoverformat: ".4s"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickformat: ".4s"
        tickfont:
          size: 14
        zeroline: True
        rangemode: "tozero"
      legend:
        orientation: "h"
        font:
          size: 14
        traceorder: "normal"  # "grouped" does not work: bug https://github.com/plotly/plotly.js/issues/1913
      autosize: False
      margin:
          't': 50
          'b': 150
          'l': 80
          'r': 10
      showlegend: True
      width: 700
      height: 700
      paper_bgcolor: "#fff"
      plot_bgcolor: "#fff"
      hoverlabel:
        namelength: -1

    plot-hdrh-latency:
      title:
        text: ""
        xanchor: "center"
        x: 0.5
        font:
          size: 16
      width: 700
      plot_bgcolor: "white"
      annotations:
        - font:
            size: 14
          showarrow: False
          text: "<b>Packet Latency [uSec]</b>"
          x: 1
          xanchor: "right"
          xref: "paper"
          y: -0.045
          yanchor: "top"
          yref: "paper"
        - font:
            size: 14
          showarrow: False
          text: "<b>Probability [%]</b>"
          textangle: 270
          x: -0.06
          xanchor: "center"
          xref: "paper"
          y: 0.5
          yanchor: "middle"
          yref: "paper"
        - font:
            size: 14
          showarrow: False
          text: "<b>Direction: E-W</b>"
          x: 0.24
          xanchor: "center"
          xref: "paper"
          y: 1.05
          yanchor: "bottom"
          yref: "paper"
        - font:
            size: 14
          showarrow: False
          text: "<b>Direction: W-E</b>"
          x: 0.74
          xanchor: "center"
          xref: "paper"
          y: 1.05
          yanchor: "bottom"
          yref: "paper"

    plot-hdrh-latency-percentile-x-log:
      title:
        text: "<b>Latency by Percentile Distribution</b>"
        xanchor: "center"
        x: 0.5
        font:
          size: 18
      showlegend: True
      legend:
        traceorder: "normal"
        orientation: "h"
        font:
          size: 16
        xanchor: "left"
        yanchor: "top"
        x: 0
        y: -0.2
        bgcolor: "rgba(255, 255, 255, 0)"
        bordercolor: "rgba(255, 255, 255, 0)"
      xaxis:
        type: "log"
        title: "<b>Percentile [%]</b>"
        titlefont:
          size: 14
        autorange: False
        fixedrange: True
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickvals: [1, 2, 1e1, 20, 1e2, 1e3, 1e4, 1e5, 1e6]
        ticktext: [0, 50, 90, 95, 99, 99.9, 99.99, 99.999, 99.9999]
        tickfont:
          size: 14
      yaxis:
        title: "<b>One-Way Latency per Direction [uSec]</b>"
        titlefont:
          size: 14
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickfont:
          size: 14
      autosize: False
      width: 700
      height: 700
      paper_bgcolor: "white"
      plot_bgcolor: "white"

    plot-hdrh-latency-by-percentile:
      title:
        text: "<b>Latency by Percentile Distribution</b>"
        xanchor: "center"
        x: 0.5
        font:
          size: 18
      showlegend: True
      legend:
        traceorder: "normal"
        orientation: "h"
        font:
          size: 16
        xanchor: "left"
        yanchor: "top"
        x: 0
        y: -0.2
        bgcolor: "rgba(255, 255, 255, 0)"
        bordercolor: "rgba(255, 255, 255, 0)"
      xaxis:
        type: "linear"
        title: "<b>Percentile [%]</b>"
        titlefont:
          size: 14
        autorange: False
        fixedrange: False
        range: [0, 100]
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickvals: [0, 25, 50, 75, 100]
        ticktext: [0, 25, 50, 75, 100]
        tickfont:
          size: 14
      yaxis:
        title: "<b>One-Way Latency per Direction [uSec]</b>"
        titlefont:
          size: 14
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickfont:
          size: 14
      width: 700
      height: 700
      paper_bgcolor: "white"
      plot_bgcolor: "white"

    plot-scatter-error-bars-gbps:
      titlefont:
        size: 16
      xaxis:
        title: "<b>Test Cases [Index]</b>"
        titlefont:
          size: 14
        autorange: True
        fixedrange: False
        gridcolor: "rgb(230, 230, 230)"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickmode: "linear"
        tickfont:
          size: 14
        zeroline: False
      yaxis:
        title: "<b>Data Throughput [Gbps]</b>"
        titlefont:
          size: 14
        gridcolor: "rgb(230, 230, 230)"
        hoverformat: ".4r"
        tickformat: ".3r"
        linecolor: "rgb(220, 220, 220)"
        linewidth: 1
        showgrid: True
        showline: True
        showticklabels: True
        tickcolor: "rgb(220, 220, 220)"
        tickfont:
          size: 14
        zeroline: False
        range: [0,10]
      autosize: False
      margin:
        t: 50
        b: 0
        l: 80
        r: 20
      showlegend: True
      legend:
        orientation: "h"
        font:
          size: 14
      width: 700
      height: 900
      paper_bgcolor: "#fff"
      plot_bgcolor: "#fff"
      hoverlabel:
        namelength: -1

###############################################################################
#
# Section: Static content
#
# Specifies the source of the static content. PAL copies it from source
# directory to the destination directory and then modifies only the copy.
#
- type: "static"
  src-path: "{DIR[RST]}"
  dst-path: "{DIR[WORKING,SRC]}"

###############################################################################
#
# Section: Inputs
#
# Specifies the data sources.
#
- type: "input"
  general:
    # Specifies the primary source - nexus
    file-name: "output_info.xml.gz"
    file-format: ".gz"
    arch-file-format:
      - ".gz"
      - ".zip"
    download-path:
      - "{job}/{build}/archives/{filename}"
      - "{job}/{build}/{filename}"
    extract: "output.xml"

    # Specifies the secondary source - Jenkins, it is used if the source file
    # is not found in the primary source
    zip-file-name: "robot-plugin.zip"
    zip-file-format: ".zip"
    zip-download-path: "{job}/{build}/robot/report/*zip*/{filename}"
    zip-extract: "robot-plugin/output.xml"

  builds:

    # Build to be downloaded.
    #
    # The structure is:
    #
    # jenkins-job-1:
    #   - build_1
    #   - build_2
    #   - ...
    #   - build_n
    #
    # jenkins-job-m:
    #   - build_1
    #   - build_2
    #   - ...
    #   - build_n
    #
    # You can specify as many jobs and builds as needed.
    # This section is ignored when local sources (files and/or directories)
    # are specified from the command line.

    csit-vpp-perf-verify-2001-2n-clx:
      - 1   # NDRPDR sel
      - 2   # NDRPDR sel

    csit-vpp-perf-verify-2001-3n-dnv:
      - 1   # NDRPDR sel
      - 2   # NDRPDR sel
      - 3   # NDRPDR sel

###############################################################################
#
# Section: Outputs
#
# Specification of outputs.
#
# Possible outputs are:
# - report - a CSIT Report is generated
# - trending -a CSIT Trending is generated
# - none - nothing is generated, only element specified in the following
#   section.
#
# format:
# - html - html version is generated using sphinx
# - pdf - pdf version is generated using Latex (only report)
#
- type: "output"
  output: "report"
  format:
    html:
    - full
#    pdf:
#    - minimal

###############################################################################
#
# Section: Specifications of elements
#
# These elements can be specified:
# - table
# - file
# - plot
#
# The configuration of elements depends on the ALGORITHM used to generate it.
# See examples below:
#
# Plots
#
# - type: "plot"
      # title: a string used in logs to identify the element, there must be
      # specified the type of data to be presented at the end: ndr/pdr/mrr
#   title: "Throughput: 3n-dnv-x553-64b-1t1c-ip4routing-base-scale-ixgbe-ndr"
      # algorithm: The algorithm used to generate this element.
#   algorithm: "plot_perf_box_name"
      # output-file: The result is written to this file.
#   output-file: "{DIR[STATIC,VPP]}/3n-dnv-x553-64b-1t1c-ip4routing-base-scale-ixgbe-ndr"
      # data: The data set, it must be specified in configuration --> data-sets
#   data: "plot-vpp-throughput-lat-tsa-3n-dnv"
      # include: A List of tests to publish in the graph
      # the number of test (e.g. tc01-) is removed and information about nr of
      # threads is added (e.g. -1c- --> -1t1c-), see below.
#   include:
#     - "Tests.Vpp.Perf.Ip4.10Ge2P1X553-Dot1Q-Ip4Base-Ndrpdr.64B-1t1c-dot1q-ip4base-ndrpdr"
#     - "Tests.Vpp.Perf.Ip4.10Ge2P1X553-Ethip4-Ip4Base-Ndrpdr.64B-1t1c-ethip4-ip4base-ndrpdr"
#     - "Tests.Vpp.Perf.Ip4.10Ge2P1X553-Ethip4-Ip4Scale20K-Ndrpdr.64B-1t1c-ethip4-ip4scale20k-ndrpdr"
#     - "Tests.Vpp.Perf.Ip4.10Ge2P1X553-Ethip4-Ip4Scale200K-Ndrpdr.64B-1t1c-ethip4-ip4scale200k-ndrpdr"
#     - "Tests.Vpp.Perf.Ip4.10Ge2P1X553-Ethip4-Ip4Scale2M-Ndrpdr.64B-1t1c-ethip4-ip4scale2m-ndrpdr"
#   layout:
        # The title displayed in the generated graph
#     title: "3n-dnv-x553-64b-1t1c-ip4routing-base-scale-ixgbe-ndr"
        # The layout used to generate the plot.ly graph. It must be specified in
        # configuration --> plot-layouts
#     layout: "plot-throughput"
#
#
# - type: "plot"
      # title: a string used in logs to identify the element, there must be
      # specified the type of data to be presented at the end: ndr/pdr/mrr
#   title: "Speedup: 3n-dnv-x553-64b-ip4routing-base-scale-ixgbe-ndr-tsa"
      # algorithm: The algorithm used to generate this element.
#   algorithm: "plot_tsa_name"
#   output-file: "{DIR[STATIC,VPP]}/3n-dnv-x553-64b-ip4routing-base-scale-ixgbe-ndr-tsa"
#   data: "plot-vpp-throughput-lat-tsa-3n-dnv"
      # include: A List of tests to publish in the graph
      # As all threads/cores combinations are used, the info about it is
      # specified this way: -.t.c-
#   include:
#     - "Tests.Vpp.Perf.Ip4.10Ge2P1X553-Dot1Q-Ip4Base-Ndrpdr.64B-.t.c-dot1q-ip4base-ndrpdr"
#     - "Tests.Vpp.Perf.Ip4.10Ge2P1X553-Ethip4-Ip4Base-Ndrpdr.64B-.t.c-ethip4-ip4base-ndrpdr"
#     - "Tests.Vpp.Perf.Ip4.10Ge2P1X553-Ethip4-Ip4Scale20K-Ndrpdr.64B-.t.c-ethip4-ip4scale20k-ndrpdr"
#     - "Tests.Vpp.Perf.Ip4.10Ge2P1X553-Ethip4-Ip4Scale200K-Ndrpdr.64B-.t.c-ethip4-ip4scale200k-ndrpdr"
#     - "Tests.Vpp.Perf.Ip4.10Ge2P1X553-Ethip4-Ip4Scale2M-Ndrpdr.64B-.t.c-ethip4-ip4scale2m-ndrpdr"
#   layout:
#     title: "3n-dnv-x553-64b-ip4routing-base-scale-ixgbe-ndr-tsa"
#     layout: "plot-throughput-speedup-analysis"
#
#
# - type: "plot"
#   title: "Latency by percentile: DPDK 3n-tsh"
      # algorithm: The algorithm used to generate this element.
      # This algorithm generates graphs for all tests in the data set specified
      # by filter.
#   algorithm: "plot_hdrh_lat_by_percentile"
#   output-file: "{DIR[STATIC,DPDK]}/hdrh-lat-percentile-3n-tsh"
      # output-file-links: here are written links to all generated plots
#   output-file-links: "{DIR[LAT,DPDK]}/3n_tsh.rst"
      # target-links: the prefix added to links
#   target-links: "../../_static/dpdk"
#   data: "plot-dpdk-hdrh-lat-3n-tsh"
      # The logical expression defining the tests to be used. It consists of
      # tags enclosed in apostrophes and logical operators.
#   filter: "'1T1C' and 'NIC_Intel-X520-DA2'"
#   layout:
#     layout: "plot-hdrh-latency-by-percentile"
#
#
# - type: "plot"
#   title: "Packet Throughput: eth-l2bd-{Y}ch-{2XY}vh-{XY}vm-vxlan-vppip4-ndr"
#   algorithm: "plot_nf_heatmap"
#   output-file-type: ".html"
#   output-file: "{DIR[STATIC,VPP]}/l2bd-2n-clx-xxv710-imix-8t4c-base-vsc-vxlan-ndr"
#   data: "plot-vpp-nfv-2n-clx-ndrpdr"
#   filter: "'NIC_Intel-XXV710' and
#            'NF_DENSITY' and
#            'VHOST' and
#            'VXLAN' and
#            'CHAIN' and
#            'IMIX' and
#            '8T4C' and
#            'NDRPDR'"
#   parameters:
#     - "throughput"
#     - "name"
#     - "tags"
#   include-tests: "NDR" # "PDR" | "NDR" | "MRR"
#   x-axis: "X = VNFs per Service Chain"
#   y-axis: "Y = Number of Service Chains"
#   z-axis: "IMIX Packet Throughput (mean NDR) [Mpps]"
#   layout:
#     title: "<b>Throughput:</b> eth-l2bd-{Y}ch-{2XY}vh-{XY}vm-vxlan-vppip4-ndr"
#     layout: "plot-service-density"
#
#
# Tables
#
# - type: "table"
#   title: "Detailed Test Results - VPP Performance Results 3n-dnv"
      # algorithm: The algorithm used to generate this element.
#   algorithm: "table_merged_details"
#   output-file: "{DIR[DTR,PERF,VPP,3N,DNV]}/vpp_performance_results_3n_dnv"
      # columns: Specification of columns
      # title: column title
      # data: string with two parts, 'data' means use data from data set, the second
      # part specifies which data - name: test name, msg - test message,
      # conf-history - configuration history,
#   columns:
#   - title: " |prein| Test Name |preout| "
#     data: "data name"
#   - title: " |prein| Throughput: |br| 1. Mpps      Gbps (NDR) |br| 2. Mpps      Gbps (PDR) |br| |br| One-Way Latency Percentiles in uSec at %PDR load, |br| one set per each direction: |br| 3. P50 P90 P99      P50 P90 P99 (10% PDR) |br| 4. P50 P90 P99      P50 P90 P99 (50% PDR) |br| 5. P50 P90 P99      P50 P90 P99 (90% PDR) |preout| "
#     data: "data msg"
#   data: "vpp-perf-results-3n-dnv"
#   filter: "all"
#     # parameters: test parameters from the source file used to generate this
      # element.
#   parameters:
#   - "name"
#   - "parent"
#   - "msg"
#
#
# - type: "table"
#   title: "Test Operational Data - VPP Performance Operational Data 3n-dnv"
      # algorithm: The algorithm used to generate this element.
#   algorithm: "table_oper_data_html"
#   output-file: "{DIR[DTO,PERF,VPP,3N,DNV]}/vpp_test_operational_3n_dnv"
#   data: "vpp-perf-results-3n-dnv"
#   filter: "all"
#
#
# Files
#
# VPP Performance Results 3n-dnv
# - type: "file"
#   title: "VPP Performance Results 3n-dnv"
      # algorithm: The algorithm used to generate this element.
#   algorithm: "file_test_results"
#   output-file: "{DIR[DTR,PERF,VPP,3N,DNV]}"
      # dir-tables: The directory where the tables for file(s) are stored.
#   dir-tables: "{DIR[DTR,PERF,VPP,3N,DNV]}"
#   data: "vpp-perf-results-3n-dnv"
#   filter: "all"
      # data-start-level: The starting level in RF output.xml file.
      # E.g.: the top level chapter for
      # Tests.Vpp.Perf.Ip6.10Ge2P1X553-Dot1Q-Ip6Base-Ndrpdr.78B-1t1c-dot1q-ip6base-ndrpdr
      # is Ip6
#   data-start-level: 4
#
#
# - type: "file"
#   title: "VPP Performance Results"
      # algorithm: The algorithm used to generate this element.
#   algorithm: "file_details_split"
#   output-file: "{DIR[DTR,PERF,VPP,ALL]}"
      # dir-tables: The list of directories where the tables for files are
      # stored.
#   dir-tables:
#     - "{DIR[DTR,PERF,VPP,2N,SKX]}"
#     - "{DIR[DTR,PERF,VPP,3N,SKX]}"
#     - "{DIR[DTR,PERF,VPP,2N,CLX]}"
#     - "{DIR[DTR,PERF,VPP,3N,HSW]}"
#     - "{DIR[DTR,PERF,VPP,3N,TSH]}"
#     - "{DIR[DTR,PERF,VPP,2N,DNV]}"
#     - "{DIR[DTR,PERF,VPP,3N,DNV]}"
      # data: Data used to generate the files
      # The order of these data sets must be the same as the order in
      # 'dir-tables'.
#   data:
#     - "vpp-perf-results-2n-skx"
#     - "vpp-perf-results-3n-skx"
#     - "vpp-perf-results-2n-clx"
#     - "vpp-perf-results-3n-hsw"
#     - "vpp-perf-results-3n-tsh"
#     - "vpp-perf-results-2n-dnv"
#     - "vpp-perf-results-3n-dnv"
#   filter: "all"
#   data-start-level: 4
      # order-chapters: The order of chapters in generated file structure.
      # There are three levels and each has its own order of chapters.
#   order-chapters:
#     level-1:
#       - "l2"
#       - "ip4"
#       - "ip6"
#       - "srv6"
#       - "ip4_tunnels"
#       - "ip6_tunnels"
#       - "vm_vhost"
#       - "container_memif"
#       - "crypto"
#       - "vts"
#       - "lb"
#       - "nfv_density"
#       - "hoststack"
#     level-2:
#       - "2n-skx"
#       - "3n-skx"
#       - "2n-clx"
#       - "3n-hsw"
#       - "3n-tsh"
#       - "2n-dnv"
#       - "3n-dnv"
#     level-3:
#       - "xl710"
#       - "x520"
#       - "xxv710"
#       - "x710"
#       - "x553"
#       - "cx556a"
#       - "vic1227"
#       - "vic1385"

###############################################################################
# Example:
#
# We have this directory structure of input XML files:
#
# local
# ├── csit-vpp-perf-verify-2001-2n-clx
# │   ├── csit-vpp-perf-verify-2001-2n-clx__28__output_info.xml
# │   └── csit-vpp-perf-verify-2001-2n-clx__29__output_info.xml
# └── csit-vpp-perf-verify-2001-3n-dnv
#     ├── csit-vpp-perf-verify-2001-3n-dnv__5__output_info.xml
#     ├── csit-vpp-perf-verify-2001-3n-dnv__6__output_info.xml
#     └── csit-vpp-perf-verify-2001-3n-dnv__7__output_info.xml
#
# We created the data sets which you can find in configuration --> data-sets
# section.
#
# Using models below, we generate tables, files and plots. Then we generate
# the report. It is specified in the output section.
#
# Use this command to run it:
# ./run_report_local.sh --directory local/
#

# Tables:

# Detailed Test Results - VPP Performance Results 3n-aws
- type: "table"
  title: "Detailed Test Results - VPP Performance Results 3n-aws"
  algorithm: "table_merged_details"
  output-file: "{DIR[DTR,PERF,VPP,3N,AWS]}/"
  columns:
  - title: " |prein| Test Name |preout| "
    data: "data name"
  - title: " |prein| Throughput: |br| 1.  Mpps       Gbps (NDR) |br| 2.  Mpps       Gbps (PDR) |br| |br| One-Way Latency Percentiles in uSec at %PDR load, |br| one set per each direction: |br| 3.  P50  P90  P99       P50  P90  P99 (10% PDR) |br| 4.  P50  P90  P99       P50  P90  P99 (50% PDR) |br| 5.  P50  P90  P99       P50  P90  P99 (90% PDR) |preout| "
    data: "data msg"
  data: "vpp-perf-results-3n-aws"
  filter: "all"
  parameters:
  - "name"
  - "parent"
  - "msg"

# Test configuration - VPP Performance Test Configs 3n-aws
- type: "table"
  title: "Test configuration - VPP Performance Test Configs 3n-aws"
  algorithm: "table_merged_details"
  output-file: "{DIR[DTC,PERF,VPP,3N,AWS]}/"
  columns:
  - title: " |prein| Test Name |preout| "
    data: "data name"
  - title: " |prein| VPP API Test Commands History - Commands Used Per Test Case |preout| "
    data: "data conf-history"
  data: "vpp-perf-results-3n-aws"
  filter: "all"
  parameters:
  - "parent"
  - "name"
  - "conf-history"

# Test Operational Data - VPP Performance Operational Data 3n-aws
- type: "table"
  title: "Test Operational Data - VPP Performance Operational Data 3n-aws"
  algorithm: "table_oper_data_html"
  output-file: "{DIR[DTO,PERF,VPP,3N,AWS]}/"
  data: "vpp-perf-results-3n-aws"
  filter: "all"

# Detailed Test Results - VPP Performance Results 2n-aws
- type: "table"
  title: "Detailed Test Results - VPP Performance Results 2n-aws"
  algorithm: "table_merged_details"
  output-file: "{DIR[DTR,PERF,VPP,2N,AWS]}/"
  columns:
  - title: " |prein| Test Name |preout| "
    data: "data name"
  - title: " |prein| Throughput: |br| 1.  Mpps       Gbps (NDR) |br| 2.  Mpps       Gbps (PDR) |br| |br| One-Way Latency Percentiles in uSec at %PDR load, |br| one set per each direction: |br| 3.  P50  P90  P99       P50  P90  P99 (10% PDR) |br| 4.  P50  P90  P99       P50  P90  P99 (50% PDR) |br| 5.  P50  P90  P99       P50  P90  P99 (90% PDR) |preout| "
    data: "data msg"
  data: "vpp-perf-results-2n-aws"
  filter: "all"
  parameters:
  - "name"
  - "parent"
  - "msg"

# Test configuration - VPP Performance Test Configs 2n-aws
- type: "table"
  title: "Test configuration - VPP Performance Test Configs 2n-aws"
  algorithm: "table_merged_details"
  output-file: "{DIR[DTC,PERF,VPP,2N,AWS]}/"
  columns:
  - title: " |prein| Test Name |preout| "
    data: "data name"
  - title: " |prein| VPP API Test Commands History - Commands Used Per Test Case |preout| "
    data: "data conf-history"
  data: "vpp-perf-results-2n-aws"
  filter: "all"
  parameters:
  - "parent"
  - "name"
  - "conf-history"

# Test Operational Data - VPP Performance Operational Data 2n-aws
- type: "table"
  title: "Test Operational Data - VPP Performance Operational Data 2n-aws"
  algorithm: "table_oper_data_html"
  output-file: "{DIR[DTO,PERF,VPP,2N,AWS]}/"
  data: "vpp-perf-results-2n-aws"
  filter: "all"

# Files:

# VPP Performance Results
- type: "file"
  title: "VPP Performance Results"
  algorithm: "file_details_split"
  output-file: "{DIR[DTR,PERF,VPP,ALL]}"
  dir-tables:
    - "{DIR[DTR,PERF,VPP,2N,AWS]}"
    - "{DIR[DTR,PERF,VPP,3N,AWS]}"
  data:
    - "vpp-perf-results-2n-aws"
    - "vpp-perf-results-3n-aws"
  filter: "all"
  data-start-level: 4
  order-chapters:
    level-1:
      - "l2"
      - "ip4"
      - "ip6"
      - "srv6"
      - "ip4_tunnels"
      - "ip6_tunnels"
      - "vm_vhost"
      - "container_memif"
      - "crypto"
      - "vts"
      - "lb"
      - "nfv_density"
      - "hoststack"
    level-2:
      - "2n-skx"
      - "3n-skx"
      - "2n-clx"
      - "3n-hsw"
      - "3n-tsh"
      - "2n-dnv"
      - "3n-dnv"
      - "2n-aws"
      - "3n-aws"
    level-3:
      - "xl710"
      - "x520"
      - "xxv710"
      - "x710"
      - "x553"
      - "cx556a"
      - "vic1227"
      - "vic1385"
      - "ena"

# VPP Performance Configuration
- type: "file"
  title: "VPP Performance Configuration"
  algorithm: "file_details_split"
  output-file: "{DIR[DTC,PERF,VPP,ALL]}"
  dir-tables:
    - "{DIR[DTC,PERF,VPP,2N,AWS]}"
    - "{DIR[DTC,PERF,VPP,3N,AWS]}"
  data:
    - "vpp-perf-results-2n-aws"
    - "vpp-perf-results-3n-aws"
  filter: "all"
  data-start-level: 4
  order-chapters:
    level-1:
      - "l2"
      - "ip4"
      - "ip6"
      - "srv6"
      - "ip4_tunnels"
      - "ip6_tunnels"
      - "vm_vhost"
      - "container_memif"
      - "crypto"
      - "vts"
      - "lb"
      - "nfv_density"
      - "hoststack"
    level-2:
      - "2n-skx"
      - "3n-skx"
      - "2n-clx"
      - "3n-hsw"
      - "3n-tsh"
      - "2n-dnv"
      - "3n-dnv"
      - "2n-aws"
      - "3n-aws"
    level-3:
      - "xl710"
      - "x520"
      - "xxv710"
      - "x710"
      - "x553"
      - "cx556a"
      - "vic1227"
      - "vic1385"
      - "ena"

# VPP Performance Operational
- type: "file"
  title: "VPP Performance Operational"
  algorithm: "file_details_split_html"
  output-file: "{DIR[DTO,PERF,VPP,ALL]}"
  dir-tables:
    - "{DIR[DTO,PERF,VPP,2N,AWS]}"
    - "{DIR[DTO,PERF,VPP,3N,AWS]}"
  data:
    - "vpp-perf-results-2n-aws"
    - "vpp-perf-results-3n-aws"
  filter: "all"
  data-start-level: 4
  order-chapters:
    level-1:
      - "l2"
      - "ip4"
      - "ip6"
      - "srv6"
      - "ip4_tunnels"
      - "ip6_tunnels"
      - "vm_vhost"
      - "container_memif"
      - "crypto"
      - "vts"
      - "lb"
      - "nfv_density"
      - "hoststack"
    level-2:
      - "2n-skx"
      - "3n-skx"
      - "2n-clx"
      - "3n-hsw"
      - "3n-tsh"
      - "2n-dnv"
      - "3n-dnv"
      - "2n-aws"
      - "3n-aws"
    level-3:
      - "xl710"
      - "x520"
      - "xxv710"
      - "x710"
      - "x553"
      - "cx556a"
      - "vic1227"
      - "vic1385"
      - "ena"

# Plots:

- type: "plot"
  title: "Throughput: 2n-aws-nitro50g-64b-{core}-ip4routing-base-scale-{test_type}"
  algorithm: "plot_ndrpdr_box_name"
  output-file: "{DIR[STATIC,VPP]}/2n-aws-nitro50g-64b-{core}-ip4routing-base-scale-{test_type}"
  data: "plot-vpp-throughput-tsa-2n-aws"
  core: ["2t1c", "4t2c"]
  include:
    - "Tests.Vpp.Perf.Ip4.2n1l-50ge1p1ENA-ethip4-ip4base-ndrpdr.64B-{core}-ethip4-ip4base-ndrpdr"
#     - "Tests.Vpp.Perf.Ip4.2n1l-50ge1p1ENA-ethip4-ip4scale2m-ndrpdr.64B-{core}-ethip4-ip4scale2m-ndrpdr"
  layout:
    title: "2n-aws-nitro50g-64b-{core}-ip4routing-base-scale-{test_type}"
    layout: "plot-throughput"

- type: "plot"
  title: "Throughput: 2n-aws-nitro50g-1518b-{core}-ip4routing-base-scale-{test_type}"
  algorithm: "plot_ndrpdr_box_name"
  output-file: "{DIR[STATIC,VPP]}/2n-aws-nitro50g-1518b-{core}-ip4routing-base-scale-{test_type}"
  data: "plot-vpp-throughput-tsa-2n-aws"
  core: ["2t1c", "4t2c"]
  include:
    - "Tests.Vpp.Perf.Ip4.2n1l-50ge1p1ENA-ethip4-ip4base-ndrpdr.1518B-{core}-ethip4-ip4base-ndrpdr"
#     - "Tests.Vpp.Perf.Ip4.2n1l-50ge1p1ENA-ethip4-ip4scale2m-ndrpdr.1518B-{core}-ethip4-ip4scale2m-ndrpdr"
  layout:
    title: "2n-aws-nitro50g-1518b-{core}-ip4routing-base-scale-{test_type}"
    layout: "plot-throughput"

- type: "plot"
  title: "Throughput: 2n-aws-nitro50g-imix-{core}-ip4routing-base-scale-{test_type}"
  algorithm: "plot_ndrpdr_box_name"
  output-file: "{DIR[STATIC,VPP]}/2n-aws-nitro50g-imix-{core}-ip4routing-base-scale-{test_type}"
  data: "plot-vpp-throughput-tsa-2n-aws"
  core: ["2t1c", "4t2c"]
  include:
    - "Tests.Vpp.Perf.Ip4.2n1l-50ge1p1ENA-ethip4-ip4scale2m-ndrpdr.IMIX-{core}-ethip4-ip4scale2m-ndrpdr"
  layout:
    title: "2n-aws-nitro50g-imix-{core}-ip4routing-base-scale-{test_type}"
    layout: "plot-throughput"

- type: "plot"
  title: "Throughput: 3n-aws-nitro50g-64b-{core}-ip4routing-base-scale-{test_type}"
  algorithm: "plot_ndrpdr_box_name"
  output-file: "{DIR[STATIC,VPP]}/3n-aws-nitro50g-64b-{core}-ip4routing-base-scale-{test_type}"
  data: "plot-vpp-throughput-tsa-3n-aws"
  core: ["2t1c", "4t2c"]
  include:
    - "Tests.Vpp.Perf.Ip4.50ge1p1ENA-ethip4-ip4base-ndrpdr.64B-{core}-ethip4-ip4base-ndrpdr"
    - "Tests.Vpp.Perf.Ip4.50ge1p1ENA-ethip4-ip4scale2m-ndrpdr.64B-{core}-ethip4-ip4scale2m-ndrpdr"
  layout:
    title: "3n-aws-nitro50g-64b-{core}-ip4routing-base-scale-{test_type}"
    layout: "plot-throughput"

- type: "plot"
  title: "Throughput: 3n-aws-nitro50g-1518b-{core}-ip4routing-base-scale-{test_type}"
  algorithm: "plot_ndrpdr_box_name"
  output-file: "{DIR[STATIC,VPP]}/3n-aws-nitro50g-1518b-{core}-ip4routing-base-scale-{test_type}"
  data: "plot-vpp-throughput-tsa-3n-aws"
  core: ["2t1c", "4t2c"]
  include:
    - "Tests.Vpp.Perf.Ip4.50ge1p1ENA-ethip4-ip4base-ndrpdr.1518B-{core}-ethip4-ip4base-ndrpdr"
    - "Tests.Vpp.Perf.Ip4.50ge1p1ENA-ethip4-ip4scale2m-ndrpdr.1518B-{core}-ethip4-ip4scale2m-ndrpdr"
  layout:
    title: "3n-aws-nitro50g-1518b-{core}-ip4routing-base-scale-{test_type}"
    layout: "plot-throughput"

- type: "plot"
  title: "Latency by percentile: 2n-aws"
  algorithm: "plot_hdrh_lat_by_percentile_x_log"
  output-file: "{DIR[STATIC,VPP]}/hdrh-lat-percentile-2n-aws"
  output-file-links: "{DIR[LAT,VPP]}/2n_aws.rst"
  target-links: "../../_static/vpp"
  data: "plot-vpp-latency-2n-aws"
  filter: "'2T1C'"
  layout:
    layout: "plot-hdrh-latency-percentile-x-log"

- type: "plot"
  title: "Latency by percentile: 3n-aws"
  algorithm: "plot_hdrh_lat_by_percentile_x_log"
  output-file: "{DIR[STATIC,VPP]}/hdrh-lat-percentile-3n-aws"
  output-file-links: "{DIR[LAT,VPP]}/3n_aws.rst"
  target-links: "../../_static/vpp"
  data: "plot-vpp-latency-3n-aws"
  filter: "'2T1C'"
  layout:
    layout: "plot-hdrh-latency-percentile-x-log"
