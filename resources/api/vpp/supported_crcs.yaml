# Copyright (c) 2019 Cisco and/or its affiliates.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

# Recommended collection name is a version string.
# Comment https link towards the build used to get or verify the CRC values.
# Link cannot easily be name as it is too long.

# Prefer x86_64, Ubuntu, latest LTS.
# Note that during flag day process, the link would point
# to (logged artifacts of) verify job, not merge job.

# Note that you cannot easily avoid quotes for CRC values.
# With leading 0x, yaml interprets the values as numbers.
# Even with 0x removed, hexa CRC value may appear as decimal number.

# Trailing comments are optional, for tracking how to test the message.

dummy:
    acl_add_replace: '0'  # perf
    acl_add_replace_reply: '0'  # perf
    acl_dump: '0'  # perf teardown
    acl_interface_list_dump: '0'  # perf teardown
    # ^^^^ tc01-64B-1c-ethip4udp-ip4base-iacl1sf-10kflows-mrr
    acl_interface_set_acl_list: '0'  # perf
    acl_interface_set_acl_list_reply: '0'  # perf
    acl_details: '0'  # perf teardown
    acl_interface_list_details: '0'  # perf teardown
    # ^^^^ tc01-64B-1c-ethip4udp-ip4base-iacl1sl-10kflows-mrr
    # ^^ ip4fwdANDiaclANDacl10AND100_flows
    avf_create: '0'  # perf
    avf_create_reply: '0'  # perf
    # ^^ tc01-64B-1c-avf-eth-l2bdbasemaclrn-mrr
    # ^ l2bdmaclrnANDbaseANDdrv_avf
    bond_create: '0'  # perf
    bond_create_reply: '0'  # perf
    bond_enslave: '0'  # perf
    bond_enslave_reply: '0'  # perf
    # ^^^^ tc01-64B-1c-1lbvpplacp-dot1q-l2xcbase-eth-2vhostvr1024-1vm-mrr
    # ^ l2xcfwdANDlbond_1l
    bridge_domain_add_del: '0'  # dev
    bridge_domain_add_del_reply: '0'  # dev
    classify_add_del_session: '0'  # dev
    classify_add_del_session_reply: '0'  # dev
    classify_add_del_table: '0'  # dev
    classify_add_del_table_reply: '0'  # dev
    cli_inband: '0'  # dev setup
    cli_inband_reply: '0'  # dev setup
    cop_interface_enable_disable: '0'  # dev
    cop_interface_enable_disable_reply: '0'  # dev
    cop_whitelist_enable_disable: '0'  # dev
    cop_whitelist_enable_disable_reply: '0'  # dev
    create_loopback: '0'  # dev
    create_loopback_reply: '0'  # dev
    create_subif: '0'  # virl
    create_subif_reply: '0'  # virl
    create_vhost_user_if: '0'  # dev
    create_vhost_user_if_reply: '0'  # dev
    create_vlan_subif: '0'  # virl
    create_vlan_subif_reply: '0'  # virl
    gbp_bridge_domain_add: '0'  # perf
    gbp_bridge_domain_add_reply: '0'  # perf
    gbp_route_domain_add: '0'  # perf
    gbp_route_domain_add_reply: '0'  # perf
    gbp_endpoint_add: '0'  # perf
    gbp_endpoint_add_reply: '0'  # perf
    gbp_endpoint_group_add: '0'  # perf
    gbp_endpoint_group_add_reply: '0'  # perf
    gbp_subnet_add_del: '0'  # perf
    gbp_subnet_add_del_reply: '0'  # perf
    gbp_contract_add_del: '0'  # perf
    gbp_contract_add_del_reply: '0'  # perf
    gbp_ext_itf_add_del: '0'  # perf
    gbp_ext_itf_add_del_reply: '0'  # perf
    # ^^^^^^^^^^^^^^ tc01-64B-1c-avf-dot1q-l2bdbasemaclrn-gbp-mrr
    # ^ dot1qANDdrv_avfANDgbp
    gre_tunnel_add_del: '0'  # virl
    gre_tunnel_add_del_reply: '0'  # virl
    gpe_enable_disable: '0'  # virl
    gpe_enable_disable_reply: '0'  # virl
    hw_interface_set_mtu: '0'  # dev
    hw_interface_set_mtu_reply: '0'  # dev
    input_acl_set_interface: '0'  # dev
    input_acl_set_interface_reply: '0'  # dev
    ip_address_details: '0'  # dev
    ip_address_dump: '0'  # dev
    ip_neighbor_add_del: '0'  # dev
    ip_neighbor_add_del_reply: '0'  # dev
    ip_probe_neighbor: '0'  # virl
    ip_probe_neighbor_reply: '0'  # virl
    ip_route_add_del: '0'  # dev
    ip_route_add_del_reply: '0'  # dev
    ip_source_check_interface_add_del: '0'  # virl
    ip_source_check_interface_add_del_reply: '0'  # virl
    ip_table_add_del: '0'  # dev
    ip_table_add_del_reply: '0'  # dev
    ipsec_interface_add_del_spd: '0'  # dev
    ipsec_interface_add_del_spd_reply: '0'  # dev
    ipsec_sad_entry_add_del: '0'  # dev
    ipsec_sad_entry_add_del_reply: '0'  # dev
    ipsec_spd_add_del: '0'  # dev
    ipsec_spd_add_del_reply: '0'  # dev
    ipsec_spd_entry_add_del: '0'  # dev
    ipsec_spd_entry_add_del_reply: '0'  # dev
    ipsec_tunnel_if_add_del: '0'  # perf
    ipsec_tunnel_if_add_del_reply: '0'  # perf
    # ^^ tc01-64B-1c-ethip4ipsec1tnlsw-ip4base-int-aes256gcm-mrr
    # ^ ipsecswANDipsecintANDaes_256_gcmANDtnl_1
    l2_interface_vlan_tag_rewrite: '0'  # virl
    l2_interface_vlan_tag_rewrite_reply: '0'  # virl
    l2_patch_add_del: '0'  # perf
    l2_patch_add_del_reply: '0'  # perf
    # ^^ tc01-64B-1c-avf-eth-l2patch-mrr
    # ^ l2patchANDdrv_avf
    lisp_add_del_adjacency: '0'  # virl
    lisp_add_del_adjacency_reply: '0'  # virl
    lisp_add_del_local_eid: '0'  # virl
    lisp_add_del_local_eid_reply: '0'  # virl
    lisp_add_del_locator: '0'  # virl
    lisp_add_del_locator_reply: '0'  # virl
    lisp_add_del_locator_set: '0'  # virl
    lisp_add_del_locator_set_reply: '0'  # virl
    lisp_add_del_remote_mapping: '0'  # virl
    lisp_add_del_remote_mapping_reply: '0'  # virl
    lisp_eid_table_details: '0'  # virl
    lisp_eid_table_dump: '0'  # virl
    lisp_enable_disable: '0'  # virl
    lisp_enable_disable_reply: '0'  # virl
    lisp_locator_set_details: '0'  # virl
    lisp_locator_set_dump: '0'  # virl
    lisp_map_resolver_details: '0'  # virl
    lisp_map_resolver_dump: '0'  # virl
    macip_acl_add: '0'  # perf
    macip_acl_add_reply: '0'  # perf
    macip_acl_details: '0'  # perf
    macip_acl_dump: '0'  # perf
    macip_acl_interface_add_del: '0'  # perf
    macip_acl_interface_add_del_reply: '0'  # perf
    macip_acl_interface_get: '0'  # perf
    macip_acl_interface_get_reply: '0'  # perf
    # ^^^^^^^^ tc01-64B-1c-eth-l2bdbasemaclrn-macip-iacl1sl-100flows-mrr
    # ^ macipANDacl1AND100_flows
    memif_create: '0'  # dev
    memif_create_reply: '0'  # dev
    memif_details: '0'  # dev
    memif_dump: '0'  # dev
    memif_socket_filename_add_del: '0'  # dev
    memif_socket_filename_add_del_reply: '0'  # dev
    nat_det_add_del_map: '0'  # perf
    nat_det_add_del_map_reply: '0'  # perf
    nat44_interface_add_del_feature: '0'  # perf
    nat44_interface_add_del_feature_reply: '0'  # perf
    # ^^^^ tc01-64B-1c-ethip4udp-ip4base-nat44-mrr
    # ^ nat44NOTscaleNOTsrc_user_1
    proxy_arp_intfc_enable_disable: '0'  # virl
    proxy_arp_intfc_enable_disable_reply: '0'  # virl
    show_lisp_status: '0'  # virl
    show_lisp_status_reply: '0'  # virl
    show_threads: '0'  # dev
    show_threads_reply: '0'  # dev
    show_version: '0'  # dev setup
    show_version_reply: '0'  # dev setup
    sr_localsid_add_del: '0'  # perf
    sr_localsid_add_del_reply: '0'  # perf
    sr_localsids_details: '0'  # perf
    sr_localsids_dump: '0'  # perf
    sr_policies_details: '0'  # perf
    sr_policies_dump: '0'  # perf
    sr_policy_add: '0'  # perf
    sr_policy_add_reply: '0'  # perf
    sr_set_encap_source: '0'  # perf
    sr_set_encap_source_reply: '0'  # perf
    sr_steering_add_del: '0'  # perf
    sr_steering_add_del_reply: '0'  # perf
    sr_steering_pol_details: '0'  # perf
    sr_steering_pol_dump: '0'  # perf
    # x^ tc01-78B-1c-ethip6ip6-ip6base-srv6enc1sid-mrr
    # ^ srv6_1sid
    sw_interface_add_del_address: '0'  # dev
    sw_interface_add_del_address_reply: '0'  # dev
    sw_interface_bond_details: '0'  # perf
    sw_interface_bond_dump: '0'  # perf
    # ^^ see bond_*
    sw_interface_details: '0'  # dev setup
    sw_interface_dump: '0'  # dev setup
    sw_interface_ip6nd_ra_config: '0'  # dev
    sw_interface_ip6nd_ra_config_reply: '0'  # dev
    sw_interface_rx_placement_details: '0'  # perf
    sw_interface_rx_placement_dump: '0'  # perf
    # ^^ tc01-64B-1c-dot1q-l2bdbasemaclrn-eth-2memif-1dcr-mrr
    # ^ dot1qANDl2bdmaclrnANDbaseANDmemif
    sw_interface_set_flags: '0'  # dev
    sw_interface_set_flags_reply: '0'  # dev
    sw_interface_set_l2_bridge: '0'  # dev
    sw_interface_set_l2_bridge_reply: '0'  # dev
    sw_interface_set_l2_xconnect: '0'  # dev
    sw_interface_set_l2_xconnect_reply: '0'  # dev
    sw_interface_set_rx_placement: '0'  # perf
    sw_interface_set_rx_placement_reply: '0'  # perf
    # ^^ tc01-64B-1c-eth-l2xcbase-eth-2memif-1dcr-mrr
    # ^ l2xcfwdANDbaseANDlxcANDmemif
    sw_interface_set_table: '0'  # dev
    sw_interface_set_table_reply: '0'  # dev
    sw_interface_set_unnumbered: '0'  # perf
    sw_interface_set_unnumbered_reply: '0'  # perf
    # ^^ see ipsec_tunnel_if_add_del
    sw_interface_set_vxlan_bypass: '0'  # dev
    sw_interface_set_vxlan_bypass_reply: '0'  # dev
    sw_interface_slave_details: '0'  # perf
    sw_interface_slave_dump: '0'  # perf
    # ^^ see bond_*
    sw_interface_tap_v2_dump: '0'  # dev
    sw_interface_tap_v2_details: '0'  # dev
    sw_interface_vhost_user_details: '0'  # dev
    sw_interface_vhost_user_dump: '0'  # dev
    tap_create_v2: '0'  # dev
    tap_create_v2_reply: '0'  # dev
    vxlan_add_del_tunnel: '0'  # virl
    vxlan_add_del_tunnel_reply: '0'  # virl
    vxlan_tunnel_details: '0'  # virl
    vxlan_tunnel_dump: '0'  # virl


# TODO: Create an on-demand perf verify job with a tag expression
# covering API calls used only in perf tests,
# and maintain the expression as device test gets more coverage.
# Currently two triggers are needed (3n vs 2n):
# csit-3n-skx-perftest
# mrrAND1cAND64bANDnic_intel-x710ANDip4fwdANDiaclANDacl10AND100_flows
# mrrAND1cAND64bANDnic_intel-x710ANDl2bdmaclrnANDbaseANDdrv_avf
# mrrAND1cAND64bANDnic_intel-x710ANDl2patchANDdrv_avf
# mrrAND1cAND64bANDnic_intel-x710ANDnat44NOTscaleNOTsrc_user_1
# mrrAND1cAND64bANDnic_intel-x710ANDdot1qANDl2bdmaclrnANDbaseANDmemif
# mrrAND1cAND64bANDnic_intel-x710ANDl2xcfwdANDbaseANDlxcANDmemif
# mrrAND1cAND64bANDnic_intel-x710ANDl2xcfwdANDlbond_1l
# mrrAND1cAND64bANDnic_intel-x710ANDmacipANDacl1AND100_flows
# mrrAND1cAND78bANDnic_intel-x710ANDsrv6_1sid
# csit-2n-skx-perftest
# mrrAND1cAND64bANDnic_intel-x710ANDdot1qANDbaseANDdrv_avfANDgbp

# TODO: Once device job has complete API coverage,
# add a check to make sure each message was encountered;
# failure means we need to add more tests to device test job.
# Alternatively, add an option to compile messages actually
# used or encountered, so CSIT knows what to remove from mapping.
