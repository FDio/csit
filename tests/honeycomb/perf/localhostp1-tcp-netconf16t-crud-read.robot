# Copyright (c) 2017 Cisco and/or its affiliates.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

*** Settings ***
| Resource | resources/libraries/robot/honeycomb/performance.robot
| ...
| Suite Setup | Run Keywords
| ... | Configure Honeycomb Netconf threads | ${node} | ${16}
| ... | AND | Honeycomb Performance Suite Setup Generic | ${node}
| ...
| Suite Teardown | Honeycomb Performance Suite Teardown Generic | ${node}
| ...
| Force Tags | HC_PERF
| ...
| Documentation | *Base Netconf operational read test suite with sixteen Netconf
| ... | threads.*
| ...
| ... | *[Top] Network Topologies:* DUT1 single-node topology.
| ... | *[Enc] Packet Encapsulations:* Eth-IPv4-TCP.
| ... | *[Cfg] DUT configuration:* Default
| ... | *[Ver] verification:* DUT verifies Honeycomb's response times with zero
| ... | error or loss tolerance. Test packets are generated by DUT1 on localhost
| ... | loopback interface.
| ... | Traffic profile contains flow-groups containing REST requests
| ... | for operational reads.
| ... | *[Ref] Applicable standard specifications:* RFC6241.

*** Test Cases ***
| TC01: Base operational read with 1 TG thread
| | [Documentation]
| | ... | [Ver] Measure response time using single trial throughput test
| | ... | with 100K requests generated in a single thread.
| | ${cycles}= | Set Variable | ${1}
| | ${threads}= | Set Variable | ${1}
| | ${entries}= | Set Variable | ${100000}
| | Run base operational read performance trial
| | ... | ${node} | ${cores} | ${cycles} | ${threads} | ${entries}

| TC02: Base operational read with 2 TG threads
| | [Documentation]
| | ... | [Ver] Measure response time using single trial throughput test
| | ... | with 100K requests generated in two threads.
| | ${cycles}= | Set Variable | ${1}
| | ${threads}= | Set Variable | ${2}
| | ${entries}= | Set Variable | ${50000}
| | Run base operational read performance trial
| | ... | ${node} | ${cores} | ${cycles} | ${threads} | ${entries}

| TC03: Base operational read with 4 TG threads
| | [Documentation]
| | ... | [Ver] Measure response time using single trial throughput test
| | ... | with 100K requests generated in four threads.
| | ${cycles}= | Set Variable | ${1}
| | ${threads}= | Set Variable | ${4}
| | ${entries}= | Set Variable | ${25000}
| | Run base operational read performance trial
| | ... | ${node} | ${cores} | ${cycles} | ${threads} | ${entries}

| TC04: Base operational read with 8 TG threads
| | [Documentation]
| | ... | [Ver] Measure response time using single trial throughput test
| | ... | with 100K requests generated in eigth threads.
| | ${cycles}= | Set Variable | ${1}
| | ${threads}= | Set Variable | ${8}
| | ${entries}= | Set Variable | ${12500}
| | Run base operational read performance trial
| | ... | ${node} | ${cores} | ${cycles} | ${threads} | ${entries}

| TC05: Base operational read with 16 TG threads
| | [Documentation]
| | ... | [Ver] Measure response time using single trial throughput test
| | ... | with 100K requests generated in sixteen threads.
| | ${cycles}= | Set Variable | ${1}
| | ${threads}= | Set Variable | ${16}
| | ${entries}= | Set Variable | ${6250}
| | Run base operational read performance trial
| | ... | ${node} | ${cores} | ${cycles} | ${threads} | ${entries}
