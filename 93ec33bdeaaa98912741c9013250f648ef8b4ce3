{
  "comments": [
    {
      "key": {
        "uuid": "067485ea_2d583784",
        "filename": "PyPI/jumpavg/jumpavg/AvgStdevMetadataFactory.py",
        "patchSetId": 27
      },
      "lineNbr": 50,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-06-27T13:27:08Z",
      "side": 1,
      "message": "Hmm, I have never seen this happen. I guess rounding errors could cause this.",
      "range": {
        "startLine": 50,
        "startChar": 21,
        "endLine": 50,
        "endChar": 30
      },
      "revId": "93ec33bdeaaa98912741c9013250f648ef8b4ce3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ab5eac9_2318538f",
        "filename": "PyPI/jumpavg/jumpavg/AvgStdevMetadataFactory.py",
        "patchSetId": 27
      },
      "lineNbr": 51,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-06-27T13:27:08Z",
      "side": 1,
      "message": "This should not be needed. I think Python does not support +Inf or NaN.",
      "range": {
        "startLine": 51,
        "startChar": 8,
        "endLine": 51,
        "endChar": 11
      },
      "revId": "93ec33bdeaaa98912741c9013250f648ef8b4ce3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1cbcb34_2f0fdad3",
        "filename": "resources/tools/presentation/generator_CPTA.py",
        "patchSetId": 27
      },
      "lineNbr": 121,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-06-27T13:27:08Z",
      "side": 1,
      "message": "Why this needs to be different from line 131?",
      "range": {
        "startLine": 121,
        "startChar": 38,
        "endLine": 121,
        "endChar": 43
      },
      "revId": "93ec33bdeaaa98912741c9013250f648ef8b4ce3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d0caef9_8c71f38f",
        "filename": "resources/tools/presentation/generator_CPTA.py",
        "patchSetId": 27
      },
      "lineNbr": 158,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-06-27T13:27:08Z",
      "side": 1,
      "message": "I think you can write:\n   idx, (x, y)\nto make line 161 more readable.",
      "range": {
        "startLine": 158,
        "startChar": 12,
        "endLine": 158,
        "endChar": 21
      },
      "revId": "93ec33bdeaaa98912741c9013250f648ef8b4ce3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45518baf_91f05986",
        "filename": "resources/tools/presentation/generator_CPTA.py",
        "patchSetId": 27
      },
      "lineNbr": 202,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-06-27T13:27:08Z",
      "side": 1,
      "message": "Why not keep it float?",
      "range": {
        "startLine": 202,
        "startChar": 33,
        "endLine": 202,
        "endChar": 36
      },
      "revId": "93ec33bdeaaa98912741c9013250f648ef8b4ce3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "477cab20_23d8b044",
        "filename": "resources/tools/presentation/input_data_parser.py",
        "patchSetId": 27
      },
      "lineNbr": 522,
      "author": {
        "id": 1263
      },
      "writtenOn": "2018-06-27T13:27:08Z",
      "side": 1,
      "message": "As the test message will be compatible with both patterns during the transition period, the BMRR pattern should be tried first to get longer history of more precise detection.",
      "range": {
        "startLine": 522,
        "startChar": 40,
        "endLine": 522,
        "endChar": 49
      },
      "revId": "93ec33bdeaaa98912741c9013250f648ef8b4ce3",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": false
    }
  ]
}